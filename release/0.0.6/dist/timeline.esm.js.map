{"version":3,"file":"timeline.esm.js","sources":["../src/consts.ts","../src/utils.ts","../src/dblcheck.ts","../src/KeytimesStructure.ts","../src/HeaderAreaStructure.ts","../src/KeyframesStructure.ts","../src/PropertiesStructure.ts","../src/ValuesStructure.ts","../src/ScrollAreaStructure.ts","../src/ControlAreaStructure.ts","../src/Info.ts","../src/TimelineInfo.ts","../src/Timeline.ts"],"sourcesContent":["export const PREFIX = `scenejs_editor_`;\n\nexport const CSS2 = `\n.item_info {\n    position: fixed;\n    right: 0;\n    top: 0;\n    width: 200px;\n    background: #000;\n}\n.options_area {\n\n}\n.option_area {\n    position: relative;\n    border-bottom: 1px solid #777;\n    box-sizing: border-box;\n    white-space: nowrap;\n    background: rgba(90, 90, 90, 0.7);\n    font-size: 13px;\n    font-weight: bold;\n    color: #eee;\n    display: flex;\n}\n.option_name, .option_value {\n    width: 50%;\n    height: 30px;\n    line-height: 20px;\n    box-sizing: border-box;\n    padding: 5px;\n}\n.option_name {\n    border-right: 1px solid #999;\n}\n.option_value input {\n    appearance: none;\n    -webkit-appearance: none;\n    outline: none;\n    position: relative;\n    display: block;\n    width: 100%;\n    height: 100%;\n    background: transparent;\n    color: #4af;\n    font-weight: bold;\n    background: none;\n    border: 0;\n    box-sizing: border-box;\n}\n`.replace(/\\.([^{,\\s\\d.]+)/g, `.${PREFIX}$1`);\n\nexport const CSS = `\n.timeline {\n  position: fixed;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  width: 100%;\n  font-size: 0;\n  background: #000;\n  display: flex;\n  flex-direction: column;\n}\n.header_area, .scroll_area {\n   width: 100%;\n   position: relative;\n  display: flex;\n  -webkit-align-items: flex-start;\n  align-items: flex-start;\n}\n.header_area {\n  position: relative;\n  z-index: 10;\n  top: 0;\n  height: 30px;\n  min-height: 30px;\n}\n.header_area .keyframes {\n  padding: 0px;\n}\n.header_area .properties_area,\n.header_area .keyframes_area,\n.header_area .values_area,\n.header_area .keyframes_scroll_area {\n    height: 100%;\n}\n.header_area .property, .header_area .value, .header_area .keyframes {\n  height: 100%;\n}\n.header_area .property {\n    line-height: 30px;\n}\n.value .add {\n    text-align: center;\n    color: #fff;\n    line-height: 30px;\n    font-weight: bold;\n    font-size: 20px;\n    cursor: pointer;\n}\n.header_area .keyframes_area::-webkit-scrollbar {\n    display: none; // Safari and Chrome\n}\n.header_area .keyframe_cursor {\n    position: absolute;\n    border-top: 10px solid #4af;\n    border-left: 6px solid transparent;\n    border-right: 6px solid transparent;\n    width: 0;\n    height: 0;\n    bottom: 0;\n    top: auto;\n    background: none;\n    cursor: pointer;\n}\n.control_area .keyframes {\n    padding-left: 10px;\n}\n.play_control_area {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n}\n.play_control_area .control {\n    position: relative;\n    display: inline-block;\n    vertical-align: middle;\n    color: white;\n    margin: 0px 15px;\n}\n.play {\n    border-left: 14px solid white;\n    border-top: 8px solid transparent;\n    border-bottom: 8px solid transparent;\n}\n.pause {\n    border-left: 4px solid #fff;\n    border-right: 4px solid #fff;\n    width: 6px;\n    height: 16px;\n}\n.prev {\n    border-right: 10px solid white;\n    border-top: 6px solid transparent;\n    border-bottom: 6px solid transparent;\n}\n.prev:before {\n    position: absolute;\n    content: \"\";\n    width: 3px;\n    height: 10px;\n    top: 0;\n    right: 100%;\n    transform: translate(0, -50%);\n    background: white;\n}\n.next {\n    border-left: 10px solid white;\n    border-top: 6px solid transparent;\n    border-bottom: 6px solid transparent;\n}\n.next:before {\n    position: absolute;\n    content: \"\";\n    width: 3px;\n    height: 10px;\n    top: 0;\n    transform: translate(0, -50%);\n    background: white;\n}\n.keytime {\n  position: relative;\n  display: inline-block;\n  height: 100%;\n  font-size: 13px;\n  font-weight: bold;\n  color: #777;\n}\n.keytime:last-child {\n  max-width: 0px;\n}\n.keytime span {\n  position: absolute;\n  line-height: 1;\n  bottom: 12px;\n  display: inline-block;\n  transform: translate(-50%);\n  color: #eee;\n}\n.keytime .graduation {\n  position: absolute;\n  bottom: 0;\n  width: 1px;\n  height: 10px;\n  background: #777;\n  transform: translate(-50%);\n}\n.keytime .graduation.half {\n  left: 50%;\n  height: 7px;\n}\n.keytime .graduation.quarter {\n  left: 25%;\n  height: 5px;\n}\n.keytime .graduation.quarter3 {\n  left: 75%;\n  height: 5px;\n}\n.scroll_area {\n  position: relative;\n  width: 100%;\n  height: calc(100% - 60px);\n  overflow: auto;\n}\n.properties_area, .keyframes_area, .values_area {\n  display: inline-block;\n  position: relative;\n  font-size: 16px;\n  overflow: auto;\n}\n\n.properties_area::-webkit-scrollbar, .keyframes_area::-webkit-scrollbar {\n    display: none; // Safari and Chrome\n}\n.properties_area {\n  width: 30%;\n  max-width: 200px;\n  box-sizing: border-box;\n}\n.values_area {\n    width: 50px;\n    min-width: 50px;\n    display: inline-block;\n    border-right: 1px solid #999;\n    box-sizing: border-box;\n}\n.value input {\n    appearance: none;\n    -webkit-appearance: none;\n    outline: none;\n    position: relative;\n    display: block;\n    width: 100%;\n    height: 100%;\n    background: transparent;\n    color: #4af;\n    font-weight: bold;\n    background: none;\n    border: 0;\n    box-sizing: border-box;\n    text-align: center;\n}\n.value {\n\n}\n.alt .value input {\n    cursor: ew-resize;\n}\n.value[data-object=\"1\"] input {\n    display: none;\n}\n.properties_scroll_area {\n  display: inline-block;\n  min-width: 100%;\n}\n.keyframes_area {\n  flex: 1;\n}\n.keyframes_scroll_area {\n  position: relative;\n  min-width: 300px;\n}\n.keyframes, .property, .value {\n  position: relative;\n  height: 30px;\n  line-height: 30px;\n  border-bottom: 1px solid #777;\n  box-sizing: border-box;\n  white-space: nowrap;\n  background: rgba(90, 90, 90, 0.7);\n  z-index: 1;\n}\n\n.property {\n  padding-left: 10px;\n  box-sizing: border-box;\n  font-size: 13px;\n  font-weight: bold;\n  color: #eee;\n}\n.property .remove {\n    position: absolute;\n    display: inline-block;\n    cursor: pointer;\n    width: 18px;\n    height: 18px;\n    top: 0;\n    bottom: 0;\n    right: 10px;\n    margin: auto;\n    border-radius: 50%;\n    border: 2px solid #fff;\n    vertical-align: middle;\n    display: none;\n    margin-left: 10px;\n    box-sizing: border-box;\n}\n.property .remove:before, .property .remove:after {\n    position: absolute;\n    content: \"\";\n    width: 8px;\n    height: 2px;\n    border-radius: 1px;\n    background: #fff;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    margin: auto;\n}\n.property .remove:before {\n    transform: rotate(45deg);\n}\n.property .remove:after {\n    transform: rotate(-45deg);\n}\n.property:hover .remove {\n    display: inline-block;\n}\n\n[data-item=\"1\"], [data-item=\"1\"] .add {\n    height: 30px;\n    line-height: 30px;\n}\n.time_area {\n    font-size: 13px;\n    color: #4af;\n    line-height: 30px;\n    font-weight: bold;\n    height: 100%;\n    line-height: 30px;\n    border: 0;\n    background: transparent;\n    outline: 0;\n}\n.time_area:after {\n    content: \"s\";\n}\n.property .arrow {\n    position: relative;\n    display: inline-block;\n    margin-right: 5px;\n    width: 0;\n    vertical-align: middle;\n    cursor: pointer;\n    border-top: 6px solid #eee;\n    border-left: 4px solid transparent;\n    border-right: 4px solid transparent;\n}\n.property[data-fold=\"1\"] .arrow {\n    border-top: 4px solid transparent;\n    border-bottom: 4px solid transparent;\n    border-right: 0;\n    border-left: 6px solid #eee;\n    margin-left: 2px;\n}\n.property[data-object=\"0\"] .arrow {\n    display: none;\n}\n.property.fold, .keyframes.fold, .value.fold {\n    display: none;\n}\n.property.select, .value.select, .keyframes.select {\n    background: rgba(120, 120, 120, 0.7);\n}\n.keyframes {\n\n}\n.keyframe_delay {\n  position: absolute;\n  height: 100%;\n  top: 0;\n  left: 0;\n  background: #4af;\n  opacity: 0.2;\n  z-index: 0;\n}\n.keyframe_line {\n  position: absolute;\n  height: 8px;\n  top: 0;\n  bottom: 0;\n  margin: auto;\n  background: #666;\n  z-index: 0;\n}\n.keyframe {\n  position: absolute;\n  font-size: 0px;\n  width: 12px;\n  height: 12px;\n  top: 0px;\n  bottom: 0px;\n  margin: auto;\n  background: #fff;\n  border: 2px solid #383838;\n  border-radius: 2px;\n  box-sizing: border-box;\n  transform: translate(-50%) rotate(45deg);\n  z-index: 1;\n  cursor: pointer;\n}\n.keyframe[data-no=\"1\"] {\n    opacity: 0.2;\n}\n.select .keyframe {\n    border-color: #555;\n}\n.keyframe.select {\n    background: #4af;\n}\n.keyframes_container, .line_area {\n  position: relative;\n  width: calc(100% - 30px);\n  left: 15px;\n  height: 100%;\n}\n.line_area {\n  position: absolute;\n  top: 0;\n  z-index: 0;\n}\n.keyframe_cursor {\n  position: absolute;\n  top: 0;\n  z-index: 1;\n  background: #4af;\n  width: 1px;\n  height: 100%;\n  left: 15px;\n  transform: translate(-50%);\n}\n.division_line {\n  position: absolute;\n  background: #333;\n  width: 1px;\n  height: 100%;\n  transform: translate(-50%);\n}\n`.replace(/\\.([^{,\\s\\d.]+)/g, `.${PREFIX}$1`);\n\nexport const DURATION = \"duration\";\nexport const FILL_MODE = \"fillMode\";\nexport const DIRECTION = \"direction\";\nexport const ITERATION_COUNT = \"iterationCount\";\nexport const DELAY = \"delay\";\nexport const EASING = \"easing\";\nexport const PLAY_SPEED = \"playSpeed\";\nexport const EASING_NAME = \"easingName\";\nexport const ITERATION_TIME = \"iterationTime\";\nexport const PAUSED = \"paused\";\nexport const ENDED = \"ended\";\nexport const TIMEUPDATE = \"timeupdate\";\nexport const ANIMATE = \"animate\";\nexport const PLAY = \"play\";\nexport const RUNNING = \"running\";\nexport const ITERATION = \"iteration\";\nexport const START_ANIMATION = \"startAnimation\";\nexport const PAUSE_ANIMATION = \"pauseAnimation\";\nexport const ALTERNATE = \"alternate\";\nexport const REVERSE = \"reverse\";\nexport const ALTERNATE_REVERSE = \"alternate-reverse\";\nexport const NORMAL = \"normal\";\nexport const INFINITE = \"infinite\";\nexport const PLAY_STATE = \"playState\";\nexport const PLAY_CSS = \"playCSS\";\nexport const PREV_TIME = \"prevTime\";\nexport const TICK_TIME = \"tickTime\";\nexport const CURRENT_TIME = \"currentTime\";\nexport const SELECTOR = \"selector\";\nexport const TRANSFORM_NAME = \"transform\";\n","import { PREFIX } from \"./consts\";\nimport Scene, { SceneItem, Frame } from \"scenejs\";\nimport {\n    hasClass as hasClass2,\n    addClass as addClass2,\n    removeClass as removeClass2,\n    IObject,\n    isObject,\n    isArray,\n    isUndefined,\n} from \"@daybrush/utils\";\nimport { ElementStructure, TimelineInfo } from \"./types\";\n\nexport function numberFormat(num: number, count: number, isRight?: boolean) {\n    const length = `${num}`.length;\n    const arr = [];\n\n    if (isRight) {\n        arr.push(num);\n    }\n    for (let i = length; i < count; ++i) {\n        arr.push(0);\n    }\n    if (!isRight) {\n        arr.push(num);\n    }\n    return arr.join(\"\");\n}\nexport function applyStyle(el: HTMLElement, style: IObject<any>) {\n    for (const name in style) {\n        el.style[name] = style[name];\n    }\n}\nexport function findIndexByProperty(selectedProperty: string, structures: ElementStructure[]) {\n    return structures.findIndex(\n        ({ dataset: { key } }) => key === selectedProperty,\n    );\n}\n\nexport function createElement(structure: ElementStructure) {\n    const { selector, dataset, attr, style, html } = structure;\n\n    const classNames = selector.match(/\\.([^.#\\s])+/g) || [];\n    const tag = (selector.match(/^[^.#\\s]+/g) || [])[0] || \"div\";\n    const id = (selector.match(/#[^.#\\s]+/g) || [])[0] || \"\";\n    const el = document.createElement(tag);\n\n    id && (el.id = id.replace(/^#/g, \"\"));\n    el.className = classNames.map(name => `${PREFIX}${name.replace(/^\\./g, \"\")}`).join(\" \");\n\n    if (dataset) {\n        for (const name in dataset) {\n            el.setAttribute(`data-${name}`, dataset[name]);\n        }\n    }\n    if (attr) {\n        for (const name in attr) {\n            el.setAttribute(name, attr[name]);\n        }\n    }\n    if (style) {\n        applyStyle(el, style);\n    }\n    if (html) {\n        el.innerHTML = html;\n    }\n    return el;\n}\nexport function updateElement(prevStructure: ElementStructure, nextStructure: ElementStructure) {\n    const { dataset, attr, style, html, element } = nextStructure;\n    if (dataset) {\n        for (const name in dataset) {\n            element.setAttribute(`data-${name}`, dataset[name]);\n        }\n    }\n    if (attr) {\n        for (const name in attr) {\n            element.setAttribute(name, attr[name]);\n        }\n    }\n    style && applyStyle(element, style);\n    if (prevStructure.html !== nextStructure.html) {\n        element.innerHTML = html;\n    }\n}\nexport function keys(value: object) {\n    const arr = [];\n    for (const name in value) {\n        arr.push(name);\n    }\n    return arr;\n}\nexport function toValue(value: any) {\n    const type = typeof value;\n    if (type === \"object\") {\n        if (Array.isArray(value)) {\n            return `[${value.join(\", \")}]`;\n        }\n        return `{${keys(value).map(k => `${k}: ${toValue(value[k])}`).join(\", \")}}`;\n    }\n    return value;\n}\nexport function flatObject(obj: IObject<any>, newObj: IObject<any> = {}) {\n\n    for (const name in obj) {\n        const value = obj[name];\n\n        if (isObject(value)) {\n            const nextObj = flatObject(isFrame(value) ? value.get() : value);\n\n            for (const nextName in nextObj) {\n                newObj[`${name}///${nextName}`] = nextObj[nextName];\n            }\n        } else {\n            newObj[name] = value;\n        }\n    }\n    return newObj;\n}\n\nexport function getTarget<T extends HTMLElement>(target: T, conditionCallback: (el: Element) => boolean): T {\n    let parentTarget = target;\n\n    while (parentTarget && parentTarget !== document.body) {\n        if (conditionCallback(parentTarget)) {\n            return parentTarget;\n        }\n        parentTarget = parentTarget.parentNode as T;\n    }\n    return null;\n}\n\nexport function hasClass(target: Element, className: string) {\n    return hasClass2(target, `${PREFIX}${className}`);\n}\nexport function addClass(target: Element, className: string) {\n    return addClass2(target, `${PREFIX}${className}`);\n}\nexport function removeClass(target: Element, className: string) {\n    return removeClass2(target, `${PREFIX}${className}`);\n}\nexport function findStructure(\n    selector: string,\n    structure: ElementStructure | ElementStructure[],\n    multi: true,\n    arr?: ElementStructure[],\n): ElementStructure[];\nexport function findStructure(\n    selector: string,\n    structure: ElementStructure | ElementStructure[],\n    multi?: false,\n    arr?: ElementStructure[],\n): ElementStructure;\nexport function findStructure(\n    selector: string,\n    structure: ElementStructure | ElementStructure[],\n    multi: true | false,\n    arr?: ElementStructure[],\n): ElementStructure | ElementStructure[];\nexport function findStructure(\n    selector: string,\n    structure: ElementStructure | ElementStructure[],\n    multi: boolean = false,\n    arr: ElementStructure[] = [],\n): ElementStructure | ElementStructure[] {\n    if (isArray(structure)) {\n        const length = structure.length;\n\n        for (let i = 0; i < length; ++i) {\n            findStructure(selector, structure[i], multi, arr);\n        }\n    } else {\n        if (structure.selector === selector) {\n            arr.push(structure);\n        }\n        if (!multi && arr.length) {\n            return arr[0];\n        }\n        if (structure.children) {\n            findStructure(selector, structure.children, multi, arr);\n        }\n    }\n    return multi ? arr : arr[0];\n}\nexport function isScene(value: any): value is Scene {\n    return !!(value.constructor as typeof Scene).prototype.getItem;\n}\nexport function isSceneItem(value: any): value is SceneItem {\n    return !!(value.constructor as typeof SceneItem).prototype.getFrame;\n}\nexport function isFrame(value: any): value is Frame {\n    return !!(value.constructor as typeof Frame).prototype.toCSS;\n}\nexport function splitProperty(scene: Scene, property: string) {\n    const names = property.split(\"///\");\n    const length = names.length;\n    let item: Scene | SceneItem = scene;\n    let i;\n\n    for (i = 0; i < length; ++i) {\n        if (isSceneItem(item)) {\n            break;\n        }\n        item = scene.getItem(names[i]);\n    }\n    return {\n        item: item as SceneItem,\n        names: names.slice(0, i),\n        properties: names.slice(i),\n    };\n}\nexport function getSceneItem(scene: Scene, names: string[]): SceneItem {\n    return names.reduce<any>(\n        (nextScene, name) => nextScene.getItem(name),\n        scene,\n    );\n}\n\nexport function findElementIndexByPosition(elements: HTMLElement[], pos: number): number {\n    const length = elements.length;\n\n    for (let index = 0; index < length; ++index) {\n        const el = elements[index];\n        const box = el.getBoundingClientRect();\n        const top = box.top;\n        const bottom = top + box.height;\n\n        if (top <= pos && pos < bottom) {\n            return index;\n        }\n    }\n    return -1;\n}\n","import { now } from \"@daybrush/utils\";\n\nlet prevTime = 0;\nlet prevX = -1;\nlet prevY = -1;\n\nexport function dblCheck(\n    isDrag: boolean,\n    e: any,\n    clientX: number,\n    clientY: number,\n    callback: (e: any, clientX: number, clientY: number) => void,\n) {\n    const currentTime = now();\n\n    if (!isDrag) {\n        if (\n            prevX === clientX &&\n            prevY === clientY &&\n            currentTime - prevTime <= 500\n        ) {\n            callback(e, clientX, clientY);\n        }\n        prevX = clientX;\n        prevY = clientY;\n        prevTime = currentTime;\n    }\n}\n","export function getKeytimesStructure(maxTime: number) {\n    const keytimes = [];\n\n    for (let time = 0; time <= maxTime; ++time) {\n        keytimes.push({\n            key: time,\n            dataset: {\n                time,\n            },\n            selector: \".keytime\",\n            style: {\n                width: `${100 / maxTime}%`,\n            },\n            children: [\n                {\n                    selector: \"span\",\n                    html: `${time}`,\n                },\n                {selector: \".graduation.start\"},\n                {selector: \".graduation.quarter\"},\n                {selector: \".graduation.half\"},\n                {selector: \".graduation.quarter3\"},\n            ],\n        });\n    }\n    return keytimes;\n}\nexport function getLinesStructure(maxTime: number) {\n    const lines = [];\n\n    for (let time = 0; time <= maxTime; ++time) {\n        lines.push({\n            key: time,\n            selector: \".division_line\",\n            style: {\n                left: `${100 / maxTime * time}%`,\n            },\n        });\n    }\n    return lines;\n}\n","import { getKeytimesStructure } from \"./KeytimesStructure\";\nimport { Ids, ElementStructure } from \"./types\";\n\nexport function getHeaderAreaStructure(ids: Ids, zoom: number, maxDuration: number, maxTime: number): ElementStructure {\n    return {\n        selector: \".header_area\",\n        ref: e => {\n            ids.keyframesScrollAreas = [];\n            ids.keyframesAreas = [];\n            ids.propertiesAreas = [];\n        },\n        children: [\n            {\n                ref: (e: ElementStructure) => {\n                    ids.propertiesAreas[0] = e;\n                },\n                selector: \".properties_area\",\n                children: [\n                    {\n                        selector: \".property\",\n                        html: \"Name\",\n                    },\n                ],\n            },\n            {\n                selector: \".values_area\",\n                children: {\n                    selector: \".value\",\n                    children: {\n                        key: \"add\",\n                        selector: \".add\",\n                        html: \"+\",\n                        ref: (e: ElementStructure) => {\n                            ids.addItem = e;\n                        },\n                    },\n                },\n            },\n            getKeytimesAreaStructure(ids, zoom, maxDuration, maxTime),\n        ],\n    };\n}\n\nexport function getKeytimesAreaStructure(\n    ids: Ids,\n    zoom: number,\n    maxDuration: number,\n    maxTime: number,\n): ElementStructure {\n    return {\n        ref: e => {\n            ids.keyframesAreas[0] = e;\n        },\n        selector: \".keyframes_area\",\n        children: {\n            style: {\n                minWidth: `${50 * maxTime}px`,\n                width: `${Math.min(maxDuration ? maxTime / maxDuration : 1, 2) * zoom * 100}%`,\n            },\n            dataset: {\n                width: Math.min(maxDuration ? maxTime / maxDuration : 1, 2),\n            },\n            ref: (e: ElementStructure) => {\n                ids.keyframesScrollAreas[0] = e;\n            },\n            selector: \".keyframes_scroll_area\",\n            children: {\n                ref: e => {\n                    ids.cursors = [];\n                },\n                selector: \".keyframes\",\n                children: [\n                    {\n                        ref: e => {\n                            ids.keytimesContainer = e;\n                        },\n                        selector: \".keyframes_container\",\n                        children: getKeytimesStructure(maxTime),\n                    },\n                    {\n                        selector: \".keyframe_cursor\",\n                        ref: e => {\n                            ids.cursors[0] = e;\n                        },\n                    },\n                ],\n            },\n        },\n    };\n}\n","import { toValue, applyStyle, isSceneItem } from \"./utils\";\nimport { ElementStructure, Ids, TimelineInfo, PropertiesInfo } from \"./types\";\nimport { getLinesStructure } from \"./KeytimesStructure\";\nimport { isUndefined } from \"@daybrush/utils\";\n\nexport function updateKeyframesStructure(keyframes: ElementStructure[], maxTime: number) {\n    keyframes.forEach(keyframe => {\n        const {selector, dataset, style, element} = keyframe;\n        if (selector === \".keyframe\") {\n            style.left = `${dataset.time / maxTime * 100}%`;\n        } else {\n            style.left = `${dataset.from / maxTime * 100}%`,\n            style.width = `${(dataset.to - dataset.from) / maxTime * 100}%`;\n        }\n        applyStyle(element, style);\n    });\n}\n\nexport function getKeyframesAreaStructure(\n    ids: Ids,\n    keyframesList: ElementStructure[],\n    zoom: number,\n    maxDuration: number,\n    maxTime: number,\n): ElementStructure {\n    const width = Math.min(maxDuration ? maxTime / maxDuration : 1, 2);\n    return {\n        ref: e => {\n            ids.keyframesAreas[1] = e;\n        },\n        selector: \".keyframes_area\",\n        children: {\n            style: {\n                minWidth: `${50 * maxTime}px`,\n                width: `${width * zoom * 100}%`,\n            },\n            dataset: {\n                width,\n            },\n            ref: e => {\n                ids.keyframesScrollAreas[1] = e;\n            },\n            selector: \".keyframes_scroll_area\",\n            children: getKeyframesScrollAreaChildrenStructure(ids, keyframesList, maxTime),\n        },\n    };\n}\nexport function getKeyframesScrollAreaChildrenStructure(\n    ids: Ids,\n    keyframesList: ElementStructure[],\n    maxTime: number,\n): ElementStructure[] {\n    return [\n        ...keyframesList,\n        {\n            key: \"cursor\",\n            selector: \".keyframe_cursor\",\n            ref: e => {\n                ids.cursors[1] = e;\n            },\n        },\n        {\n            key: \"lineArea\",\n            ref: e => {\n                ids.lineArea = e;\n            },\n            selector: \".line_area\",\n            children: getLinesStructure(maxTime),\n        },\n    ];\n}\nexport function getKeyframesListStructure(\n    ids: Ids,\n    timelineInfo: TimelineInfo,\n    maxTime: number,\n): ElementStructure[] {\n    const keyframesList: ElementStructure[] = [];\n\n    for (const key in timelineInfo) {\n        const propertiesInfo = timelineInfo[key];\n        const keyframes = getKeyframesStructure(propertiesInfo, maxTime);\n\n        keyframesList.push({\n            ref: (e, i) => {\n                ids.keyframesList[i] = e;\n                ids.keyframesContainers[i] = e.children as ElementStructure;\n            },\n            selector: \".keyframes\",\n            key,\n            dataset: {\n                item: propertiesInfo.isItem ? \"1\" : \"0\",\n                key,\n            },\n            datas: propertiesInfo,\n            children: {\n                selector: \".keyframes_container\",\n                children: keyframes,\n            },\n        });\n    }\n    return keyframesList;\n}\nexport function getDelayFrameStructure(\n    time: number,\n    nextTime: number,\n    maxTime: number,\n): ElementStructure {\n    return {\n        selector: \".keyframe_delay\",\n        key: `delay${time},${nextTime}`,\n        datas: {\n            time: -1,\n        },\n        style: {\n            left: `${time / maxTime * 100}%`,\n            width: `${(nextTime - time) / maxTime * 100}%`,\n        },\n    };\n}\nexport function getKeyframesStructure(\n    propertiesInfo: PropertiesInfo,\n    maxTime: number,\n): ElementStructure[] {\n    const keyframeLines: ElementStructure[] = [];\n    const item = propertiesInfo.item;\n    const duration = item.getDuration();\n    const frames = propertiesInfo.frames;\n    const delayFrames: ElementStructure[] = [];\n\n    const keyframes: ElementStructure[] = frames.map(([time, iterationTime, value], i): ElementStructure => {\n        const valueText = toValue(value);\n\n        if (frames[i + 1]) {\n            const [nextTime, nextIterationTime, nextValue] = frames[i + 1];\n            const nextValueText = toValue(nextValue);\n\n            if (\n                (iterationTime === 0 && nextIterationTime === 0)\n                || (iterationTime === duration && nextIterationTime === duration)\n            ) {\n                delayFrames.push(\n                    getDelayFrameStructure(time, nextTime, maxTime),\n                );\n            }\n            if (!isUndefined(value) && !isUndefined(nextValue) && valueText !== nextValueText) {\n                keyframeLines.push({\n                    selector: \".keyframe_line\",\n                    key: `${time},${nextTime}`,\n                    datas: {\n                        time: `${time},${nextTime}`,\n                        from: time,\n                        to: nextTime,\n                    },\n                    style: {\n                        left: `${time / maxTime * 100}%`,\n                        width: `${(nextTime - time) / maxTime * 100}%`,\n                    },\n                });\n            }\n        }\n\n        return {\n            key: time,\n            selector: \".keyframe\",\n            dataset: {\n                time,\n            },\n            datas: {\n                time,\n                iterationTime,\n                value: valueText,\n            },\n            style: {\n                left: `${time / maxTime * 100}%`,\n            },\n            html: `${time} ${valueText}`,\n        };\n    });\n\n    return [...keyframes, ...delayFrames, ...keyframeLines];\n}\n","import { ElementStructure, Ids, TimelineInfo } from \"./types\";\n\nexport function getPropertiesStructure(ids: Ids, timelineInfo: TimelineInfo) {\n    const properties: ElementStructure[] = [];\n\n    for (const key in timelineInfo) {\n        const propertiesInfo = timelineInfo[key];\n        const propertyNames = key.split(\"///\");\n        const length = propertyNames.length;\n        const id = propertyNames[length - 1];\n\n        properties.push({\n            ref: (e, i) => {\n                ids.properties[i] = e;\n            },\n            key,\n            selector: \".property\",\n            dataset: {\n                key,\n                object: propertiesInfo.isParent ? \"1\" : \"0\",\n                item: propertiesInfo.isItem ? \"1\" : \"0\",\n            },\n            datas: propertiesInfo,\n            style: {\n                paddingLeft: `${10 + (length - 1) * 20}px`,\n            },\n            children: [\n                { selector: \".arrow\" },\n                {\n                    selector: \"span\",\n                    html: id,\n                },\n                { selector: \".remove\" },\n            ],\n        });\n    }\n    return properties;\n}\n","import { isObject } from \"@daybrush/utils\";\nimport { Ids, ElementStructure, TimelineInfo } from \"./types\";\n\nexport function getValuesStructure(ids: Ids, timelineInfo: TimelineInfo): ElementStructure[] {\n    const values: ElementStructure[] = [];\n\n    for (const key in timelineInfo) {\n        const propertiesInfo = timelineInfo[key];\n        const frames = propertiesInfo.frames;\n        values.push({\n            ref: (e, i) => {\n                ids.values[i] = e;\n            },\n            key,\n            selector: \".value\",\n            dataset: {\n                key,\n                item: propertiesInfo.isItem ? \"1\" : \"0\",\n                object: propertiesInfo.isParent ? \"1\" : \"0\",\n            },\n            datas: propertiesInfo,\n            children: propertiesInfo.isParent\n            ? {\n                key: \"add\",\n                selector: \".add\",\n                html: \"+\",\n            }\n            : {\n                key: \"input\",\n                selector: \"input\",\n                attr: {\n                    value: frames[0] ? frames[0][1] : \"\",\n                },\n            },\n        });\n    }\n    return values;\n}\n","import { getKeyframesAreaStructure, getKeyframesListStructure } from \"./KeyframesStructure\";\nimport { ElementStructure, Ids, TimelineInfo } from \"./types\";\nimport { getPropertiesStructure } from \"./PropertiesStructure\";\nimport { getValuesStructure } from \"./ValuesStructure\";\n\nexport function getScrollAreaStructure(\n    ids: Ids,\n    timelineInfo: TimelineInfo,\n    zoom: number,\n    maxDuration: number,\n    maxTime: number,\n): ElementStructure {\n    const keyframesList: ElementStructure[] = getKeyframesListStructure(ids, timelineInfo, maxTime);\n\n    return {\n        ref: e => {\n            ids.scrollArea = e;\n            ids.keyframesList = [];\n            ids.keyframesContainers = [];\n        },\n        selector: \".scroll_area\",\n        children: [\n            {\n                ref: e => {\n                    ids.propertiesAreas[1] = e;\n                    ids.properties = [];\n                },\n                selector: \".properties_area\",\n                children: [\n                    {\n                        selector: \".properties_scroll_area\",\n                        children: getPropertiesStructure(ids, timelineInfo),\n                    },\n                ],\n            },\n            {\n                ref: e => {\n                    ids.valuesArea = e;\n                    ids.values = [];\n                },\n                selector: \".values_area\",\n                children: getValuesStructure(ids, timelineInfo),\n            },\n            getKeyframesAreaStructure(ids, keyframesList, zoom, maxDuration, maxTime),\n        ],\n    };\n}\n","import { Ids, ElementStructure } from \"./types\";\n\nexport function getControlAreaStructure(ids: Ids): ElementStructure {\n    return {\n        selector: \".header_area.control_area\",\n        children: [\n            {\n                selector: \".properties_area\",\n                ref: (e: ElementStructure) => {\n                    ids.unselectedArea = e;\n                },\n                children: {\n                    selector: \".property\",\n                },\n            },\n            {\n                selector: \".values_area\",\n                children: {\n                    selector: \".value\",\n                },\n            },\n            {\n                selector: \".keyframes_area\",\n                children: {\n                    selector: \".keyframes\",\n                    children: [\n                        {\n                            selector: \"input.time_area\",\n                            ref: (e: ElementStructure) => {\n                                ids.timeArea = e;\n                            },\n                            html: \"???\",\n                            // html: \"0\",\n                        },\n                        {\n                            selector: \".play_control_area\",\n                            children: [\n                                {\n                                    ref: (e: ElementStructure) => {\n                                        ids.prevBtn = e;\n                                    },\n                                    selector: \".control.prev\",\n                                },\n                                {\n                                    ref: (e: ElementStructure) => {\n                                        ids.playBtn = e;\n                                    },\n                                    selector: \".control.play\",\n                                },\n                                {\n                                    ref: (e: ElementStructure) => {\n                                        ids.nextBtn = e;\n                                    },\n                                    selector: \".control.next\",\n                                },\n                            ],\n                        },\n                    ],\n                },\n            },\n        ],\n    };\n}\n","import Timeline from \"./Timeline\";\nimport Scene, { SceneItem, Animator, DirectionType } from \"scenejs\";\nimport { createElement, updateElement, getTarget, isSceneItem } from \"./utils\";\nimport DataDOM, { DataStructure } from \"data-dom\";\nimport { ElementStructure } from \"./types\";\nimport { CSS2 } from \"./consts\";\nimport { isUndefined } from \"@daybrush/utils\";\nimport KeyController from \"keycon\";\n\nexport interface SelectEvent {\n    selectedItem: Scene | SceneItem;\n    selectedProperty: string;\n    selectedTime: number;\n    prevSelectedProperty: string;\n    prevSelectedTime: number;\n}\nexport function getOptionAreaStructure(option: string, value: any): ElementStructure {\n    return {\n        selector: \".option_area\",\n        children: [\n            {\n                selector: \".option_name\",\n                html: option,\n            },\n            {\n                selector: \".option_value\",\n                dataset: {\n                    option,\n                },\n                children: {\n                    selector: \"input\",\n                    dataset: {\n                        option,\n                    },\n                    ref: e => {\n                        (e.element as HTMLInputElement).value = isUndefined(value) ? \"\" : value;\n                    },\n                },\n            },\n        ],\n    };\n}\nexport function getOptionsStructure(item?: Animator): ElementStructure[] {\n    return [\n        getOptionAreaStructure(\"delay\", item && item.getDelay()),\n        getOptionAreaStructure(\"easing\", item && item.getEasingName()),\n        getOptionAreaStructure(\"iterationCount\", item && item.getIterationCount()),\n        getOptionAreaStructure(\"playSpeed\", item && item.getPlaySpeed()),\n        getOptionAreaStructure(\"fillMode\", item && item.getFillMode()),\n        getOptionAreaStructure(\"direction\", item && item.getDirection()),\n        getOptionAreaStructure(\"duration\", item && item.getDuration()),\n        getOptionAreaStructure(\"lastFrame\", item && item.getDuration()),\n    ];\n}\nexport class Info {\n    private datadom: DataDOM<ElementStructure>;\n    private optionArea: ElementStructure;\n    private infoArea: ElementStructure;\n    private selectedItem: Scene | SceneItem;\n    constructor(private timeline: Timeline, parentEl: HTMLElement) {\n        timeline.on(\"select\", this.select);\n\n        this.datadom = new DataDOM(\n            createElement,\n            updateElement,\n        );\n        this.selectedItem = timeline.scene;\n\n        this.infoArea = this.datadom.render(\n            {\n                selector: \".item_info\",\n                children: [\n                    {\n                        selector: \"style\",\n                        html: CSS2,\n                    },\n                    {\n                        ref: (e: ElementStructure) => {\n                            this.optionArea = e;\n                        },\n                        selector: \".options_area\",\n                        children: getOptionsStructure(timeline.scene),\n                    },\n                ],\n            },\n            parentEl,\n        );\n        this.init();\n    }\n    public update() {\n        this.datadom.update(\n            this.optionArea.children,\n            getOptionsStructure(this.selectedItem),\n            this.optionArea,\n        );\n    }\n    public select = (info: SelectEvent) => {\n        this.selectedItem = info.selectedItem;\n        this.update();\n    }\n    private init() {\n        new KeyController(this.infoArea.element)\n        .keydown(e => {\n            e.inputEvent.stopPropagation();\n        })\n        .keyup(e => {\n            e.inputEvent.stopPropagation();\n        })\n        .keyup(\"enter\", e => {\n            const selectedItem = this.selectedItem;\n            if (!this.selectedItem) {\n                return;\n            }\n            const target = getTarget(e.inputEvent.target as HTMLInputElement, el => el.nodeName === \"INPUT\");\n\n            if (!target) {\n                return;\n            }\n            const option = target.getAttribute(\"data-option\");\n            const value = target.value;\n\n            if (option === \"delay\") {\n                selectedItem.setDelay(parseFloat(value));\n            } else if (option === \"lastFrame\") {\n                const nextDuration = parseFloat(value);\n                if (isSceneItem(selectedItem) && selectedItem.getDuration() < nextDuration) {\n                    selectedItem.newFrame(nextDuration);\n                }\n            } else if (option === \"playSpeed\") {\n                selectedItem.setPlaySpeed(parseFloat(value));\n            } else if (option === \"direction\") {\n                selectedItem.setDirection(value as DirectionType);\n            } else if (option === \"iterationCount\") {\n                selectedItem.setIterationCount(value === \"infinite\" ? value : parseFloat(value));\n            } else if (option === \"easing\") {\n                selectedItem.setEasing(value);\n            }\n            this.timeline.update();\n            this.update();\n        });\n    }\n}\n","import Scene, { AnimatorState, SceneItem } from \"scenejs\";\nimport { ITERATION_COUNT, DELAY, PLAY_SPEED, DIRECTION, REVERSE, ALTERNATE, ALTERNATE_REVERSE } from \"./consts\";\nimport { TimelineInfo } from \"./types\";\nimport { isScene } from \"./utils\";\nimport { isUndefined, isObject } from \"@daybrush/utils\";\n\nexport const MAXIMUM = 1000000;\nexport function toFixed(num: number) {\n    return Math.round(num * MAXIMUM) / MAXIMUM;\n}\nexport function addEntry(entries: number[][], time: number, keytime: number) {\n    const prevEntry = entries[entries.length - 1];\n\n    (!prevEntry || prevEntry[0] !== time || prevEntry[1] !== keytime) &&\n        entries.push([toFixed(time), toFixed(keytime)]);\n}\nexport function dotNumber(a1: number, a2: number, b1: number, b2: number) {\n    return (a1 * b2 + a2 * b1) / (b1 + b2);\n  }\nexport function getEntries(times: number[], states: AnimatorState[]) {\n    if (!times.length) {\n        return [];\n    }\n    let entries = times.map(time => ([time, time]));\n    let nextEntries = [];\n    const firstEntry = entries[0];\n    if (firstEntry[0] !== 0 && states[states.length - 1][DELAY]) {\n        entries.unshift([0, 0]);\n    }\n\n    states.forEach(state => {\n        const iterationCount = state[ITERATION_COUNT] as number;\n        const delay = state[DELAY];\n        const playSpeed = state[PLAY_SPEED];\n        const direction = state[DIRECTION];\n        const intCount = Math.ceil(iterationCount);\n        const currentDuration = entries[entries.length - 1][0];\n        const length = entries.length;\n        const lastTime = currentDuration * iterationCount;\n\n        for (let i = 0; i < intCount; ++i) {\n            const isReverse =\n                direction === REVERSE ||\n                direction === ALTERNATE && i % 2 ||\n                direction === ALTERNATE_REVERSE && !(i % 2);\n\n            for (let j = 0; j < length; ++j) {\n                const entry = entries[isReverse ? length - j - 1 : j];\n                const time = entry[1];\n                const currentTime = currentDuration * i + (isReverse ? currentDuration - entry[0] : entry[0]);\n                const prevEntry = entries[isReverse ? length - j : j - 1];\n\n                if (currentTime > lastTime) {\n                    if (j !== 0) {\n                        const prevTime = currentDuration * i +\n                            (isReverse ? currentDuration - prevEntry[0] : prevEntry[0]);\n                        const divideTime = dotNumber(prevEntry[1], time, lastTime - prevTime, currentTime - lastTime);\n\n                        addEntry(nextEntries, (delay + currentDuration * iterationCount) / playSpeed, divideTime);\n                    }\n                    break;\n                } else if (currentTime === lastTime && nextEntries[nextEntries.length - 1][0] === lastTime + delay) {\n                    break;\n                }\n                addEntry(nextEntries, (delay + currentTime) / playSpeed, time);\n            }\n        }\n        // delay time\n        delay && nextEntries.unshift([0, nextEntries[0][1]]);\n\n        entries = nextEntries;\n        nextEntries = [];\n    });\n\n    return entries;\n}\nexport function getItemInfo(\n    timelineInfo: TimelineInfo,\n    items: Array<Scene | SceneItem>,\n    names: Array<string | number>,\n    item: SceneItem) {\n    item.update();\n    const times = item.times;\n    const entries = getEntries(times, items.map(animator => animator.state));\n\n    (function getPropertyInfo(itemNames: any, ...properties: any[]) {\n        const frames = [];\n        const isParent = isObject(itemNames);\n        const isItem = properties.length === 0;\n        entries.forEach(([time, iterationTime]) => {\n            const value = item.get(iterationTime, ...properties);\n            if (isUndefined(value) && properties.length) {\n                return;\n            }\n            frames.push([time, iterationTime, value]);\n        });\n        const key = [...names, ...properties].join(\"///\");\n\n        timelineInfo[key] = {\n            key,\n            parentItem: null,\n            isParent,\n            isItem,\n            item,\n            names,\n            properties,\n            frames,\n        };\n        if (isParent) {\n            for (const property in itemNames) {\n                getPropertyInfo(itemNames[property], ...properties, property);\n            }\n        }\n    })(item.names);\n}\nexport function getTimelineInfo(scene: Scene): TimelineInfo {\n    const timelineInfo: TimelineInfo = {};\n    (function sceneForEach(...items: Array<Scene | SceneItem>) {\n        const length = items.length;\n        const lastItem = items[length - 1];\n        const names = items.slice(1).map(item => item.getId());\n        if (isScene(lastItem)) {\n            if (names.length) {\n                const key = names.join(\"///\");\n                timelineInfo[key] = {\n                    key,\n                    isItem: true,\n                    isParent: true,\n                    parentItem: items[length - 2] as Scene,\n                    item: lastItem,\n                    names: [],\n                    properties: [],\n                    frames: [],\n                };\n            }\n            lastItem.forEach((item: Scene | SceneItem) => {\n                sceneForEach(...items, item);\n            });\n        } else {\n            getItemInfo(timelineInfo, items, names, lastItem);\n        }\n    })(scene);\n\n    return timelineInfo;\n}\n","import Scene, { SceneItem } from \"scenejs\";\nimport {\n    getTarget,\n    hasClass, removeClass, addClass,\n    flatObject, splitProperty, findElementIndexByPosition,\n    createElement, updateElement, findIndexByProperty, findStructure, numberFormat, isScene,\n} from \"./utils\";\nimport { drag } from \"@daybrush/drag\";\nimport { CSS } from \"./consts\";\nimport { IObject, addEvent } from \"@daybrush/utils\";\nimport Axes, { PinchInput } from \"@egjs/axes\";\nimport { ElementStructure, Ids, PropertiesInfo, TimelineInfo } from \"./types\";\nimport { dblCheck } from \"./dblcheck\";\nimport KeyController from \"keycon\";\nimport DataDOM from \"data-dom\";\nimport { getHeaderAreaStructure, getKeytimesAreaStructure } from \"./HeaderAreaStructure\";\nimport { getScrollAreaStructure } from \"./ScrollAreaStructure\";\nimport { getControlAreaStructure } from \"./ControlAreaStructure\";\nimport Component from \"@egjs/component\";\nimport { Info } from \"./Info\";\nimport { getTimelineInfo } from \"./TimelineInfo\";\n\nlet isExportCSS = false;\n\nexport default class Timeline extends Component {\n    public scene: Scene;\n    public options: {\n        keyboard?: boolean,\n    };\n    private maxTime: number = 0;\n    private axes: Axes;\n    private selectedProperty: string = \"\";\n    private selectedTime: number = -1;\n    private keycon: KeyController;\n    private datadom: DataDOM<ElementStructure>;\n    private structure: ElementStructure;\n    private ids: Ids = {};\n    private timelineInfo: TimelineInfo;\n    constructor(scene: Scene, parentEl: HTMLElement, options: {\n        keyboard?: boolean,\n    } = {}) {\n        super();\n        this.options = {\n            keyboard: true,\n            ...options,\n        };\n        scene.finish();\n        this.scene = scene;\n        this.initStructure(scene, parentEl);\n        this.initEditor();\n        this.initScroll();\n        this.initWheelZoom();\n        this.initDragKeyframes();\n        this.initClickProperty();\n        this.initController();\n        this.initDragValues();\n        this.initKeyController();\n\n        scene.setTime(0);\n\n        new Info(this, parentEl);\n    }\n    public getElement() {\n        return this.structure.element;\n    }\n    // scene control\n    public prev() {\n        this.scene.setTime(this.scene.getTime() - 0.05);\n    }\n    public next() {\n        this.scene.setTime(this.scene.getTime() + 0.05);\n    }\n    public finish() {\n        this.scene.finish();\n    }\n    public togglePlay() {\n        const scene = this.scene;\n        if (scene.getPlayState() === \"running\") {\n            scene.pause();\n        } else {\n            scene.play();\n        }\n    }\n    public update() {\n        const scene = this.scene;\n        this.timelineInfo = getTimelineInfo(scene);\n        const maxDuration = Math.ceil(scene.getDuration());\n        const maxTime = maxDuration;\n        let zoom = this.axes.get([\"zoom\"]).zoom;\n        const currentMaxTime = this.maxTime;\n        this.maxTime = maxTime;\n        const ids = this.ids;\n        const prevKeytimesArea = ids.keyframesAreas[0];\n        const nextZoom = currentMaxTime > 5 ? maxDuration / currentMaxTime : 1;\n\n        zoom = zoom * nextZoom;\n        this.axes.axm.set({ zoom });\n        // update keytimes\n        this.datadom.update(\n            prevKeytimesArea,\n            getKeytimesAreaStructure(ids, zoom, maxDuration, maxTime),\n        );\n\n        const nextScrollAreaStructure = getScrollAreaStructure(\n            ids,\n            this.timelineInfo,\n            this.axes.get([\"zoom\"]).zoom,\n            maxDuration, this.maxTime,\n        );\n\n        this.datadom.update(\n            ids.scrollArea,\n            nextScrollAreaStructure,\n        );\n        scene.setTime(scene.getTime());\n    }\n    // init\n    private initController() {\n        const ids = this.ids;\n        const playBtn = this.ids.playBtn.element;\n        const scene = this.scene;\n\n        this.ids.addItem.element.addEventListener(\"click\", e => {\n            const name = prompt(\"Add Item\");\n\n            if (!name) {\n                return;\n            }\n            this.scene.newItem(name);\n            this.update();\n        });\n        playBtn.addEventListener(\"click\", e => {\n            this.togglePlay();\n            e.preventDefault();\n        });\n        ids.unselectedArea.element.addEventListener(\"click\", e => {\n            this.select(\"\", -1);\n        });\n        ids.prevBtn.element.addEventListener(\"click\", e => {\n            this.prev();\n            e.preventDefault();\n        });\n        ids.nextBtn.element.addEventListener(\"click\", e => {\n            this.next();\n            e.preventDefault();\n        });\n        scene.on(\"play\", () => {\n            addClass(playBtn, \"pause\");\n            removeClass(playBtn, \"play\");\n            // playBtn.innerHTML = \"pause\";\n        });\n        scene.on(\"paused\", () => {\n            addClass(playBtn, \"play\");\n            removeClass(playBtn, \"pause\");\n            // playBtn.innerHTML = \"play\";\n        });\n        if (this.options.keyboard) {\n            new KeyController(ids.timeArea.element)\n            .keydown(e => {\n                !e.isToggle && e.inputEvent.stopPropagation();\n            })\n            .keyup(e => {\n                !e.isToggle && e.inputEvent.stopPropagation();\n            })\n            .keyup(\"enter\", e => {\n                // go to time\n                const element = ids.timeArea.element;\n                const value = (element as HTMLInputElement).value;\n                const result = /(\\d+):(\\d+):(\\d+)/g.exec(value);\n\n                if (!result) {\n                    return;\n                }\n                const minute = parseFloat(result[1]);\n                const second = parseFloat(result[2]);\n                const milisecond = parseFloat(`0.${result[3]}`);\n                const time = minute * 60 + second + milisecond;\n\n                scene.setTime(time);\n            });\n        }\n    }\n    private initKeyController() {\n        const ids = this.ids;\n\n        window.addEventListener(\"blur\", () => {\n            removeClass(ids.timeline.element, \"alt\");\n        });\n\n        this.keycon = new KeyController()\n        .keydown(\"alt\", () => {\n            addClass(ids.timeline.element, \"alt\");\n        })\n        .keyup(\"alt\", () => {\n            removeClass(ids.timeline.element, \"alt\");\n        });\n\n        if (this.options.keyboard) {\n            this.keycon.keydown(\"space\", ({inputEvent}) => {\n                inputEvent.preventDefault();\n            })\n            .keydown(\"left\", e => {\n                this.prev();\n            })\n            .keydown(\"right\", e => {\n                this.next();\n            })\n            .keyup(\"backspace\", () => {\n                this.removeKeyframe(this.selectedProperty);\n            })\n            .keyup(\"esc\", () => {\n                this.finish();\n            })\n            .keyup(\"space\", () => {\n                this.togglePlay();\n            });\n        }\n    }\n    private initStructure(scene: Scene, parentEl: HTMLElement) {\n        this.timelineInfo = getTimelineInfo(scene);\n        const duration = Math.ceil(scene.getDuration());\n        const maxDuration = Math.ceil(duration);\n        const maxTime = maxDuration;\n        const ids = this.ids;\n        let timelineCSS: ElementStructure;\n\n        this.maxTime = maxTime;\n        if (!isExportCSS) {\n            timelineCSS = {\n                selector: \"style.style\",\n                html: CSS,\n            };\n            isExportCSS = true;\n        }\n\n        const structure: ElementStructure = {\n            selector: \".timeline\",\n            ref: e => {\n                ids.timeline = e;\n            },\n            children: [\n                timelineCSS,\n                getControlAreaStructure(ids),\n                getHeaderAreaStructure(ids, 1, maxDuration, maxTime),\n                getScrollAreaStructure(ids, this.timelineInfo, 1, maxDuration, maxTime),\n            ],\n        };\n        this.datadom = new DataDOM(\n            createElement,\n            updateElement,\n        );\n        this.structure = this.datadom.render(structure, parentEl);\n    }\n    private initScroll() {\n        const {\n            keyframesAreas,\n        } = this.ids;\n        let isScrollKeyframe = false;\n\n        const headerKeyframesArea = keyframesAreas[0].element;\n        const scrollKeyframesArea = keyframesAreas[1].element;\n        headerKeyframesArea.addEventListener(\"scroll\", () => {\n            if (isScrollKeyframe) {\n                isScrollKeyframe = false;\n            } else {\n                isScrollKeyframe = true;\n                scrollKeyframesArea.scrollLeft = headerKeyframesArea.scrollLeft;\n            }\n        });\n        scrollKeyframesArea.addEventListener(\"scroll\", () => {\n            if (isScrollKeyframe) {\n                isScrollKeyframe = false;\n            } else {\n                isScrollKeyframe = true;\n                headerKeyframesArea.scrollLeft = scrollKeyframesArea.scrollLeft;\n            }\n        });\n    }\n    private initWheelZoom() {\n        const ids = this.ids;\n        const keyframesScrollAreas = ids.keyframesScrollAreas;\n        const headerArea = keyframesScrollAreas[0].element;\n        const scrollArea = keyframesScrollAreas[1].element;\n\n        const axes = new Axes(\n            {\n                zoom: {\n                    range: [1, Infinity],\n                },\n            },\n            {},\n            { zoom: 1 },\n        );\n        axes.connect(\"zoom\", new PinchInput(scrollArea, {\n            scale: 0.1,\n            hammerManagerOptions: {\n                touchAction: \"auto\",\n            },\n        }));\n        axes.on(\"hold\", e => {\n            if (e.inputEvent) {\n                e.inputEvent.preventDefault();\n            }\n        });\n        axes.on(\"change\", e => {\n            const scale = ids.keyframesScrollAreas[0].dataset.width;\n            const width = e.pos.zoom * scale * 100;\n\n            ids.keyframesScrollAreas.forEach(({ element }) => {\n                element.style.width = `${width}%`;\n            });\n\n            if (e.inputEvent) {\n                e.inputEvent.preventDefault();\n            }\n        });\n\n        this.axes = axes;\n        headerArea.addEventListener(\"wheel\", e => {\n            const delta = e.deltaY;\n\n            axes.setBy({ zoom: delta / 5000 });\n            !e.deltaX && e.preventDefault();\n        });\n\n        addEvent(scrollArea, \"wheel\", e => {\n            if (!this.keycon.altKey) {\n                return;\n            }\n            e.preventDefault();\n            const delta = e.deltaY;\n\n            axes.setBy({ zoom: delta / 5000 });\n        });\n    }\n    private select(selectedProperty: string, keyframeTime?: number) {\n        const prevSelectedProperty = this.selectedProperty;\n        const prevSelectedTime = this.selectedTime;\n        const ids = this.ids;\n        const values = ids.values;\n        const properties = ids.properties;\n        const keyframesList = ids.keyframesList;\n\n        this.selectedProperty = selectedProperty;\n        this.scene.pause();\n        if (prevSelectedProperty) {\n            const prevSelectedIndex = findIndexByProperty(prevSelectedProperty, properties);\n\n            removeClass(properties[prevSelectedIndex].element, \"select\");\n            removeClass(values[prevSelectedIndex].element, \"select\");\n            removeClass(keyframesList[prevSelectedIndex].element, \"select\");\n\n            if (prevSelectedTime >= 0) {\n                const keyframes = ids.keyframesContainers[prevSelectedIndex].children as ElementStructure[];\n\n                keyframes.forEach(keyframe => {\n                    if (keyframe.datas.time === prevSelectedTime) {\n                        removeClass(keyframe.element, \"select\");\n                    }\n                });\n                this.selectedTime = -1;\n            }\n        }\n        let selectedItem: Scene | SceneItem = this.scene;\n        if (selectedProperty) {\n            if (document.activeElement) {\n                (document.activeElement as HTMLElement).blur();\n            }\n\n            const selectedIndex = findIndexByProperty(selectedProperty, properties);\n            addClass(properties[selectedIndex].element, \"select\");\n            addClass(values[selectedIndex].element, \"select\");\n            addClass(keyframesList[selectedIndex].element, \"select\");\n\n            selectedItem = (ids.keyframesList[selectedIndex].datas as PropertiesInfo).item;\n            if (keyframeTime >= 0) {\n                const selectedPropertyStructure = ids.keyframesContainers[selectedIndex];\n                const keyframes = selectedPropertyStructure.children as ElementStructure[];\n\n                keyframes.forEach(keyframe => {\n                    if (keyframe.datas.time === keyframeTime) {\n                        addClass(keyframe.element, \"select\");\n                    }\n                });\n                this.selectedTime = keyframeTime;\n            }\n        }\n        this.trigger(\"select\", {\n            selectedItem,\n            selectedProperty: this.selectedProperty,\n            selectedTime: this.selectedTime,\n            prevSelectedProperty,\n            prevSelectedTime,\n        });\n    }\n    private initClickProperty() {\n        const ids = this.ids;\n        const {\n            propertiesAreas,\n        } = ids;\n\n        propertiesAreas[1].element.addEventListener(\"click\", e => {\n            const properties = ids.properties.map(property => property.element);\n            const length = properties.length;\n            const arrow = getTarget(e.target as HTMLElement, el => hasClass(el, \"arrow\"));\n            const remove = getTarget(e.target as HTMLElement, el => hasClass(el, \"remove\"));\n            const target = getTarget(e.target as HTMLElement, el => hasClass(el, \"property\"));\n\n            if (!target) {\n                return;\n            }\n            const index = properties.indexOf(target);\n\n            if (index === -1) {\n                return;\n            }\n            const selectedProperty = ids.properties[index];\n            if (remove) {\n                this.remove(selectedProperty.datas as PropertiesInfo);\n            } else {\n                this.select(selectedProperty.dataset.key);\n\n                if (arrow) {\n                    this.fold(index);\n                }\n            }\n        });\n    }\n    private setInputs(obj: IObject<any>) {\n        const valuesArea = this.ids.valuesArea.element;\n        for (const name in obj) {\n            valuesArea.querySelector<HTMLInputElement>(`[data-key=\"${name}\"] input`).value = obj[name];\n        }\n    }\n    private moveCursor(time: number) {\n        const {cursors} = this.ids;\n        const maxTime = this.maxTime;\n        const px = 15 - 30 * time / maxTime;\n        const percent = 100 * time / maxTime;\n        const left = `calc(${percent}% + ${px}px)`;\n\n        cursors.forEach(cursor => {\n            cursor.element.style.left = left;\n        });\n    }\n    private initDragKeyframes() {\n        const ids = this.ids;\n        const {\n            scrollArea,\n            timeArea,\n            cursors,\n            keyframesAreas,\n            keyframesScrollAreas,\n        } = ids;\n        const scene = this.scene;\n\n        scene.on(\"animate\", e => {\n            const time = e.time;\n            this.moveCursor(time);\n\n            this.setInputs(flatObject(e.frames));\n            const minute = numberFormat(Math.floor(time / 60), 2);\n            const second = numberFormat(Math.floor(time % 60), 2);\n            const milisecond = numberFormat(Math.floor((time % 1) * 100), 3, true);\n            (timeArea.element as HTMLInputElement).value = `${minute}:${second}:${milisecond}`;\n        });\n        const getTime = (clientX: number) => {\n            const rect = keyframesScrollAreas[1].element.getBoundingClientRect();\n            const scrollAreaWidth = rect.width - 30;\n            const scrollAreaX = rect.left + 15;\n            const x = Math.min(scrollAreaWidth, Math.max(clientX - scrollAreaX, 0));\n            const percentage = x / scrollAreaWidth;\n            let time = this.maxTime * percentage;\n\n            time = Math.round(time * 20) / 20;\n\n            return time;\n        };\n        const move = (clientX: number) => {\n            scene.setTime(getTime(clientX));\n        };\n        const click = (e, clientX, clientY) => {\n            const target = getTarget(e.target as HTMLElement, el => hasClass(el, \"keyframe\"));\n            const time = target ? parseFloat(target.getAttribute(\"data-time\")) : getTime(clientX);\n\n            scene.setTime(time);\n            const list = ids.keyframesList;\n            const index = findElementIndexByPosition(\n                list.map(({element}) => element),\n                clientY,\n            );\n\n            if (index > -1) {\n                this.select(list[index].dataset.key, time);\n            }\n            e.preventDefault();\n        };\n        const dblclick = (e, clientX, clientY) => {\n            const list = ids.keyframesList;\n            const index = findElementIndexByPosition(\n                list.map(({element}) => element),\n                clientY,\n            );\n\n            if (index === -1) {\n                return;\n            }\n            this.addKeyframe(index, getTime(clientX));\n        };\n        drag(cursors[0].element, {\n            dragstart: ({inputEvent}) => {\n                inputEvent.stopPropagation();\n            },\n            drag: ({ clientX }) => {\n                move(clientX);\n            },\n            container: window,\n        });\n        keyframesScrollAreas.forEach(({ element }) => {\n            drag(element, {\n                container: window,\n                drag: ({ deltaX, deltaY, inputEvent }) => {\n                    keyframesAreas[1].element.scrollLeft -= deltaX;\n                    scrollArea.element.scrollTop -= deltaY;\n                    inputEvent.preventDefault();\n                },\n                dragend: ({ isDrag, clientX, clientY, inputEvent }) => {\n                    !isDrag && click(inputEvent, clientX, clientY);\n                    dblCheck(isDrag, inputEvent, clientX, clientY, dblclick);\n                },\n            });\n        });\n    }\n    private initDragValues() {\n        const ids = this.ids;\n        const element = ids.valuesArea.element;\n        let dragTarget: HTMLInputElement = null;\n        let dragTargetValue: any;\n\n        addEvent(element, \"click\", e => {\n            const addedElement = getTarget(dragTarget, el => hasClass(el, \"add\"));\n            if (!addedElement) {\n                return;\n            }\n            const valueElement = addedElement.parentElement as HTMLElement;\n            const index = findIndexByProperty(valueElement.getAttribute(\"data-key\"), ids.values);\n\n            if (index < 0) {\n                return;\n            }\n            const property = prompt(\"add property\");\n\n            if (!property) {\n                return;\n            }\n            const propertiesInfo = ids.properties[index].datas as PropertiesInfo;\n            const properties = propertiesInfo.properties.slice();\n            const item = propertiesInfo.item;\n\n            item.set(item.getIterationTime(), ...properties, property, 0);\n\n            this.update();\n\n        });\n        drag(element, {\n            container: window,\n            dragstart: e => {\n                dragTarget = e.inputEvent.target;\n                dragTargetValue = dragTarget.value;\n\n                if (!this.keycon.altKey || !getTarget(dragTarget, el => el.nodeName === \"INPUT\")) {\n                    return false;\n                }\n            },\n            drag: e => {\n                const nextValue = dragTargetValue.replace(/-?\\d+/g, num => {\n                    return `${parseFloat(num) + Math.round(e.distX / 2)}`;\n                });\n\n                dragTarget.value = nextValue;\n            },\n            dragend: e => {\n                this.edit(dragTarget, dragTarget.value);\n            },\n        });\n    }\n    private addKeyframe(index: number, time: number) {\n        const list = this.ids.keyframesList;\n        const property = list[index].dataset.key;\n        const {item, properties} = list[index].datas as PropertiesInfo;\n\n        this.select(property, time);\n\n        const value = ((this.ids.values[index].children as ElementStructure).element as HTMLInputElement).value;\n\n        this.editKeyframe(index, value);\n    }\n    private fold(index: number) {\n        const ids = this.ids;\n        const {properties, values, keyframesList} = ids;\n        const selectedProperty = properties[index];\n        const length = properties.length;\n        let max;\n        for (max = index; max < length; ++max) {\n            if (properties[max].datas.key.indexOf(selectedProperty.datas.key) !== 0) {\n                break;\n            }\n        }\n        const foldProperties = properties.slice(index + 1, max);\n        const foldValues = values.slice(index + 1, max);\n        const foldKeyframesList = keyframesList.slice(index + 1, max);\n\n        const selectedElement = selectedProperty.element;\n        const isFold = selectedElement.getAttribute(\"data-fold\") === \"1\";\n\n        selectedElement.setAttribute(\"data-fold\", isFold ? \"0\" : \"1\");\n\n        const foldFunction = (isFold ? removeClass : addClass);\n        foldProperties.forEach((property, i) => {\n            foldFunction(property.element, \"fold\");\n            foldFunction(foldValues[i].element, \"fold\");\n            foldFunction(foldKeyframesList[i].element, \"fold\");\n        });\n    }\n    private remove(propertiesInfo: PropertiesInfo) {\n        const {key, isItem, parentItem, item: targetItem, properties} = propertiesInfo;\n        if (isItem) {\n            let targetName: string = null;\n            parentItem.forEach((item, name) => {\n                if (item === targetItem) {\n                    targetName = name;\n                    return;\n                }\n            });\n            if (targetName != null) {\n                parentItem.removeItem(targetName);\n            }\n        } else {\n            const times = (targetItem as SceneItem).times;\n\n            times.forEach(time => {\n                (targetItem as SceneItem).remove(time, ...properties);\n            });\n        }\n        if (this.selectedProperty === key) {\n            this.selectedProperty = \"\";\n            this.selectedTime = -1;\n        }\n        this.update();\n    }\n    private removeKeyframe(property: string) {\n        const propertiesInfo = this.timelineInfo[property];\n        if (!property || !propertiesInfo || isScene(propertiesInfo.item)) {\n            return;\n        }\n\n        const properties = propertiesInfo.properties;\n        const item = propertiesInfo.item;\n\n        item.remove(item.getIterationTime(), ...properties);\n        this.update();\n    }\n    private editKeyframe(index: number, value: any) {\n        const ids = this.ids;\n        const isObjectData = ids.properties[index].dataset.object === \"1\";\n\n        if (isObjectData) {\n            return;\n        }\n        const propertiesInfo = ids.keyframesList[index].datas as PropertiesInfo;\n        const item = propertiesInfo.item;\n        const properties = propertiesInfo.properties;\n\n        item.set(item.getIterationTime(), ...properties, value);\n        this.update();\n    }\n    private restoreKeyframes() {\n        this.scene.setTime(this.scene.getTime());\n    }\n    private edit(target: HTMLInputElement, value: any) {\n        const parentEl = getTarget(target, el => hasClass(el, \"value\"));\n\n        if (!parentEl) {\n            return;\n        }\n        const values = this.ids.values.map(({element}) => element);\n        const index = values.indexOf(parentEl);\n\n        if (index === -1) {\n            return;\n        }\n        this.editKeyframe(index, value);\n    }\n    private initEditor() {\n        const valuesArea = this.ids.valuesArea.element;\n\n        new KeyController(valuesArea)\n        .keydown(e => {\n            !e.isToggle && e.inputEvent.stopPropagation();\n        })\n        .keyup(e => {\n            !e.isToggle && e.inputEvent.stopPropagation();\n        })\n        .keyup(\"enter\", e => {\n            const target = e.inputEvent.target as HTMLInputElement;\n\n            this.edit(target, target.value);\n        })\n        .keyup(\"esc\", e => {\n            const target = e.inputEvent.target as HTMLInputElement;\n\n            target.blur();\n        });\n        valuesArea.addEventListener(\"focusout\", e => {\n            this.restoreKeyframes();\n        });\n    }\n}\n"],"names":["PREFIX","CSS2","replace","CSS","DIRECTION","ITERATION_COUNT","DELAY","PLAY_SPEED","ALTERNATE","REVERSE","ALTERNATE_REVERSE","numberFormat","num","count","isRight","length","arr","push","i","join","applyStyle","el","style","name","findIndexByProperty","selectedProperty","structures","findIndex","_a","key","createElement","structure","selector","dataset","attr","html","classNames","match","tag","id","document","className","map","setAttribute","innerHTML","updateElement","prevStructure","nextStructure","element","keys","value","toValue","type","Array","isArray","k","flatObject","obj","newObj","isObject","nextObj","isFrame","get","nextName","getTarget","target","conditionCallback","parentTarget","body","parentNode","hasClass","hasClass2","addClass","addClass2","removeClass","removeClass2","isScene","constructor","prototype","getItem","isSceneItem","getFrame","toCSS","findElementIndexByPosition","elements","pos","index","box","getBoundingClientRect","top","bottom","height","prevTime","prevX","prevY","dblCheck","isDrag","e","clientX","clientY","callback","currentTime","now","getKeytimesStructure","maxTime","keytimes","time","width","children","getLinesStructure","lines","left","getHeaderAreaStructure","ids","zoom","maxDuration","ref","keyframesScrollAreas","keyframesAreas","propertiesAreas","addItem","getKeytimesAreaStructure","minWidth","Math","min","cursors","keytimesContainer","getKeyframesAreaStructure","keyframesList","getKeyframesScrollAreaChildrenStructure","lineArea","getKeyframesListStructure","timelineInfo","propertiesInfo","keyframes","getKeyframesStructure","keyframesContainers","item","isItem","datas","getDelayFrameStructure","nextTime","keyframeLines","duration","getDuration","frames","delayFrames","iterationTime","valueText","_b","nextIterationTime","nextValue","nextValueText","isUndefined","from","to","getPropertiesStructure","properties","propertyNames","split","object","isParent","paddingLeft","getValuesStructure","values","getScrollAreaStructure","scrollArea","valuesArea","getControlAreaStructure","unselectedArea","timeArea","prevBtn","playBtn","nextBtn","getOptionAreaStructure","option","getOptionsStructure","getDelay","getEasingName","getIterationCount","getPlaySpeed","getFillMode","getDirection","timeline","parentEl","info","_this","selectedItem","update","on","select","datadom","DataDOM","scene","infoArea","render","optionArea","init","KeyController","keydown","inputEvent","stopPropagation","keyup","nodeName","getAttribute","setDelay","parseFloat","nextDuration","newFrame","setPlaySpeed","setDirection","setIterationCount","setEasing","MAXIMUM","toFixed","round","addEntry","entries","keytime","prevEntry","dotNumber","a1","a2","b1","b2","getEntries","times","states","nextEntries","firstEntry","unshift","forEach","state","iterationCount","delay","playSpeed","direction","intCount","ceil","currentDuration","lastTime","isReverse","j","entry","divideTime","getItemInfo","items","names","animator","getPropertyInfo","itemNames","_i","parentItem","property","getTimelineInfo","sceneForEach","lastItem","slice","getId","isExportCSS","tslib_1","options","_super","keyboard","finish","initStructure","initEditor","initScroll","initWheelZoom","initDragKeyframes","initClickProperty","initController","initDragValues","initKeyController","setTime","Info","getTime","getPlayState","pause","play","axes","currentMaxTime","prevKeytimesArea","nextZoom","axm","set","nextScrollAreaStructure","addEventListener","prompt","newItem","togglePlay","preventDefault","prev","next","isToggle","result","exec","minute","second","milisecond","window","keycon","removeKeyframe","timelineCSS","isScrollKeyframe","headerKeyframesArea","scrollKeyframesArea","scrollLeft","headerArea","Axes","range","Infinity","connect","PinchInput","scale","hammerManagerOptions","touchAction","delta","deltaY","setBy","deltaX","addEvent","altKey","keyframeTime","prevSelectedProperty","prevSelectedTime","selectedTime","prevSelectedIndex","keyframe","activeElement","blur","selectedIndex","selectedPropertyStructure","trigger","arrow","remove","indexOf","fold","querySelector","px","percent","cursor","moveCursor","setInputs","floor","rect","scrollAreaWidth","scrollAreaX","x","max","percentage","move","click","list","dblclick","addKeyframe","drag","dragstart","container","scrollTop","dragend","dragTarget","dragTargetValue","addedElement","valueElement","parentElement","getIterationTime","distX","edit","editKeyframe","foldProperties","foldValues","foldKeyframesList","selectedElement","isFold","foldFunction","targetItem","targetName_1","removeItem","isObjectData","restoreKeyframes","Component"],"mappings":"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"}