{"version":3,"file":"timeline.min.js","sources":["../src/consts.ts","../src/utils.ts","../src/dblcheck.ts","../src/HeaderAreaStructure.ts","../src/KeytimesStructure.ts","../src/KeyframesStructure.ts","../src/ScrollAreaStructure.ts","../src/PropertiesStructure.ts","../src/ValuesStructure.ts","../src/Timeline.ts","../src/ControlAreaStructure.ts"],"sourcesContent":["export const PREFIX = `scenejs_timeline_`;\n\nexport const CSS = `\n.timeline {\n  position: relative;\n  font-size: 0;\n  background: #000;\n  display: flex;\n  flex-direction: column;\n}\n.header_area, .scroll_area {\n   width: 100%;\n   position: relative;\n  display: flex;\n  -webkit-align-items: flex-start;\n  align-items: flex-start;\n}\n.header_area {\n  position: relative;\n  z-index: 10;\n  top: 0;\n  height: 30px;\n  min-height: 30px;\n}\n.header_area .keyframes {\n  padding: 0px;\n}\n.header_area .properties_area,\n.header_area .keyframes_area,\n.header_area .values_area,\n.header_area .keyframes_scroll_area {\n    height: 100%;\n}\n.header_area .property, .header_area .value, .header_area .keyframes {\n  height: 100%;\n}\n.header_area .property {\n    line-height: 30px;\n}\n.header_area .value {\n    text-align: center;\n    color: #fff;\n    line-height: 30px;\n    font-weight: bold;\n    font-size: 20px;\n}\n.header_area .keyframes_area::-webkit-scrollbar {\n    display: none; // Safari and Chrome\n}\n.header_area .keyframe_cursor {\n    position: absolute;\n    border-top: 10px solid #4af;\n    border-left: 6px solid transparent;\n    border-right: 6px solid transparent;\n    width: 0;\n    height: 0;\n    bottom: 0;\n    top: auto;\n    background: none;\n    cursor: pointer;\n}\n.control_area .keyframes {\n    padding-left: 10px;\n}\n.play_control_area {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n}\n.play_control_area .control {\n    position: relative;\n    display: inline-block;\n    vertical-align: middle;\n    color: white;\n    margin: 0px 15px;\n}\n.play {\n    border-left: 14px solid white;\n    border-top: 8px solid transparent;\n    border-bottom: 8px solid transparent;\n}\n.pause {\n    border-left: 4px solid #fff;\n    border-right: 4px solid #fff;\n    width: 6px;\n    height: 16px;\n}\n.prev {\n    border-right: 10px solid white;\n    border-top: 6px solid transparent;\n    border-bottom: 6px solid transparent;\n}\n.prev:before {\n    position: absolute;\n    content: \"\";\n    width: 3px;\n    height: 10px;\n    top: 0;\n    right: 100%;\n    transform: translate(0, -50%);\n    background: white;\n}\n.next {\n    border-left: 10px solid white;\n    border-top: 6px solid transparent;\n    border-bottom: 6px solid transparent;\n}\n.next:before {\n    position: absolute;\n    content: \"\";\n    width: 3px;\n    height: 10px;\n    top: 0;\n    transform: translate(0, -50%);\n    background: white;\n}\n.keytime {\n  position: relative;\n  display: inline-block;\n  height: 100%;\n  font-size: 13px;\n  font-weight: bold;\n  color: #777;\n}\n.keytime:last-child {\n  max-width: 0px;\n}\n.keytime span {\n  position: absolute;\n  top: 2px;\n  left: 0;\n  display: inline-block;\n  transform: translate(-50%);\n  color: #eee;\n}\n.keytime .graduation {\n  position: absolute;\n  bottom: 0;\n  width: 1px;\n  height: 10px;\n  background: #777;\n  transform: translate(-50%);\n}\n.keytime .graduation.half {\n  left: 50%;\n  height: 7px;\n}\n.keytime .graduation.quarter {\n  left: 25%;\n  height: 5px;\n}\n.keytime .graduation.quarter3 {\n  left: 75%;\n  height: 5px;\n}\n.scroll_area {\n  position: relative;\n  width: 100%;\n  height: calc(100% - 60px);\n  overflow: auto;\n}\n.properties_area, .keyframes_area, .values_area {\n  display: inline-block;\n  position: relative;\n  font-size: 16px;\n  overflow: auto;\n}\n\n.properties_area::-webkit-scrollbar, .keyframes_area::-webkit-scrollbar {\n    display: none; // Safari and Chrome\n}\n.properties_area {\n  width: 30%;\n  max-width: 200px;\n  box-sizing: border-box;\n}\n.values_area {\n    width: 50px;\n    min-width: 50px;\n    display: inline-block;\n    border-right: 1px solid #999;\n    box-sizing: border-box;\n}\n.value input {\n    appearance: none;\n    -webkit-appearance: none;\n    outline: none;\n    position: relative;\n    display: block;\n    width: 100%;\n    height: 100%;\n    background: transparent;\n    color: #4af;\n    font-weight: bold;\n    background: none;\n    border: 0;\n    box-sizing: border-box;\n    text-align: center;\n}\n.alt .value input {\n    cursor: ew-resize;\n}\n.value[data-object=\"1\"] input {\n    display: none;\n}\n.properties_scroll_area {\n  display: inline-block;\n  min-width: 100%;\n}\n.keyframes_area {\n  flex: 1;\n}\n.keyframes_scroll_area {\n  position: relative;\n  min-width: 300px;\n}\n.keyframes, .property, .value {\n  position: relative;\n  height: 25px;\n  border-bottom: 1px solid #777;\n  box-sizing: border-box;\n  white-space: nowrap;\n  background: rgba(90, 90, 90, 0.7);\n  z-index: 1;\n}\n\n.property {\n  line-height: 25px;\n  padding-left: 10px;\n  box-sizing: border-box;\n  font-size: 13px;\n  font-weight: bold;\n  color: #eee;\n}\n.time_area {\n    font-size: 13px;\n    color: #4af;\n    line-height: 30px;\n    font-weight: bold;\n    height: 100%;\n    line-height: 30px;\n    border: 0;\n    background: transparent;\n    outline: 0;\n}\n.time_area:after {\n    content: \"s\";\n}\n.property .arrow {\n    position: relative;\n    display: inline-block;\n    margin-right: 5px;\n    width: 0;\n    vertical-align: middle;\n    cursor: pointer;\n    border-top: 6px solid #eee;\n    border-left: 4px solid transparent;\n    border-right: 4px solid transparent;\n}\n.property[data-fold=\"1\"] .arrow {\n    border-top: 4px solid transparent;\n    border-bottom: 4px solid transparent;\n    border-right: 0;\n    border-left: 6px solid #eee;\n    margin-left: 2px;\n}\n.property[data-object=\"0\"] .arrow {\n    display: none;\n}\n.property.fold, .keyframes.fold, .value.fold {\n    display: none;\n}\n.property.select, .value.select, .keyframes.select {\n    background: rgba(120, 120, 120, 0.7);\n}\n.keyframes {\n\n}\n.keyframe_line {\n  position: absolute;\n  height: 8px;\n  top: 0;\n  bottom: 0;\n  margin: auto;\n  background: #666;\n  z-index: 0;\n}\n.keyframe {\n  position: absolute;\n  font-size: 0px;\n  width: 12px;\n  height: 12px;\n  top: 0px;\n  bottom: 0px;\n  margin: auto;\n  background: #fff;\n  border: 2px solid #383838;\n  border-radius: 2px;\n  box-sizing: border-box;\n  transform: translate(-50%) rotate(45deg);\n  z-index: 1;\n  cursor: pointer;\n}\n.select .keyframe {\n    border-color: #555;\n}\n.keyframe.select {\n    background: #4af;\n}\n.keyframes_container, .line_area {\n  position: relative;\n  width: calc(100% - 30px);\n  left: 15px;\n  height: 100%;\n}\n.line_area {\n  position: absolute;\n  top: 0;\n  z-index: 0;\n}\n.keyframe_cursor {\n  position: absolute;\n  top: 0;\n  z-index: 1;\n  background: #4af;\n  width: 1px;\n  height: 100%;\n  left: 15px;\n  transform: translate(-50%);\n}\n.division_line {\n  position: absolute;\n  background: #333;\n  width: 1px;\n  height: 100%;\n  transform: translate(-50%);\n}\n`.replace(/\\.([^{,\\s\\d.]+)/g, `.${PREFIX}$1`);\n","import { PREFIX } from \"./consts\";\nimport Scene, { SceneItem, Frame } from \"scenejs\";\nimport {\n    hasClass as hasClass2,\n    addClass as addClass2,\n    removeClass as removeClass2,\n    isString,\n    IObject,\n    isObject,\n    isArray,\n    isUndefined,\n} from \"@daybrush/utils\";\nimport { ElementStructure } from \"./types\";\n\nexport function numberFormat(num: number, count: number, isRight?: boolean) {\n    const length = `${num}`.length;\n    const arr = [];\n\n    if (isRight) {\n        arr.push(num);\n    }\n    for (let i = length; i < count; ++i) {\n        arr.push(0);\n    }\n    if (!isRight) {\n        arr.push(num);\n    }\n    return arr.join(\"\");\n}\nexport function applyStyle(el: HTMLElement, style: IObject<any>) {\n    for (const name in style) {\n        el.style[name] = style[name];\n    }\n}\nexport function findIndexByProperty(selectedProperty: string, structures: ElementStructure[]) {\n    return structures.findIndex(\n        ({dataset: {property}}) => property === selectedProperty,\n    );\n}\n\nexport function createElement(structure: ElementStructure) {\n    const {selector, dataset, attr, style, html} = structure;\n\n    const classNames = selector.match(/\\.([^.#\\s])+/g) || [];\n    const tag = (selector.match(/^[^.#\\s]+/g) || [])[0] || \"div\";\n    const id = (selector.match(/#[^.#\\s]+/g) || [])[0] || \"\";\n    const el = document.createElement(tag);\n\n    id && (el.id = id.replace(/^#/g, \"\"));\n    el.className = classNames.map(name => `${PREFIX}${name.replace(/^\\./g, \"\")}`).join(\" \");\n\n    if (dataset) {\n        for (const name in dataset) {\n            el.setAttribute(`data-${name}`, dataset[name]);\n        }\n    }\n    if (attr) {\n        for (const name in attr) {\n            el.setAttribute(name, attr[name]);\n        }\n    }\n    if (style) {\n        applyStyle(el, style);\n    }\n    if (html) {\n        el.innerHTML = html;\n    }\n    return el;\n}\nexport function updateElement(prevStructure: ElementStructure, nextStructure: ElementStructure) {\n    const {dataset, attr, style, html, element} = nextStructure;\n    if (dataset) {\n        for (const name in dataset) {\n            element.setAttribute(`data-${name}`, dataset[name]);\n        }\n    }\n    if (attr) {\n        for (const name in attr) {\n            element.setAttribute(name, attr[name]);\n        }\n    }\n    style && applyStyle(element, style);\n    if (prevStructure.html !== nextStructure.html) {\n        element.innerHTML = html;\n    }\n}\nexport function keys(value: object) {\n    const arr = [];\n    for (const name in value) {\n        arr.push(name);\n    }\n    return arr;\n}\nexport function toValue(value: any) {\n    const type = typeof value;\n    if (type === \"object\") {\n        if (Array.isArray(value)) {\n            return `[${value.join(\", \")}]`;\n        }\n        return `{${keys(value).map(k => `${k}: ${toValue(value[k])}`).join(\", \")}}`;\n    }\n    return value;\n}\nexport function flatObject(obj: IObject<any>, newObj: IObject<any> = {}) {\n\n    for (const name in obj) {\n        const value = obj[name];\n\n        if (isObject(value)) {\n            const nextObj = flatObject(isFrame(value) ? value.get() : value);\n\n            for (const nextName in nextObj) {\n                newObj[`${name}///${nextName}`] = nextObj[nextName];\n            }\n        } else {\n            newObj[name] = value;\n        }\n    }\n    return newObj;\n}\nexport function getTimelineInfo(scene: Scene) {\n  const timelineInfo = {};\n  scene.forEach((item: SceneItem) => {\n    const delay = item.getDelay();\n    const times = item.times;\n\n    times.forEach(time => {\n      const frame = item.getFrame(time);\n      (function forEach(...objs: any[]) {\n        const length = objs.length;\n        const lastObj = objs[length - 1];\n        const properties = objs.slice(0, -1);\n\n        const name = properties.join(\"///\");\n\n        if (name) {\n            if (!timelineInfo[name]) {\n                timelineInfo[name] = [];\n            }\n            const info = timelineInfo[name];\n\n            info.push([delay + time, lastObj]);\n        }\n\n        if (typeof lastObj === \"object\") {\n            Object.keys(lastObj).forEach(name2 => {\n                forEach(...properties, name2, lastObj[name2]);\n            });\n        }\n      })(item.getId(), frame.get());\n    });\n  });\n  return timelineInfo;\n}\n\nexport function getTarget(target: HTMLElement, conditionCallback: (el: Element) => boolean): HTMLElement {\n    let parentTarget = target;\n\n    while (parentTarget && parentTarget !== document.body) {\n        if (conditionCallback(parentTarget)) {\n            return parentTarget;\n        }\n        parentTarget = parentTarget.parentNode as HTMLElement;\n    }\n    return null;\n}\n\nexport function hasClass(target: Element, className: string) {\n    return hasClass2(target, `${PREFIX}${className}`);\n}\nexport function addClass(target: Element, className: string) {\n    return addClass2(target, `${PREFIX}${className}`);\n}\nexport function removeClass(target: Element, className: string) {\n    return removeClass2(target, `${PREFIX}${className}`);\n}\nexport function findStructure(\n    selector: string,\n    structure: ElementStructure | ElementStructure[],\n    multi: true,\n    arr?: ElementStructure[],\n): ElementStructure[];\nexport function findStructure(\n    selector: string,\n    structure: ElementStructure | ElementStructure[],\n    multi?: false,\n    arr?: ElementStructure[],\n): ElementStructure;\nexport function findStructure(\n    selector: string,\n    structure: ElementStructure | ElementStructure[],\n    multi: true | false,\n    arr?: ElementStructure[],\n): ElementStructure | ElementStructure[];\nexport function findStructure(\n    selector: string,\n    structure: ElementStructure | ElementStructure[],\n    multi: boolean = false,\n    arr: ElementStructure[] = [],\n): ElementStructure | ElementStructure[] {\n    if (isArray(structure)) {\n        const length = structure.length;\n\n        for (let i = 0; i < length; ++i) {\n            findStructure(selector, structure[i], multi, arr);\n        }\n    } else {\n        if (structure.selector === selector) {\n            arr.push(structure);\n        }\n        if (!multi && arr.length) {\n            return arr[0];\n        }\n        if (structure.children) {\n            findStructure(selector, structure.children, multi, arr);\n        }\n    }\n    return multi ? arr : arr[0];\n}\nexport function isScene(value: any): value is Scene {\n    return !!(value.constructor as typeof Scene).prototype.getItem;\n}\nexport function isSceneItem(value: any): value is SceneItem {\n    return !!(value.constructor as typeof SceneItem).prototype.getFrame;\n}\nexport function isFrame(value: any): value is Frame {\n    return !!(value.constructor as typeof Frame).prototype.toCSS;\n}\nexport function splitProperty(scene: Scene, property: string) {\n    const names = property.split(\"///\");\n    const length = names.length;\n    let item: Scene | SceneItem = scene;\n    let i;\n\n    for (i = 0; i < length; ++i) {\n        if (isSceneItem(item)) {\n            break;\n        }\n        item = scene.getItem(names[i]);\n    }\n    return {\n        item: item as SceneItem,\n        names: names.slice(0, i),\n        properties: names.slice(i),\n    };\n}\nexport function getSceneItem(scene: Scene, names: string[]): SceneItem {\n    return names.reduce<any>(\n        (nextScene, name) => nextScene.getItem(name),\n        scene,\n    );\n}\n\nexport function findElementIndexByPosition(elements: HTMLElement[], pos: number): number {\n    const length = elements.length;\n\n    for (let index = 0; index < length; ++index) {\n        const el = elements[index];\n        const box = el.getBoundingClientRect();\n        const top = box.top;\n        const bottom = top + box.height;\n\n        if (top <= pos && pos < bottom) {\n            return index;\n        }\n    }\n    return -1;\n}\n","import { now } from \"@daybrush/utils\";\n\nlet prevTime = 0;\nlet prevX = -1;\nlet prevY = -1;\n\nexport function dblCheck(isDrag, e, clientX, clientY, callback) {\n    const currentTime = now();\n\n    if (!isDrag) {\n        if (\n            prevX === clientX &&\n            prevY === clientY &&\n            currentTime - prevTime <= 500\n        ) {\n            callback(e, clientX, clientY);\n        }\n        prevX = clientX;\n        prevY = clientY;\n        prevTime = currentTime;\n    }\n}\n","import { getKeytimesStructure } from \"./KeytimesStructure\";\nimport { Ids, ElementStructure } from \"./types\";\n\nexport function getHeaderAreaStructure(ids: Ids, zoom: number, maxDuration: number, maxTime: number): ElementStructure {\n    return {\n        selector: \".header_area\",\n        ref: e => {\n            ids.keyframesScrollAreas = [];\n            ids.keyframesAreas = [];\n            ids.propertiesAreas = [];\n        },\n        children: [\n            {\n                ref: (e: ElementStructure) => {\n                    ids.propertiesAreas[0] = e;\n                },\n                selector: \".properties_area\",\n                children: [\n                    {\n                        selector: \".property\",\n                        html: \"Name\",\n                    },\n                ],\n            },\n            {\n                selector: \".values_area\",\n                children: {\n                    selector: \".value\",\n                    html: \"+\",\n                },\n            },\n            getKeytimesAreaStructure(ids, zoom, maxDuration, maxTime),\n        ],\n    };\n}\n\nexport function getKeytimesAreaStructure(\n    ids: Ids,\n    zoom: number,\n    maxDuration: number,\n    maxTime: number,\n): ElementStructure {\n    return {\n        ref: e => {\n            ids.keyframesAreas[0] = e;\n        },\n        selector: \".keyframes_area\",\n        children: {\n            style: {\n                minWidth: `${50 * maxTime}px`,\n                width: `${Math.min(maxDuration ? maxTime / maxDuration : 1, 2) * zoom * 100}%`,\n            },\n            dataset: {\n                width: Math.min(maxDuration ? maxTime / maxDuration : 1, 2),\n            },\n            ref: (e: ElementStructure) => {\n                ids.keyframesScrollAreas[0] = e;\n            },\n            selector: \".keyframes_scroll_area\",\n            children: {\n                ref: e => {\n                    ids.cursors = [];\n                },\n                selector: \".keyframes\",\n                children: [\n                    {\n                        ref: e => {\n                            ids.keytimesContainer = e;\n                        },\n                        selector: \".keyframes_container\",\n                        children: getKeytimesStructure(maxTime),\n                    },\n                    {\n                        selector: \".keyframe_cursor\",\n                        ref: e => {\n                            ids.cursors[0] = e;\n                        },\n                    },\n                ],\n            },\n        },\n    };\n}\n","export function getKeytimesStructure(maxTime) {\n    const keytimes = [];\n\n    for (let time = 0; time <= maxTime; ++time) {\n        keytimes.push({\n            key: time,\n            dataset: {\n                time,\n            },\n            selector: \".keytime\",\n            style: {\n                width: `${100 / maxTime}%`,\n            },\n            children: [\n                {\n                    selector: \"span\",\n                    html: `${time}`,\n                },\n                {selector: \".graduation.start\"},\n                {selector: \".graduation.quarter\"},\n                {selector: \".graduation.half\"},\n                {selector: \".graduation.quarter3\"},\n            ],\n        });\n    }\n    return keytimes;\n}\nexport function getLinesStructure(maxTime: number) {\n    const lines = [];\n\n    for (let time = 0; time <= maxTime; ++time) {\n        lines.push({\n            key: time,\n            selector: \".division_line\",\n            style: {\n                left: `${100 / maxTime * time}%`,\n            },\n        });\n    }\n    return lines;\n}\n","import { toValue, applyStyle } from \"./utils\";\nimport { ElementStructure, Ids } from \"./types\";\nimport { getLinesStructure } from \"./KeytimesStructure\";\n\nexport function updateKeyframesStructure(keyframes: ElementStructure[], maxTime) {\n    keyframes.forEach(keyframe => {\n        const {selector, dataset, style, element} = keyframe;\n        if (selector === \".keyframe\") {\n            style.left = `${dataset.time / maxTime * 100}%`;\n        } else {\n            style.left = `${dataset.from / maxTime * 100}%`,\n            style.width = `${(dataset.to - dataset.from) / maxTime * 100}%`;\n        }\n        applyStyle(element, style);\n    });\n}\n\nexport function getKeyframesAreaStructure(\n    ids: Ids,\n    keyframesList,\n    zoom: number,\n    maxDuration: number,\n    maxTime: number,\n): ElementStructure {\n    const width = Math.min(maxDuration ? maxTime / maxDuration : 1, 2);\n    return {\n        ref: e => {\n            ids.keyframesAreas[1] = e;\n        },\n        selector: \".keyframes_area\",\n        children: {\n            style: {\n                minWidth: `${50 * maxTime}px`,\n                width: `${width * zoom * 100}%`,\n            },\n            dataset: {\n                width,\n            },\n            ref: e => {\n                ids.keyframesScrollAreas[1] = e;\n            },\n            selector: \".keyframes_scroll_area\",\n            children: getKeyframesScrollAreaChildrenStructure(ids, keyframesList, maxTime),\n        },\n    };\n}\nexport function getKeyframesScrollAreaChildrenStructure(ids: Ids, keyframesList, maxTime): ElementStructure[] {\n    return [\n        ...keyframesList,\n        {\n            key: \"cursor\",\n            selector: \".keyframe_cursor\",\n            ref: e => {\n                ids.cursors[1] = e;\n            },\n        },\n        {\n            key: \"lineArea\",\n            ref: e => {\n                ids.lineArea = e;\n            },\n            selector: \".line_area\",\n            children: getLinesStructure(maxTime),\n        },\n    ];\n}\nexport function getKeyframesListStructure(ids: Ids, timelineInfo, maxTime: number): ElementStructure[] {\n    const keyframesList: ElementStructure[] = [];\n\n    for (const property in timelineInfo) {\n        const times = timelineInfo[property];\n        const keyframes = getKeyframesStructure(times, maxTime);\n\n        keyframesList.push({\n            ref: (e, i) => {\n                ids.keyframesList[i] = e;\n                ids.keyframesContainers[i] = e.children as ElementStructure;\n            },\n            selector: \".keyframes\",\n            key: property,\n            dataset: {\n                property,\n            },\n            children: {\n                selector: \".keyframes_container\",\n                children: keyframes,\n            },\n        });\n    }\n    return keyframesList;\n}\nexport function getKeyframesStructure(times: any[][], maxTime): ElementStructure[] {\n    const keyframeLines: ElementStructure[] = [];\n\n    const keyframes: ElementStructure[] = times.map(([time, value], i): ElementStructure => {\n        const valueText = toValue(value);\n\n        if (times[i + 1]) {\n            const [nextTime, nextValue] = times[i + 1];\n            const nextValueText = toValue(nextValue);\n\n            if (valueText !== nextValueText) {\n                keyframeLines.push({\n                    selector: \".keyframe_line\",\n                    key: `${time},${nextTime}`,\n                    dataset: {\n                        time: `${time},${nextTime}`,\n                        from: time,\n                        to: nextTime,\n                    },\n                    style: {\n                        left: `${time / maxTime * 100}%`,\n                        width: `${(nextTime - time) / maxTime * 100}%`,\n                    },\n                });\n            }\n        }\n\n        return {\n            key: time,\n            selector: \".keyframe\",\n            dataset: {\n                time,\n                value: valueText,\n            },\n            style: {\n                left: `${time / maxTime * 100}%`,\n            },\n            html: `${time} ${valueText}`,\n        };\n    });\n\n    return [...keyframes, ...keyframeLines];\n}\n","import { getKeyframesAreaStructure, getKeyframesListStructure } from \"./KeyframesStructure\";\nimport { ElementStructure, Ids } from \"./types\";\nimport { getPropertiesStructure } from \"./PropertiesStructure\";\nimport { getValuesStructure } from \"./ValuesStructure\";\n\nexport function getScrollAreaStructure(\n    ids: Ids,\n    timelineInfo,\n    zoom: number,\n    maxDuration: number,\n    maxTime: number,\n): ElementStructure {\n    const keyframesList: ElementStructure[] = getKeyframesListStructure(ids, timelineInfo, maxTime);\n\n    return {\n        ref: e => {\n            ids.scrollArea = e;\n            ids.keyframesList = [];\n            ids.keyframesContainers = [];\n        },\n        selector: \".scroll_area\",\n        children: [\n            {\n                ref: e => {\n                    ids.propertiesAreas[1] = e;\n                    ids.properties = [];\n                },\n                selector: \".properties_area\",\n                children: [\n                    {\n                        selector: \".properties_scroll_area\",\n                        children: getPropertiesStructure(ids, timelineInfo),\n                    },\n                ],\n            },\n            {\n                ref: e => {\n                    ids.valuesArea = e;\n                    ids.values = [];\n                },\n                selector: \".values_area\",\n                children: getValuesStructure(ids, timelineInfo),\n            },\n            getKeyframesAreaStructure(ids, keyframesList, zoom, maxDuration, maxTime),\n        ],\n    };\n}\n","import { ElementStructure, Ids } from \"./types\";\n\nexport function getPropertiesStructure(ids: Ids, timelineInfo) {\n    const properties: ElementStructure[] = [];\n\n    for (const property in timelineInfo) {\n        const propertyNames = property.split(\"///\");\n        const length = propertyNames.length;\n        const id = propertyNames[length - 1];\n\n        properties.push({\n            ref: (e, i) => {\n                ids.properties[i] = e;\n            },\n            key: property,\n            selector: \".property\",\n            dataset: {\n                id,\n                property,\n                parent: propertyNames[length - 2] || \"\",\n                object: \"0\",\n                item: propertyNames[0],\n            },\n            style: {\n                paddingLeft: `${10 + (length - 1) * 20}px`,\n            },\n            children: [\n                { selector: \".arrow\"},\n                {\n                    selector: \"span\",\n                    html: id,\n                },\n            ],\n        });\n        const parentProperty = propertyNames.slice(0, -1).join(\"///\");\n        properties.forEach(({dataset}) => {\n            if (dataset.property === parentProperty) {\n                dataset.object = \"1\";\n            }\n        });\n    }\n    return properties;\n}\n","import { isObject } from \"@daybrush/utils\";\nimport { Ids, ElementStructure } from \"./types\";\n\nexport function getValuesStructure(ids: Ids, timelineInfo): ElementStructure[] {\n    const values: ElementStructure[] = [];\n\n    for (const property in timelineInfo) {\n        const times = timelineInfo[property];\n        const isHasObject = times[0] && isObject(times[0][1]);\n        values.push({\n            ref: (e, i) => {\n                ids.values[i] = e;\n            },\n            key: property,\n            selector: \".value\",\n            dataset: {\n                property,\n                object: isHasObject ? \"1\" : \"0\",\n            },\n            children: {\n                selector: \"input\",\n                attr: {\n                    value: times[0] ? times[0][1] : \"\",\n                },\n            },\n        });\n    }\n    return values;\n}\n","import Scene, { SceneItem } from \"scenejs\";\nimport {\n    getTimelineInfo, getTarget,\n    hasClass, removeClass, addClass,\n    flatObject, splitProperty, findElementIndexByPosition,\n    createElement, updateElement, findIndexByProperty, findStructure, numberFormat,\n} from \"./utils\";\nimport { drag } from \"@daybrush/drag\";\nimport { CSS } from \"./consts\";\nimport { IObject, addEvent } from \"@daybrush/utils\";\nimport Axes, { PinchInput } from \"@egjs/axes\";\nimport { ElementStructure, Ids } from \"./types\";\nimport { dblCheck } from \"./dblcheck\";\nimport KeyController from \"keycon\";\nimport DataDOM from \"data-dom\";\nimport { getHeaderAreaStructure, getKeytimesAreaStructure } from \"./HeaderAreaStructure\";\nimport { getScrollAreaStructure } from \"./ScrollAreaStructure\";\nimport { getControlAreaStructure } from \"./ControlAreaStructure\";\n\nlet isExportCSS = false;\n\nexport default class Timeline {\n    private scene: Scene;\n    private maxTime: number = 0;\n    private axes: Axes;\n    private selectedProperty: string = \"\";\n    private selectedTime: number = -1;\n    private keycon: KeyController;\n    private datadom: DataDOM<ElementStructure>;\n    private structure: ElementStructure;\n    private ids: Ids = {};\n    constructor(scene: Scene, parentEl: HTMLElement) {\n        scene.finish();\n\n        this.scene = scene;\n        this.initStructure(scene, parentEl);\n        this.initEditor();\n        this.initScroll();\n        this.initWheelZoom();\n        this.initDragKeyframes();\n        this.initClickProperty();\n        this.initController();\n        this.initDragValues();\n        this.initKeyController();\n\n        scene.setTime(0);\n    }\n    public getElement() {\n        return this.structure.element;\n    }\n    // scene control\n    public prev() {\n        this.scene.setTime(this.scene.getTime() - 0.05);\n    }\n    public next() {\n        this.scene.setTime(this.scene.getTime() + 0.05);\n    }\n    public finish() {\n        this.scene.finish();\n    }\n    public togglePlay() {\n        const scene = this.scene;\n        if (scene.getPlayState() === \"running\") {\n            scene.pause();\n        } else {\n            scene.play();\n        }\n    }\n\n    // init\n    private initController() {\n        const ids = this.ids;\n        const playBtn = this.ids.playBtn.element;\n        const scene = this.scene;\n\n        playBtn.addEventListener(\"click\", e => {\n            this.togglePlay();\n            e.preventDefault();\n        });\n        ids.prevBtn.element.addEventListener(\"click\", e => {\n            this.prev();\n            e.preventDefault();\n        });\n        ids.nextBtn.element.addEventListener(\"click\", e => {\n            this.next();\n            e.preventDefault();\n        });\n        scene.on(\"play\", () => {\n            addClass(playBtn, \"pause\");\n            removeClass(playBtn, \"play\");\n            // playBtn.innerHTML = \"pause\";\n        });\n        scene.on(\"paused\", () => {\n            addClass(playBtn, \"play\");\n            removeClass(playBtn, \"pause\");\n            // playBtn.innerHTML = \"play\";\n        });\n        new KeyController(ids.timeArea.element)\n        .keydown(e => {\n            !e.isToggle && e.inputEvent.stopPropagation();\n        })\n        .keyup(e => {\n            !e.isToggle && e.inputEvent.stopPropagation();\n        })\n        .keyup(\"enter\", e => {\n            // go to time\n            const element = ids.timeArea.element;\n            const value = (element as HTMLInputElement).value;\n            const result = /(\\d+):(\\d+):(\\d+)/g.exec(value);\n\n            if (!result) {\n                return;\n            }\n            const minute = parseFloat(result[1]);\n            const second = parseFloat(result[2]);\n            const milisecond = parseFloat(`0.${result[3]}`);\n            const time = minute * 60 + second + milisecond;\n\n            scene.setTime(time);\n        });\n    }\n    private initKeyController() {\n        const ids = this.ids;\n\n        window.addEventListener(\"blur\", () => {\n            removeClass(ids.timeline.element, \"alt\");\n        });\n        this.keycon = new KeyController()\n        .keydown(\"space\", ({inputEvent}) => {\n            inputEvent.preventDefault();\n        })\n        .keydown(\"left\", e => {\n            this.prev();\n        })\n        .keydown(\"right\", e => {\n            this.next();\n        })\n        .keyup(\"backspace\", () => {\n            this.removeKeyframe(this.selectedProperty, this.scene.getTime());\n        })\n        .keydown(\"alt\", () => {\n            addClass(ids.timeline.element, \"alt\");\n        })\n        .keyup(\"alt\", () => {\n            removeClass(ids.timeline.element, \"alt\");\n        })\n        .keyup(\"esc\", () => {\n            this.finish();\n        })\n        .keyup(\"space\", () => {\n            this.togglePlay();\n        });\n    }\n    private initStructure(scene: Scene, parentEl: HTMLElement) {\n        const duration = Math.ceil(scene.getDuration());\n        const timelineInfo = getTimelineInfo(scene);\n        const maxDuration = Math.ceil(duration);\n        const maxTime = maxDuration + 5;\n        const ids = this.ids;\n        let timelineCSS: ElementStructure;\n\n        this.maxTime = maxTime;\n        if (!isExportCSS) {\n            timelineCSS = {\n                selector: \"style.style\",\n                html: CSS,\n            };\n            isExportCSS = true;\n        }\n\n        const structure: ElementStructure = {\n            selector: \".timeline\",\n            ref: e => {\n                ids.timeline = e;\n            },\n            children: [\n                timelineCSS,\n                getControlAreaStructure(ids),\n                getHeaderAreaStructure(ids, 1, maxDuration, maxTime),\n                getScrollAreaStructure(ids, timelineInfo, 1, maxDuration, maxTime),\n            ],\n        };\n        this.datadom = new DataDOM(\n            createElement,\n            updateElement,\n        );\n        this.structure = this.datadom.render(structure, parentEl);\n    }\n    private initScroll() {\n        const {\n            keyframesAreas,\n        } = this.ids;\n        let isScrollKeyframe = false;\n\n        const headerKeyframesArea = keyframesAreas[0].element;\n        const scrollKeyframesArea = keyframesAreas[1].element;\n        headerKeyframesArea.addEventListener(\"scroll\", () => {\n            if (isScrollKeyframe) {\n                isScrollKeyframe = false;\n            } else {\n                isScrollKeyframe = true;\n                scrollKeyframesArea.scrollLeft = headerKeyframesArea.scrollLeft;\n            }\n        });\n        scrollKeyframesArea.addEventListener(\"scroll\", () => {\n            if (isScrollKeyframe) {\n                isScrollKeyframe = false;\n            } else {\n                isScrollKeyframe = true;\n                headerKeyframesArea.scrollLeft = scrollKeyframesArea.scrollLeft;\n            }\n        });\n    }\n    private initWheelZoom() {\n        const ids = this.ids;\n        const keyframesScrollAreas = ids.keyframesScrollAreas;\n        const headerArea = keyframesScrollAreas[0].element;\n        const scrollArea = keyframesScrollAreas[1].element;\n\n        const axes = new Axes(\n            {\n                zoom: {\n                    range: [1, Infinity],\n                },\n            },\n            {},\n            { zoom: 1 },\n        );\n        axes.connect(\"zoom\", new PinchInput(scrollArea, {\n            scale: 0.1,\n            hammerManagerOptions: {\n                touchAction: \"auto\",\n            },\n        }));\n        axes.on(\"hold\", e => {\n            if (e.inputEvent) {\n                e.inputEvent.preventDefault();\n            }\n        });\n        axes.on(\"change\", e => {\n            const scale = ids.keyframesScrollAreas[0].dataset.width;\n            const width = e.pos.zoom * scale * 100;\n\n            ids.keyframesScrollAreas.forEach(({ element }) => {\n                element.style.width = `${width}%`;\n            });\n\n            if (e.inputEvent) {\n                e.inputEvent.preventDefault();\n            }\n        });\n\n        this.axes = axes;\n        headerArea.addEventListener(\"wheel\", e => {\n            const delta = e.deltaY;\n\n            axes.setBy({ zoom: delta / 5000 });\n            !e.deltaX && e.preventDefault();\n        });\n\n        addEvent(scrollArea, \"wheel\", e => {\n            if (!this.keycon.altKey) {\n                return;\n            }\n            e.preventDefault();\n            const delta = e.deltaY;\n\n            axes.setBy({ zoom: delta / 5000 });\n        });\n    }\n    private select(selectedProperty: string, keyframeTime?: number) {\n        const prevSelectedProperty = this.selectedProperty;\n        const prevSelectedTime = this.selectedTime;\n        const ids = this.ids;\n        const values = ids.values;\n        const properties = ids.properties;\n        const keyframesList = ids.keyframesList;\n\n        this.selectedProperty = selectedProperty;\n\n        if (prevSelectedProperty) {\n            const prevSelectedIndex = findIndexByProperty(prevSelectedProperty, properties);\n\n            removeClass(properties[prevSelectedIndex].element, \"select\");\n            removeClass(values[prevSelectedIndex].element, \"select\");\n            removeClass(keyframesList[prevSelectedIndex].element, \"select\");\n\n            if (prevSelectedTime >= 0) {\n                const keyframes = ids.keyframesContainers[prevSelectedIndex].children as ElementStructure[];\n\n                keyframes.forEach(keyframe => {\n                    if (keyframe.dataset.time === prevSelectedTime) {\n                        removeClass(keyframe.element, \"select\");\n                    }\n                });\n                this.selectedTime = -1;\n            }\n        }\n\n        if (selectedProperty) {\n            if (document.activeElement) {\n                (document.activeElement as HTMLElement).blur();\n            }\n            const selectedIndex = findIndexByProperty(selectedProperty, properties);\n            addClass(properties[selectedIndex].element, \"select\");\n            addClass(values[selectedIndex].element, \"select\");\n            addClass(keyframesList[selectedIndex].element, \"select\");\n\n            if (keyframeTime >= 0) {\n                const keyframes = ids.keyframesContainers[selectedIndex].children as ElementStructure[];\n\n                console.log(ids.keyframesContainers, selectedIndex);\n                keyframes.forEach(keyframe => {\n                    console.log(keyframe.dataset.time, keyframeTime);\n                    if (keyframe.dataset.time === keyframeTime) {\n                        addClass(keyframe.element, \"select\");\n                    }\n                });\n                this.selectedTime = keyframeTime;\n            }\n        }\n    }\n    private initClickProperty() {\n        const ids = this.ids;\n        const {\n            propertiesAreas,\n        } = ids;\n\n        propertiesAreas[1].element.addEventListener(\"click\", e => {\n            const properties = ids.properties.map(property => property.element);\n            const length = properties.length;\n            const arrow = getTarget(e.target as HTMLElement, el => hasClass(el, \"arrow\"));\n            const target = getTarget(e.target as HTMLElement, el => hasClass(el, \"property\"));\n\n            if (!target) {\n                return;\n            }\n            const index = properties.indexOf(target);\n\n            if (index === -1) {\n                return;\n            }\n            // select\n            if (!arrow) {\n                this.select(properties[index].dataset.property);\n                return;\n            }\n        });\n    }\n    private setInputs(obj: IObject<any>) {\n        const valuesArea = this.ids.valuesArea.element;\n        for (const name in obj) {\n            valuesArea.querySelector<HTMLInputElement>(`[data-property=\"${name}\"] input`).value = obj[name];\n        }\n    }\n    private moveCursor(time: number) {\n        const {cursors} = this.ids;\n        const maxTime = this.maxTime;\n        const px = 15 - 30 * time / maxTime;\n        const percent = 100 * time / maxTime;\n        const left = `calc(${percent}% + ${px}px)`;\n\n        cursors.forEach(cursor => {\n            cursor.element.style.left = left;\n        });\n    }\n    private initDragKeyframes() {\n        const ids = this.ids;\n        const {\n            scrollArea,\n            timeArea,\n            cursors,\n            keyframesAreas,\n            keyframesScrollAreas,\n        } = ids;\n        const scene = this.scene;\n\n        scene.on(\"animate\", e => {\n            const time = e.time;\n            this.moveCursor(time);\n\n            this.setInputs(flatObject(e.frames));\n            const minute = numberFormat(Math.floor(time / 60), 2);\n            const second = numberFormat(Math.floor(time % 60), 2);\n            const milisecond = numberFormat(Math.floor((time % 1) * 100), 3, true);\n            (timeArea.element as HTMLInputElement).value = `${minute}:${second}:${milisecond}`;\n        });\n        const getTime = (clientX: number) => {\n            const rect = keyframesScrollAreas[1].element.getBoundingClientRect();\n            const scrollAreaWidth = rect.width - 30;\n            const scrollAreaX = rect.left + 15;\n            const x = Math.min(scrollAreaWidth, Math.max(clientX - scrollAreaX, 0));\n            const percentage = x / scrollAreaWidth;\n            let time = this.maxTime * percentage;\n\n            time = Math.round(time * 20) / 20;\n\n            return time;\n        };\n        const move = (clientX: number) => {\n            scene.setTime(getTime(clientX));\n        };\n        const click = (e, clientX, clientY) => {\n            const target = getTarget(e.target as HTMLElement, el => hasClass(el, \"keyframe\"));\n            const time = target ? parseFloat(target.getAttribute(\"data-time\")) : getTime(clientX);\n\n            scene.setTime(time);\n            const list = ids.keyframesList;\n            const index = findElementIndexByPosition(\n                list.map(({element}) => element),\n                clientY,\n            );\n\n            if (index > -1) {\n                this.select(list[index].dataset.property, time);\n            }\n            e.preventDefault();\n        };\n        const dblclick = (e, clientX, clientY) => {\n            const list = ids.keyframesList;\n            const index = findElementIndexByPosition(\n                list.map(({element}) => element),\n                clientY,\n            );\n\n            if (index === -1) {\n                return;\n            }\n            this.addKeyframe(index, getTime(clientX));\n        };\n        drag(cursors[0].element, {\n            dragstart: ({inputEvent}) => {\n                inputEvent.stopPropagation();\n            },\n            drag: ({ clientX }) => {\n                move(clientX);\n            },\n            container: window,\n        });\n        keyframesScrollAreas.forEach(({ element }) => {\n            drag(element, {\n                container: window,\n                drag: ({ deltaX, deltaY, inputEvent }) => {\n                    keyframesAreas[1].element.scrollLeft -= deltaX;\n                    scrollArea.element.scrollTop -= deltaY;\n                    inputEvent.preventDefault();\n                },\n                dragend: ({ isDrag, clientX, clientY, inputEvent }) => {\n                    !isDrag && click(inputEvent, clientX, clientY);\n                    dblCheck(isDrag, inputEvent, clientX, clientY, dblclick);\n                },\n            });\n        });\n    }\n    private initDragValues() {\n        let dragTarget: HTMLInputElement = null;\n        let dragTargetValue: any;\n        drag(this.ids.valuesArea.element, {\n            container: window,\n            dragstart: e => {\n                dragTarget = e.inputEvent.target;\n                dragTargetValue = dragTarget.value;\n\n                console.log(this.keycon.altKey, getTarget(dragTarget, el => el.nodeName === \"INPUT\"));\n                if (!this.keycon.altKey || !getTarget(dragTarget, el => el.nodeName === \"INPUT\")) {\n                    return false;\n                }\n            },\n            drag: e => {\n                const nextValue = dragTargetValue.replace(/-?\\d+/g, num => {\n                    return `${parseFloat(num) + Math.round(e.distX / 2)}`;\n                });\n\n                dragTarget.value = nextValue;\n            },\n            dragend: e => {\n                this.edit(dragTarget, dragTarget.value);\n            },\n        });\n    }\n    private addKeyframe(index: number, time: number) {\n        const list = this.ids.keyframesList;\n        const scene = this.scene;\n        const property = list[index].dataset.property;\n        const {item, properties} = splitProperty(scene, property);\n\n        this.editKeyframe(time, item.getNowValue(time, properties), index);\n        this.select(property, time);\n    }\n    private removeKeyframe(property: string, time: number) {\n        if (!property) {\n            return;\n        }\n        const scene = this.scene;\n        const {item, properties} = splitProperty(scene, property);\n\n        if (properties.length) {\n            item.remove(time, ...properties);\n        } else {\n            item.removeFrame(time);\n        }\n        this.update();\n    }\n\n    private update() {\n        const scene = this.scene;\n        const timelineInfo = getTimelineInfo(scene);\n        const maxDuration = Math.ceil(scene.getDuration());\n        const maxTime = maxDuration + 5;\n        let zoom = this.axes.get([\"zoom\"]).zoom;\n        const currentMaxTime = this.maxTime;\n        this.maxTime = maxTime;\n        const ids = this.ids;\n        const prevKeytimesArea = ids.keyframesAreas[0];\n        const nextZoom = currentMaxTime > 5 ? maxDuration / (currentMaxTime - 5) : 1;\n\n        zoom = zoom * nextZoom;\n        this.axes.axm.set({ zoom });\n        // update keytimes\n        this.datadom.update(\n            prevKeytimesArea,\n            getKeytimesAreaStructure(ids, zoom, maxDuration, maxTime),\n        );\n\n        const nextScrollAreaStructure = getScrollAreaStructure(\n            ids, timelineInfo,\n            this.axes.get([\"zoom\"]).zoom,\n            maxDuration, this.maxTime,\n        );\n\n        this.datadom.update(\n            ids.scrollArea,\n            nextScrollAreaStructure,\n        );\n        scene.setTime(scene.getTime());\n    }\n    private editKeyframe(time: number, value: any, index: number) {\n        const ids = this.ids;\n        const valuesStructure = ids.values;\n        const isObjectData = ids.properties[index].dataset.object === \"1\";\n\n        if (isObjectData) {\n            return;\n        }\n        const property = valuesStructure[index].dataset.property as string;\n        const properties = property.split(\"///\");\n        const scene = this.scene;\n\n        scene.set(time, ...properties, value);\n        scene.setTime(time);\n        this.update();\n    }\n    private restoreKeyframes() {\n        this.scene.setTime(this.scene.getTime());\n    }\n    private edit(target: HTMLInputElement, value: any) {\n        const parentEl = getTarget(target, el => hasClass(el, \"value\"));\n\n        if (!parentEl) {\n            return;\n        }\n        const values = this.ids.values.map(({element}) => element);\n        const index = values.indexOf(parentEl);\n\n        if (index === -1) {\n            return;\n        }\n        this.editKeyframe(this.scene.getTime(), value, index);\n    }\n    private initEditor() {\n        const valuesArea = this.ids.valuesArea.element;\n\n        new KeyController(valuesArea)\n        .keydown(e => {\n            !e.isToggle && e.inputEvent.stopPropagation();\n        })\n        .keyup(e => {\n            !e.isToggle && e.inputEvent.stopPropagation();\n        })\n        .keyup(\"enter\", e => {\n            const target = e.inputEvent.target as HTMLInputElement;\n\n            this.edit(target, target.value);\n        })\n        .keyup(\"esc\", e => {\n            const target = e.inputEvent.target as HTMLInputElement;\n\n            target.blur();\n        });\n        valuesArea.addEventListener(\"focusout\", e => {\n            this.restoreKeyframes();\n        });\n    }\n}\n","import { Ids, ElementStructure } from \"./types\";\n\nexport function getControlAreaStructure(ids: Ids): ElementStructure {\n    return {\n        selector: \".header_area.control_area\",\n        children: [\n            {\n                selector: \".properties_area\",\n                children: {\n                    selector: \".property\",\n                },\n            },\n            {\n                selector: \".values_area\",\n                children: {\n                    selector: \".value\",\n                },\n            },\n            {\n                selector: \".keyframes_area\",\n                children: {\n                    selector: \".keyframes\",\n                    children: [\n                        {\n                            selector: \"input.time_area\",\n                            ref: (e: ElementStructure) => {\n                                ids.timeArea = e;\n                            },\n                            html: \"???\",\n                            // html: \"0\",\n                        },\n                        {\n                            selector: \".play_control_area\",\n                            children: [\n                                {\n                                    ref: (e: ElementStructure) => {\n                                        ids.prevBtn = e;\n                                    },\n                                    selector: \".control.prev\",\n                                },\n                                {\n                                    ref: (e: ElementStructure) => {\n                                        ids.playBtn = e;\n                                    },\n                                    selector: \".control.play\",\n                                },\n                                {\n                                    ref: (e: ElementStructure) => {\n                                        ids.nextBtn = e;\n                                    },\n                                    selector: \".control.next\",\n                                },\n                            ],\n                        },\n                    ],\n                },\n            },\n        ],\n    };\n}\n"],"names":["PREFIX","CSS","replace","numberFormat","num","count","isRight","length","arr","push","i","join","applyStyle","el","style","name","findIndexByProperty","selectedProperty","structures","findIndex","_a","createElement","structure","selector","dataset","attr","html","classNames","match","tag","id","document","className","map","setAttribute","innerHTML","updateElement","prevStructure","nextStructure","element","toValue","value","Array","isArray","keys","k","getTimelineInfo","scene","timelineInfo","forEach","item","delay","getDelay","times","time","frame","getFrame","_i","objs","lastObj","properties","slice","Object","name2","getId","get","getTarget","target","conditionCallback","parentTarget","body","parentNode","hasClass","hasClass2","addClass","addClass2","removeClass","removeClass2","splitProperty","property","names","split","constructor","prototype","getItem","findElementIndexByPosition","elements","pos","index","box","getBoundingClientRect","top","bottom","height","prevTime","prevX","prevY","getKeytimesAreaStructure","ids","zoom","maxDuration","maxTime","ref","e","keyframesAreas","children","minWidth","width","Math","min","keyframesScrollAreas","cursors","keytimesContainer","keytimes","key","getKeytimesStructure","getKeyframesAreaStructure","keyframesList","lineArea","lines","left","getLinesStructure","getKeyframesScrollAreaChildrenStructure","getKeyframesStructure","keyframeLines","valueText","_b","nextTime","from","to","getScrollAreaStructure","keyframes","keyframesContainers","getKeyframesListStructure","scrollArea","propertiesAreas","propertyNames","parent","object","paddingLeft","parentProperty","getPropertiesStructure","valuesArea","values","isHasObject","isObject","getValuesStructure","isExportCSS","parentEl","finish","initStructure","initEditor","initScroll","initWheelZoom","initDragKeyframes","initClickProperty","initController","initDragValues","initKeyController","setTime","this","getTime","getPlayState","pause","play","playBtn","addEventListener","_this","togglePlay","preventDefault","prevBtn","prev","nextBtn","next","on","KeyController","timeArea","keydown","isToggle","inputEvent","stopPropagation","keyup","result","exec","parseFloat","window","timeline","keycon","removeKeyframe","timelineCSS","duration","ceil","getDuration","getControlAreaStructure","getHeaderAreaStructure","datadom","DataDOM","render","isScrollKeyframe","headerKeyframesArea","scrollKeyframesArea","scrollLeft","headerArea","axes","Axes","range","Infinity","connect","PinchInput","scale","hammerManagerOptions","touchAction","delta","deltaY","setBy","deltaX","addEvent","altKey","keyframeTime","prevSelectedProperty","prevSelectedTime","selectedTime","prevSelectedIndex","keyframe","activeElement","blur","selectedIndex","console","log","arrow","indexOf","select","obj","querySelector","cursor","moveCursor","setInputs","flatObject","newObj","nextObj","toCSS","nextName","frames","minute","floor","second","milisecond","clientX","rect","scrollAreaWidth","scrollAreaX","percentage","max","round","dblclick","clientY","addKeyframe","drag","dragstart","move","container","scrollTop","dragend","isDrag","getAttribute","list","click","callback","currentTime","now","dblCheck","dragTargetValue","dragTarget","nodeName","nextValue","distX","edit","editKeyframe","getNowValue","remove","removeFrame","update","currentMaxTime","prevKeytimesArea","axm","set","nextScrollAreaStructure","valuesStructure","restoreKeyframes"],"mappings":"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"}