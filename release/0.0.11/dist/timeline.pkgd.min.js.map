{"version":3,"file":"timeline.pkgd.min.js","sources":["../src/consts.ts","../node_modules/@daybrush/utils/dist/utils.esm.js","../src/utils.ts","../node_modules/@daybrush/drag/dist/drag.esm.js","../node_modules/@egjs/hammerjs/dist/hammer.esm.js","../node_modules/@egjs/component/dist/component.esm.js","../node_modules/@egjs/axes/dist/axes.esm.js","../src/dblcheck.ts","../node_modules/keycon/dist/keycon.esm.js","../node_modules/data-dom/node_modules/@daybrush/utils/dist/utils.esm.js","../node_modules/data-dom/dist/datadom.esm.js","../src/HeaderAreaStructure.ts","../src/KeytimesStructure.ts","../src/KeyframesStructure.ts","../src/ScrollAreaStructure.ts","../src/PropertiesStructure.ts","../src/ValuesStructure.ts","../src/TimelineInfo.ts","../src/Timeline.ts","../src/ControlAreaStructure.ts"],"sourcesContent":["export const PREFIX = `scenejs_editor_`;\n\nexport const CSS2 = `\n.item_info {\n    position: fixed;\n    right: 0;\n    top: 0;\n    width: 200px;\n    background: #000;\n}\n.options_area {\n\n}\n.option_area {\n    position: relative;\n    border-bottom: 1px solid #777;\n    box-sizing: border-box;\n    white-space: nowrap;\n    background: rgba(90, 90, 90, 0.7);\n    font-size: 13px;\n    font-weight: bold;\n    color: #eee;\n    display: flex;\n}\n.option_name, .option_value {\n    width: 50%;\n    height: 30px;\n    line-height: 20px;\n    box-sizing: border-box;\n    padding: 5px;\n}\n.option_name {\n    border-right: 1px solid #999;\n}\n.option_value input {\n    appearance: none;\n    -webkit-appearance: none;\n    outline: none;\n    position: relative;\n    display: block;\n    width: 100%;\n    height: 100%;\n    background: transparent;\n    color: #4af;\n    font-weight: bold;\n    background: none;\n    border: 0;\n    box-sizing: border-box;\n}\n`.replace(/\\.([^{,\\s\\d.]+)/g, `.${PREFIX}$1`);\n\nexport const CSS = `\n.timeline * {\n    box-sizing: border-box;\n}\n.timeline {\n  position: fixed;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  width: 100%;\n  font-size: 0;\n  background: #000;\n  display: flex;\n  flex-direction: column;\n}\n.header_area, .scroll_area {\n   width: 100%;\n   position: relative;\n  display: flex;\n  -webkit-align-items: flex-start;\n  align-items: flex-start;\n}\n.header_area {\n  position: relative;\n  z-index: 10;\n  top: 0;\n  height: 30px;\n  min-height: 30px;\n}\n.header_area .keyframes {\n  padding: 0px;\n}\n.header_area .properties_area,\n.header_area .keyframes_area,\n.header_area .values_area,\n.header_area .keyframes_scroll_area {\n    height: 100%;\n}\n.header_area .property, .header_area .value, .header_area .keyframes {\n  height: 100%;\n}\n.header_area .property {\n    line-height: 30px;\n}\n.value .add {\n    text-align: center;\n    color: #fff;\n    line-height: 30px;\n    font-weight: bold;\n    font-size: 20px;\n    cursor: pointer;\n}\n.header_area .keyframes_area::-webkit-scrollbar {\n    display: none; // Safari and Chrome\n}\n.header_area .keyframe_cursor {\n    position: absolute;\n    border-top: 10px solid #4af;\n    border-left: 6px solid transparent;\n    border-right: 6px solid transparent;\n    width: 0;\n    height: 0;\n    bottom: 0;\n    top: auto;\n    background: none;\n    cursor: pointer;\n}\n.control_area .keyframes {\n    padding-left: 10px;\n}\n.play_control_area {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n}\n.play_control_area .control {\n    position: relative;\n    display: inline-block;\n    vertical-align: middle;\n    color: white;\n    margin: 0px 15px;\n}\n.play {\n    border-left: 14px solid white;\n    border-top: 8px solid transparent;\n    border-bottom: 8px solid transparent;\n}\n.pause {\n    border-left: 4px solid #fff;\n    border-right: 4px solid #fff;\n    width: 14px;\n    height: 16px;\n}\n.prev {\n    border-right: 10px solid white;\n    border-top: 6px solid transparent;\n    border-bottom: 6px solid transparent;\n}\n.prev:before {\n    position: absolute;\n    content: \"\";\n    width: 3px;\n    height: 10px;\n    top: 0;\n    right: 100%;\n    transform: translate(0, -50%);\n    background: white;\n}\n.next {\n    border-left: 10px solid white;\n    border-top: 6px solid transparent;\n    border-bottom: 6px solid transparent;\n}\n.next:before {\n    position: absolute;\n    content: \"\";\n    width: 3px;\n    height: 10px;\n    top: 0;\n    transform: translate(0, -50%);\n    background: white;\n}\n.keytime {\n  position: relative;\n  display: inline-block;\n  height: 100%;\n  font-size: 13px;\n  font-weight: bold;\n  color: #777;\n}\n.keytime:last-child {\n  max-width: 0px;\n}\n.keytime span {\n  position: absolute;\n  line-height: 1;\n  bottom: 12px;\n  display: inline-block;\n  transform: translate(-50%);\n  color: #eee;\n}\n.keytime .graduation {\n  position: absolute;\n  bottom: 0;\n  width: 1px;\n  height: 10px;\n  background: #777;\n  transform: translate(-50%);\n}\n.keytime .graduation.half {\n  left: 50%;\n  height: 7px;\n}\n.keytime .graduation.quarter {\n  left: 25%;\n  height: 5px;\n}\n.keytime .graduation.quarter3 {\n  left: 75%;\n  height: 5px;\n}\n.scroll_area {\n  position: relative;\n  width: 100%;\n  height: calc(100% - 60px);\n  overflow: auto;\n}\n.properties_area, .keyframes_area, .values_area {\n  display: inline-block;\n  position: relative;\n  font-size: 16px;\n  overflow: auto;\n}\n\n.properties_area::-webkit-scrollbar, .keyframes_area::-webkit-scrollbar {\n    display: none; // Safari and Chrome\n}\n.properties_area {\n  width: 30%;\n  max-width: 200px;\n  box-sizing: border-box;\n}\n.values_area {\n    width: 50px;\n    min-width: 50px;\n    display: inline-block;\n    border-right: 1px solid #999;\n    box-sizing: border-box;\n}\n.value input {\n    appearance: none;\n    -webkit-appearance: none;\n    outline: none;\n    position: relative;\n    display: block;\n    width: 100%;\n    height: 100%;\n    background: transparent;\n    color: #4af;\n    font-weight: bold;\n    background: none;\n    border: 0;\n    box-sizing: border-box;\n    text-align: center;\n}\n.value {\n\n}\n.alt .value input {\n    cursor: ew-resize;\n}\n.value[data-object=\"1\"] input {\n    display: none;\n}\n.properties_scroll_area {\n  display: inline-block;\n  min-width: 100%;\n}\n.keyframes_area {\n  flex: 1;\n}\n.keyframes_scroll_area {\n  position: relative;\n  min-width: 300px;\n}\n.keyframes, .property, .value {\n  position: relative;\n  height: 30px;\n  line-height: 30px;\n  border-bottom: 1px solid #777;\n  box-sizing: border-box;\n  white-space: nowrap;\n  background: rgba(90, 90, 90, 0.7);\n  z-index: 1;\n}\n\n.property {\n  padding-left: 10px;\n  box-sizing: border-box;\n  font-size: 13px;\n  font-weight: bold;\n  color: #eee;\n}\n.property .remove {\n    position: absolute;\n    display: inline-block;\n    cursor: pointer;\n    width: 18px;\n    height: 18px;\n    top: 0;\n    bottom: 0;\n    right: 10px;\n    margin: auto;\n    border-radius: 50%;\n    border: 2px solid #fff;\n    vertical-align: middle;\n    display: none;\n    margin-left: 10px;\n    box-sizing: border-box;\n}\n.property .remove:before, .property .remove:after {\n    position: absolute;\n    content: \"\";\n    width: 8px;\n    height: 2px;\n    border-radius: 1px;\n    background: #fff;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    margin: auto;\n}\n.property .remove:before {\n    transform: rotate(45deg);\n}\n.property .remove:after {\n    transform: rotate(-45deg);\n}\n.property:hover .remove {\n    display: inline-block;\n}\n\n[data-item=\"1\"], [data-item=\"1\"] .add {\n    height: 30px;\n    line-height: 30px;\n}\n.time_area {\n    position: absolute;\n    top: 0;\n    left: 10px;\n    font-size: 13px;\n    color: #4af;\n    line-height: 30px;\n    font-weight: bold;\n    height: 100%;\n    line-height: 30px;\n    border: 0;\n    background: transparent;\n    outline: 0;\n}\n.time_area:after {\n    content: \"s\";\n}\n.property .arrow {\n    position: relative;\n    display: inline-block;\n    width: 20px;\n    height: 25px;\n    cursor: pointer;\n    vertical-align: middle;\n}\n.property .arrow:after {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    right: 0;\n    left: 0;\n    bottom: 0;\n    margin: auto;\n    width: 0;\n    height: 0;\n    border-top: 6px solid #eee;\n    border-left: 4px solid transparent;\n    border-right: 4px solid transparent;\n}\n.property[data-fold=\"1\"] .arrow:after {\n    border-top: 4px solid transparent;\n    border-bottom: 4px solid transparent;\n    border-right: 0;\n    border-left: 6px solid #eee;\n}\n.property[data-object=\"0\"] .arrow {\n    display: none;\n}\n.property.fold, .keyframes.fold, .value.fold {\n    display: none;\n}\n.property.select, .value.select, .keyframes.select {\n    background: rgba(120, 120, 120, 0.7);\n}\n.keyframes {\n\n}\n.keyframe_delay {\n  position: absolute;\n  top: 3px;\n  bottom: 3px;\n  left: 0;\n  background: #4af;\n  opacity: 0.2;\n  z-index: 0;\n}\n.keyframe_group {\n    position: absolute;\n    top: 3px;\n    bottom: 3px;\n    left: 0;\n    background: #4af;\n    opacity: 0.6;\n    border: 1px solid rgba(0, 0, 0, 0.2);\n    border-left-color: rgba(255, 255, 255, 0.2);\n    border-top-color: rgba(255, 255, 255, 0.2);\n    z-index: 0;\n}\n.keyframe_line {\n  position: absolute;\n  height: 8px;\n  top: 0;\n  bottom: 0;\n  margin: auto;\n  background: #666;\n  z-index: 0;\n}\n.keyframe {\n  position: absolute;\n  font-size: 0px;\n  width: 12px;\n  height: 12px;\n  top: 0px;\n  bottom: 0px;\n  margin: auto;\n  background: #fff;\n  border: 2px solid #383838;\n  border-radius: 2px;\n  box-sizing: border-box;\n  transform: translate(-50%) rotate(45deg);\n  z-index: 1;\n  cursor: pointer;\n}\n.keyframe[data-no=\"1\"] {\n    opacity: 0.2;\n}\n.select .keyframe {\n    border-color: #555;\n}\n.keyframe.select {\n    background: #4af;\n}\n.keyframes_container, .line_area {\n  position: relative;\n  width: calc(100% - 30px);\n  left: 15px;\n  height: 100%;\n}\n.line_area {\n  position: absolute;\n  top: 0;\n  z-index: 0;\n}\n.keyframe_cursor {\n  position: absolute;\n  top: 0;\n  z-index: 1;\n  background: #4af;\n  width: 1px;\n  height: 100%;\n  left: 15px;\n  transform: translate(-50%);\n}\n.scroll_aare .keyframe_cursor {\n  pointer-events: none;\n}\n.division_line {\n  position: absolute;\n  background: #333;\n  width: 1px;\n  height: 100%;\n  transform: translate(-50%);\n}\n`.replace(/\\.([^{,\\s\\d.]+)/g, `.${PREFIX}$1`);\n\nexport const DURATION = \"duration\";\nexport const FILL_MODE = \"fillMode\";\nexport const DIRECTION = \"direction\";\nexport const ITERATION_COUNT = \"iterationCount\";\nexport const DELAY = \"delay\";\nexport const EASING = \"easing\";\nexport const PLAY_SPEED = \"playSpeed\";\nexport const EASING_NAME = \"easingName\";\nexport const ITERATION_TIME = \"iterationTime\";\nexport const PAUSED = \"paused\";\nexport const ENDED = \"ended\";\nexport const TIMEUPDATE = \"timeupdate\";\nexport const ANIMATE = \"animate\";\nexport const PLAY = \"play\";\nexport const RUNNING = \"running\";\nexport const ITERATION = \"iteration\";\nexport const START_ANIMATION = \"startAnimation\";\nexport const PAUSE_ANIMATION = \"pauseAnimation\";\nexport const ALTERNATE = \"alternate\";\nexport const REVERSE = \"reverse\";\nexport const ALTERNATE_REVERSE = \"alternate-reverse\";\nexport const NORMAL = \"normal\";\nexport const INFINITE = \"infinite\";\nexport const PLAY_STATE = \"playState\";\nexport const PLAY_CSS = \"playCSS\";\nexport const PREV_TIME = \"prevTime\";\nexport const TICK_TIME = \"tickTime\";\nexport const CURRENT_TIME = \"currentTime\";\nexport const SELECTOR = \"selector\";\nexport const TRANSFORM_NAME = \"transform\";\n","/*\nCopyright (c) 2018 Daybrush\n@name: @daybrush/utils\nlicense: MIT\nauthor: Daybrush\nrepository: https://github.com/daybrush/utils\n@version 0.7.0\n*/\n/**\n* @namespace\n* @name Consts\n*/\n\n/**\n* get string \"rgb\"\n* @memberof Color\n* @example\nimport {RGB} from \"@daybrush/utils\";\n\nconsole.log(RGB); // \"rgb\"\n*/\nvar RGB = \"rgb\";\n/**\n* get string \"rgba\"\n* @memberof Color\n* @example\nimport {RGBA} from \"@daybrush/utils\";\n\nconsole.log(RGBA); // \"rgba\"\n*/\n\nvar RGBA = \"rgba\";\n/**\n* get string \"hsl\"\n* @memberof Color\n* @example\nimport {HSL} from \"@daybrush/utils\";\n\nconsole.log(HSL); // \"hsl\"\n*/\n\nvar HSL = \"hsl\";\n/**\n* get string \"hsla\"\n* @memberof Color\n* @example\nimport {HSLA} from \"@daybrush/utils\";\n\nconsole.log(HSLA); // \"hsla\"\n*/\n\nvar HSLA = \"hsla\";\n/**\n* gets an array of color models.\n* @memberof Color\n* @example\nimport {COLOR_MODELS} from \"@daybrush/utils\";\n\nconsole.log(COLOR_MODELS); // [\"rgb\", \"rgba\", \"hsl\", \"hsla\"];\n*/\n\nvar COLOR_MODELS = [RGB, RGBA, HSL, HSLA];\n/**\n* get string \"function\"\n* @memberof Consts\n* @example\nimport {FUNCTION} from \"@daybrush/utils\";\n\nconsole.log(FUNCTION); // \"function\"\n*/\n\nvar FUNCTION = \"function\";\n/**\n* get string \"property\"\n* @memberof Consts\n* @example\nimport {PROPERTY} from \"@daybrush/utils\";\n\nconsole.log(PROPERTY); // \"property\"\n*/\n\nvar PROPERTY = \"property\";\n/**\n* get string \"array\"\n* @memberof Consts\n* @example\nimport {ARRAY} from \"@daybrush/utils\";\n\nconsole.log(ARRAY); // \"array\"\n*/\n\nvar ARRAY = \"array\";\n/**\n* get string \"object\"\n* @memberof Consts\n* @example\nimport {OBJECT} from \"@daybrush/utils\";\n\nconsole.log(OBJECT); // \"object\"\n*/\n\nvar OBJECT = \"object\";\n/**\n* get string \"string\"\n* @memberof Consts\n* @example\nimport {STRING} from \"@daybrush/utils\";\n\nconsole.log(STRING); // \"string\"\n*/\n\nvar STRING = \"string\";\n/**\n* get string \"number\"\n* @memberof Consts\n* @example\nimport {NUMBER} from \"@daybrush/utils\";\n\nconsole.log(NUMBER); // \"number\"\n*/\n\nvar NUMBER = \"number\";\n/**\n* get string \"undefined\"\n* @memberof Consts\n* @example\nimport {UNDEFINED} from \"@daybrush/utils\";\n\nconsole.log(UNDEFINED); // \"undefined\"\n*/\n\nvar UNDEFINED = \"undefined\";\n/**\n* Check whether the environment is window or node.js.\n* @memberof Consts\n* @example\nimport {IS_WINDOW} from \"@daybrush/utils\";\n\nconsole.log(IS_WINDOW); // false in node.js\nconsole.log(IS_WINDOW); // true in browser\n*/\n\nvar IS_WINDOW = typeof window !== UNDEFINED;\n/**\n* Check whether the environment is window or node.js.\n* @memberof Consts\n* @name document\n* @example\nimport {IS_WINDOW} from \"@daybrush/utils\";\n\nconsole.log(IS_WINDOW); // false in node.js\nconsole.log(IS_WINDOW); // true in browser\n*/\n\nvar doc = typeof document !== UNDEFINED && document;\nvar prefixes = [\"webkit\", \"ms\", \"moz\", \"o\"];\n/**\n * @namespace CrossBrowser\n */\n\n/**\n* Get a CSS property with a vendor prefix that supports cross browser.\n* @function\n* @param {string} property - A CSS property\n* @return {string} CSS property with cross-browser vendor prefix\n* @memberof CrossBrowser\n* @example\nimport {getCrossBrowserProperty} from \"@daybrush/utils\";\n\nconsole.log(getCrossBrowserProperty(\"transform\")); // \"transform\", \"-ms-transform\", \"-webkit-transform\"\nconsole.log(getCrossBrowserProperty(\"filter\")); // \"filter\", \"-webkit-filter\"\n*/\n\nvar getCrossBrowserProperty =\n/*#__PURE__*/\nfunction (property) {\n  if (!doc) {\n    return \"\";\n  }\n\n  var styles = (doc.body || doc.documentElement).style;\n  var length = prefixes.length;\n\n  if (typeof styles[property] !== UNDEFINED) {\n    return property;\n  }\n\n  for (var i = 0; i < length; ++i) {\n    var name = \"-\" + prefixes[i] + \"-\" + property;\n\n    if (typeof styles[name] !== UNDEFINED) {\n      return name;\n    }\n  }\n\n  return \"\";\n};\n/**\n* get string \"transfrom\" with the vendor prefix.\n* @memberof CrossBrowser\n* @example\nimport {TRANSFORM} from \"@daybrush/utils\";\n\nconsole.log(TRANSFORM); // \"transform\", \"-ms-transform\", \"-webkit-transform\"\n*/\n\nvar TRANSFORM =\n/*#__PURE__*/\ngetCrossBrowserProperty(\"transform\");\n/**\n* get string \"filter\" with the vendor prefix.\n* @memberof CrossBrowser\n* @example\nimport {FILTER} from \"@daybrush/utils\";\n\nconsole.log(FILTER); // \"filter\", \"-ms-filter\", \"-webkit-filter\"\n*/\n\nvar FILTER =\n/*#__PURE__*/\ngetCrossBrowserProperty(\"filter\");\n/**\n* get string \"animation\" with the vendor prefix.\n* @memberof CrossBrowser\n* @example\nimport {ANIMATION} from \"@daybrush/utils\";\n\nconsole.log(ANIMATION); // \"animation\", \"-ms-animation\", \"-webkit-animation\"\n*/\n\nvar ANIMATION =\n/*#__PURE__*/\ngetCrossBrowserProperty(\"animation\");\n/**\n* get string \"keyframes\" with the vendor prefix.\n* @memberof CrossBrowser\n* @example\nimport {KEYFRAMES} from \"@daybrush/utils\";\n\nconsole.log(KEYFRAMES); // \"keyframes\", \"-ms-keyframes\", \"-webkit-keyframes\"\n*/\n\nvar KEYFRAMES =\n/*#__PURE__*/\nANIMATION.replace(\"animation\", \"keyframes\");\n\n/**\n* @namespace\n* @name Utils\n*/\n\n/**\n* Check the type that the value is undefined.\n* @memberof Utils\n* @param {string} value - Value to check the type\n* @return {boolean} true if the type is correct, false otherwise\n* @example\nimport {isUndefined} from \"@daybrush/utils\";\n\nconsole.log(isUndefined(undefined)); // true\nconsole.log(isUndefined(\"\")); // false\nconsole.log(isUndefined(1)); // false\nconsole.log(isUndefined(null)); // false\n*/\n\nfunction isUndefined(value) {\n  return typeof value === UNDEFINED;\n}\n/**\n* Check the type that the value is object.\n* @memberof Utils\n* @param {string} value - Value to check the type\n* @return {} true if the type is correct, false otherwise\n* @example\nimport {isObject} from \"@daybrush/utils\";\n\nconsole.log(isObject({})); // true\nconsole.log(isObject(undefined)); // false\nconsole.log(isObject(\"\")); // false\nconsole.log(isObject(null)); // false\n*/\n\nfunction isObject(value) {\n  return value && typeof value === OBJECT;\n}\n/**\n* Check the type that the value is isArray.\n* @memberof Utils\n* @param {string} value - Value to check the type\n* @return {} true if the type is correct, false otherwise\n* @example\nimport {isArray} from \"@daybrush/utils\";\n\nconsole.log(isArray([])); // true\nconsole.log(isArray({})); // false\nconsole.log(isArray(undefined)); // false\nconsole.log(isArray(null)); // false\n*/\n\nfunction isArray(value) {\n  return Array.isArray(value);\n}\n/**\n* Check the type that the value is string.\n* @memberof Utils\n* @param {string} value - Value to check the type\n* @return {} true if the type is correct, false otherwise\n* @example\nimport {isString} from \"@daybrush/utils\";\n\nconsole.log(isString(\"1234\")); // true\nconsole.log(isString(undefined)); // false\nconsole.log(isString(1)); // false\nconsole.log(isString(null)); // false\n*/\n\nfunction isString(value) {\n  return typeof value === STRING;\n}\n/**\n* Check the type that the value is function.\n* @memberof Utils\n* @param {string} value - Value to check the type\n* @return {} true if the type is correct, false otherwise\n* @example\nimport {isFunction} from \"@daybrush/utils\";\n\nconsole.log(isFunction(function a() {})); // true\nconsole.log(isFunction(() => {})); // true\nconsole.log(isFunction(\"1234\")); // false\nconsole.log(isFunction(1)); // false\nconsole.log(isFunction(null)); // false\n*/\n\nfunction isFunction(value) {\n  return typeof value === FUNCTION;\n}\n/**\n* divide text by space.\n* @memberof Utils\n* @param {string} text - text to divide\n* @return {Array} divided texts\n* @example\nimport {spliceSpace} from \"@daybrush/utils\";\n\nconsole.log(splitSpace(\"a b c d e f g\"));\n// [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\"]\nconsole.log(splitSpace(\"'a,b' c 'd,e' f g\"));\n// [\"'a,b'\", \"c\", \"'d,e'\", \"f\", \"g\"]\n*/\n\nfunction splitSpace(text) {\n  // divide comma(,)\n  var matches = text.match(/(\"[^\"]*\")|('[^']*')|([^\\s()]*(?:\\((?:[^()]*|\\([^()]*\\))*\\))[^\\s()]*)|\\S+/g);\n  return matches || [];\n}\n/**\n* divide text by comma.\n* @memberof Utils\n* @param {string} text - text to divide\n* @return {Array} divided texts\n* @example\nimport {splitComma} from \"@daybrush/utils\";\n\nconsole.log(splitComma(\"a,b,c,d,e,f,g\"));\n// [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\"]\nconsole.log(splitComma(\"'a,b',c,'d,e',f,g\"));\n// [\"'a,b'\", \"c\", \"'d,e'\", \"f\", \"g\"]\n*/\n\nfunction splitComma(text) {\n  // divide comma(,)\n  // \"[^\"]*\"|'[^']*'\n  var matches = text.match(/(\"[^\"]*\"|'[^']*'|[^,\\s()]*\\((?:[^()]*|\\([^()]*\\))*\\)[^,\\s()]*|[^,])+/g);\n  return matches ? matches.map(function (str) {\n    return str.trim();\n  }) : [];\n}\n/**\n* divide text by bracket \"(\", \")\".\n* @memberof Utils\n* @param {string} text - text to divide\n* @return {object} divided texts\n* @example\nimport {splitBracket} from \"@daybrush/utils\";\n\nconsole.log(splitBracket(\"a(1, 2)\"));\n// {prefix: \"a\", value: \"1, 2\", suffix: \"\"}\nconsole.log(splitBracket(\"a(1, 2)b\"));\n// {prefix: \"a\", value: \"1, 2\", suffix: \"b\"}\n*/\n\nfunction splitBracket(text) {\n  var matches = /([^(]*)\\(([\\s\\S]*)\\)([\\s\\S]*)/g.exec(text);\n\n  if (!matches || matches.length < 4) {\n    return {};\n  } else {\n    return {\n      prefix: matches[1],\n      value: matches[2],\n      suffix: matches[3]\n    };\n  }\n}\n/**\n* divide text by number and unit.\n* @memberof Utils\n* @param {string} text - text to divide\n* @return {} divided texts\n* @example\nimport {splitUnit} from \"@daybrush/utils\";\n\nconsole.log(splitUnit(\"10px\"));\n// {prefix: \"\", value: 10, unit: \"px\"}\nconsole.log(splitUnit(\"-10px\"));\n// {prefix: \"\", value: -10, unit: \"px\"}\nconsole.log(splitUnit(\"a10%\"));\n// {prefix: \"a\", value: 10, unit: \"%\"}\n*/\n\nfunction splitUnit(text) {\n  var matches = /^([^\\d|e|\\-|\\+]*)((?:\\d|\\.|-|e-|e\\+)+)(\\S*)$/g.exec(text);\n\n  if (!matches) {\n    return {\n      prefix: \"\",\n      unit: \"\",\n      value: NaN\n    };\n  }\n\n  var prefix = matches[1];\n  var value = matches[2];\n  var unit = matches[3];\n  return {\n    prefix: prefix,\n    unit: unit,\n    value: parseFloat(value)\n  };\n}\n/**\n* transform strings to camel-case\n* @memberof Utils\n* @param {String} text - string\n* @return {String} camel-case string\n* @example\nimport {camelize} from \"@daybrush/utils\";\n\nconsole.log(camelize(\"transform-origin\")); // transformOrigin\nconsole.log(camelize(\"abcd_efg\")); // abcdEfg\nconsole.log(camelize(\"abcd efg\")); // abcdEfg\n*/\n\nfunction camelize(str) {\n  return str.replace(/[\\s-_]([a-z])/g, function (all, letter) {\n    return letter.toUpperCase();\n  });\n}\n/**\n* transform a camelized string into a lowercased string.\n* @memberof Utils\n* @param {string} text - a camel-cased string\n* @param {string} [separator=\"-\"] - a separator\n* @return {string}  a lowercased string\n* @example\nimport {decamelize} from \"@daybrush/utils\";\n\nconsole.log(decamelize(\"transformOrigin\")); // transform-origin\nconsole.log(decamelize(\"abcdEfg\", \"_\")); // abcd_efg\n*/\n\nfunction decamelize(str, separator) {\n  if (separator === void 0) {\n    separator = \"-\";\n  }\n\n  return str.replace(/([a-z])([A-Z])/g, function (all, letter, letter2) {\n    return \"\" + letter + separator + letter2.toLowerCase();\n  });\n}\n/**\n* transforms something in an array into an array.\n* @memberof Utils\n* @param - Array form\n* @return an array\n* @example\nimport {toArray} from \"@daybrush/utils\";\n\nconst arr1 = toArray(document.querySelectorAll(\".a\")); // Element[]\nconst arr2 = toArray(document.querySelectorAll<HTMLElement>(\".a\")); // HTMLElement[]\n*/\n\nfunction toArray(value) {\n  return [].slice.call(value);\n}\n/**\n* Date.now() method\n* @memberof CrossBrowser\n* @return {number} milliseconds\n* @example\nimport {now} from \"@daybrush/utils\";\n\nconsole.log(now()); // 12121324241(milliseconds)\n*/\n\nfunction now() {\n  return Date.now ? Date.now() : new Date().getTime();\n}\n/**\n* window.requestAnimationFrame() method with cross browser.\n* @function\n* @memberof CrossBrowser\n* @param {FrameRequestCallback} callback - The function to call when it's time to update your animation for the next repaint.\n* @return {number} id\n* @example\nimport {requestAnimationFrame} from \"@daybrush/utils\";\n\nrequestAnimationFrame((timestamp) => {\n  console.log(timestamp);\n});\n*/\n\nvar requestAnimationFrame =\n/*#__PURE__*/\nfunction () {\n  var firstTime = now();\n  var raf = IS_WINDOW && (window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame);\n  return raf ? raf.bind(window) : function (callback) {\n    var currTime = now();\n    var id = window.setTimeout(function () {\n      callback(currTime - firstTime);\n    }, 1000 / 60);\n    return id;\n  };\n}();\n\n/**\n* @namespace\n* @name Color\n*/\n\n/**\n* Remove the # from the hex color.\n* @memberof Color\n* @param {} hex - hex color\n* @return {} hex color\n* @example\nimport {cutHex} from \"@daybrush/utils\";\n\nconsole.log(cutHex(\"#000000\")) // \"000000\"\n*/\n\nfunction cutHex(hex) {\n  return hex.replace(\"#\", \"\");\n}\n/**\n* convert hex color to rgb color.\n* @memberof Color\n* @param {} hex - hex color\n* @return {} rgb color\n* @example\nimport {hexToRGBA} from \"@daybrush/utils\";\n\nconsole.log(hexToRGBA(\"#00000005\"));\n// [0, 0, 0, 1]\nconsole.log(hexToRGBA(\"#201045\"));\n// [32, 16, 69, 1]\n*/\n\nfunction hexToRGBA(hex) {\n  var h = cutHex(hex);\n  var r = parseInt(h.substring(0, 2), 16);\n  var g = parseInt(h.substring(2, 4), 16);\n  var b = parseInt(h.substring(4, 6), 16);\n  var a = parseInt(h.substring(6, 8), 16) / 255;\n\n  if (isNaN(a)) {\n    a = 1;\n  }\n\n  return [r, g, b, a];\n}\n/**\n* convert 3(or 4)-digit hex color to 6(or 8)-digit hex color.\n* @memberof Color\n* @param {} hex - 3(or 4)-digit hex color\n* @return {} 6(or 8)-digit hex color\n* @example\nimport {toFullHex} from \"@daybrush/utils\";\n\nconsole.log(toFullHex(\"#123\")); // \"#112233\"\nconsole.log(toFullHex(\"#123a\")); // \"#112233aa\"\n*/\n\nfunction toFullHex(h) {\n  var r = h.charAt(1);\n  var g = h.charAt(2);\n  var b = h.charAt(3);\n  var a = h.charAt(4);\n  var arr = [\"#\", r, r, g, g, b, b, a, a];\n  return arr.join(\"\");\n}\n/**\n* convert hsl color to rgba color.\n* @memberof Color\n* @param {} hsl - hsl color(hue: 0 ~ 360, saturation: 0 ~ 1, lightness: 0 ~ 1, alpha: 0 ~ 1)\n* @return {} rgba color\n* @example\nimport {hslToRGBA} from \"@daybrush/utils\";\n\nconsole.log(hslToRGBA([150, 0.5, 0.4]));\n// [51, 153, 102, 1]\n*/\n\nfunction hslToRGBA(hsl) {\n  var h = hsl[0];\n  var s = hsl[1];\n  var l = hsl[2];\n\n  if (h < 0) {\n    h += Math.floor((Math.abs(h) + 360) / 360) * 360;\n  }\n\n  h %= 360;\n  var c = (1 - Math.abs(2 * l - 1)) * s;\n  var x = c * (1 - Math.abs(h / 60 % 2 - 1));\n  var m = l - c / 2;\n  var rgb;\n\n  if (h < 60) {\n    rgb = [c, x, 0];\n  } else if (h < 120) {\n    rgb = [x, c, 0];\n  } else if (h < 180) {\n    rgb = [0, c, x];\n  } else if (h < 240) {\n    rgb = [0, x, c];\n  } else if (h < 300) {\n    rgb = [x, 0, c];\n  } else if (h < 360) {\n    rgb = [c, 0, x];\n  }\n\n  var result = [Math.round((rgb[0] + m) * 255), Math.round((rgb[1] + m) * 255), Math.round((rgb[2] + m) * 255), hsl.length > 3 ? hsl[3] : 1];\n  return result;\n}\n/**\n* convert string to rgba color.\n* @memberof Color\n* @param {} - 3-hex(#000), 4-hex(#0000) 6-hex(#000000), 8-hex(#00000000) or RGB(A), or HSL(A)\n* @return {} rgba color\n* @example\nimport {stringToRGBA} from \"@daybrush/utils\";\n\nconsole.log(stringToRGBA(\"#000000\")); // [0, 0, 0, 1]\nconsole.log(stringToRGBA(\"rgb(100, 100, 100)\")); // [100, 100, 100, 1]\nconsole.log(stringToRGBA(\"hsl(150, 0.5, 0.4)\")); // [51, 153, 102, 1]\n*/\n\nfunction stringToRGBA(color) {\n  if (color.charAt(0) === \"#\") {\n    if (color.length === 4 || color.length === 5) {\n      return hexToRGBA(toFullHex(color));\n    } else {\n      return hexToRGBA(color);\n    }\n  } else if (color.indexOf(\"(\") !== -1) {\n    // in bracket.\n    var _a = splitBracket(color),\n        prefix = _a.prefix,\n        value = _a.value;\n\n    if (!prefix || !value) {\n      return;\n    }\n\n    var arr = splitComma(value);\n    var colorArr = [];\n    var length = arr.length;\n\n    switch (prefix) {\n      case RGB:\n      case RGBA:\n        for (var i = 0; i < length; ++i) {\n          colorArr[i] = parseFloat(arr[i]);\n        }\n\n        return colorArr;\n\n      case HSL:\n      case HSLA:\n        for (var i = 0; i < length; ++i) {\n          if (arr[i].indexOf(\"%\") !== -1) {\n            colorArr[i] = parseFloat(arr[i]) / 100;\n          } else {\n            colorArr[i] = parseFloat(arr[i]);\n          }\n        } // hsl, hsla to rgba\n\n\n        return hslToRGBA(colorArr);\n    }\n  }\n\n  return;\n}\n\n/**\n * Returns all element descendants of node that\n * match selectors.\n */\n\n/**\n * Checks if the specified class value exists in the element's class attribute.\n * @memberof DOM\n * @param - A DOMString containing one or more selectors to match\n * @param - If multi is true, a DOMString containing one or more selectors to match against.\n * @example\nimport {$} from \"@daybrush/utils\";\n\nconsole.log($(\"div\")); // div element\nconsole.log($(\"div\", true)); // [div, div] elements\n*/\n\nfunction $(selectors, multi) {\n  return multi ? doc.querySelectorAll(selectors) : doc.querySelector(selectors);\n}\n/**\n* Checks if the specified class value exists in the element's class attribute.\n* @memberof DOM\n* @param element - target\n* @param className - the class name to search\n* @return {boolean} return false if the class is not found.\n* @example\nimport {hasClass} from \"@daybrush/utils\";\n\nconsole.log(hasClass(element, \"start\")); // true or false\n*/\n\nfunction hasClass(element, className) {\n  if (element.classList) {\n    return element.classList.contains(className);\n  }\n\n  return !!element.className.match(new RegExp(\"(\\\\s|^)\" + className + \"(\\\\s|$)\"));\n}\n/**\n* Add the specified class value. If these classe already exist in the element's class attribute they are ignored.\n* @memberof DOM\n* @param element - target\n* @param className - the class name to add\n* @example\nimport {addClass} from \"@daybrush/utils\";\n\naddClass(element, \"start\");\n*/\n\nfunction addClass(element, className) {\n  if (element.classList) {\n    element.classList.add(className);\n  } else {\n    element.className += \" \" + className;\n  }\n}\n/**\n* Removes the specified class value.\n* @memberof DOM\n* @param element - target\n* @param className - the class name to remove\n* @example\nimport {removeClass} from \"@daybrush/utils\";\n\nremoveClass(element, \"start\");\n*/\n\nfunction removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else {\n    var reg = new RegExp(\"(\\\\s|^)\" + className + \"(\\\\s|$)\");\n    element.className = element.className.replace(reg, \" \");\n  }\n}\n/**\n* Gets the CSS properties from the element.\n* @memberof DOM\n* @param elements - elements\n* @param properites - the CSS properties\n* @return returns CSS properties and values.\n* @example\nimport {fromCSS} from \"@daybrush/utils\";\n\nconsole.log(fromCSS(element, [\"left\", \"opacity\", \"top\"])); // {\"left\": \"10px\", \"opacity\": 1, \"top\": \"10px\"}\n*/\n\nfunction fromCSS(elements, properties) {\n  if (!elements || !properties || !properties.length) {\n    return {};\n  }\n\n  var element;\n\n  if (elements instanceof Element) {\n    element = elements;\n  } else if (elements.length) {\n    element = elements[0];\n  } else {\n    return {};\n  }\n\n  var cssObject = {};\n  var styles = window.getComputedStyle(element);\n  var length = properties.length;\n\n  for (var i = 0; i < length; ++i) {\n    cssObject[properties[i]] = styles[properties[i]];\n  }\n\n  return cssObject;\n}\n/**\n* Sets up a function that will be called whenever the specified event is delivered to the target\n* @memberof DOM\n* @param - event target\n* @param - A case-sensitive string representing the event type to listen for.\n* @param - The object which receives a notification (an object that implements the Event interface) when an event of the specified type occurs\n* @param - An options object that specifies characteristics about the event listener. The available options are:\n* @example\nimport {addEvent} from \"@daybrush/utils\";\n\naddEvent(el, \"click\", e => {\n  console.log(e);\n});\n*/\n\nfunction addEvent(el, type, listener, options) {\n  el.addEventListener(type, listener, options);\n}\n/**\n* removes from the EventTarget an event listener previously registered with EventTarget.addEventListener()\n* @memberof DOM\n* @param - event target\n* @param - A case-sensitive string representing the event type to listen for.\n* @param - The EventListener function of the event handler to remove from the event target.\n* @example\nimport {addEvent, removeEvent} from \"@daybrush/utils\";\nconst listener = e => {\n  console.log(e);\n};\naddEvent(el, \"click\", listener);\nremoveEvent(el, \"click\", listener);\n*/\n\nfunction removeEvent(el, type, listener) {\n  el.removeEventListener(type, listener);\n}\n\nexport { RGB, RGBA, HSL, HSLA, COLOR_MODELS, FUNCTION, PROPERTY, ARRAY, OBJECT, STRING, NUMBER, UNDEFINED, IS_WINDOW, doc as document, getCrossBrowserProperty, TRANSFORM, FILTER, ANIMATION, KEYFRAMES, cutHex, hexToRGBA, toFullHex, hslToRGBA, stringToRGBA, isUndefined, isObject, isArray, isString, isFunction, splitSpace, splitComma, splitBracket, splitUnit, camelize, decamelize, toArray, now, requestAnimationFrame, $, hasClass, addClass, removeClass, fromCSS, addEvent, removeEvent };\n//# sourceMappingURL=utils.esm.js.map\n","import { PREFIX } from \"./consts\";\nimport Scene, { SceneItem, Frame } from \"scenejs\";\nimport {\n    hasClass as hasClass2,\n    addClass as addClass2,\n    removeClass as removeClass2,\n    IObject,\n    isObject,\n    isArray,\n    isUndefined,\n} from \"@daybrush/utils\";\nimport { ElementStructure, TimelineInfo } from \"./types\";\n\nexport function numberFormat(num: number, count: number, isRight?: boolean) {\n    const length = `${num}`.length;\n    const arr = [];\n\n    if (isRight) {\n        arr.push(num);\n    }\n    for (let i = length; i < count; ++i) {\n        arr.push(0);\n    }\n    if (!isRight) {\n        arr.push(num);\n    }\n    return arr.join(\"\");\n}\nexport function applyStyle(el: HTMLElement, style: IObject<any>) {\n    for (const name in style) {\n        el.style[name] = style[name];\n    }\n}\nexport function findIndexByProperty(selectedProperty: string, structures: ElementStructure[]) {\n    return structures.findIndex(\n        ({ dataset: { key } }) => key === selectedProperty,\n    );\n}\nexport function findStructureByProperty(selectedProperty: string, structures: ElementStructure[]) {\n    return structures.find(\n        ({ dataset: { key } }) => key === selectedProperty,\n    );\n}\n\nexport function createElement(structure: ElementStructure) {\n    const { selector, dataset, attr, style, html } = structure;\n\n    const classNames = selector.match(/\\.([^.#\\s])+/g) || [];\n    const tag = (selector.match(/^[^.#\\s]+/g) || [])[0] || \"div\";\n    const id = (selector.match(/#[^.#\\s]+/g) || [])[0] || \"\";\n    const el = document.createElement(tag);\n\n    id && (el.id = id.replace(/^#/g, \"\"));\n    el.className = classNames.map(name => `${PREFIX}${name.replace(/^\\./g, \"\")}`).join(\" \");\n\n    if (dataset) {\n        for (const name in dataset) {\n            el.setAttribute(`data-${name}`, dataset[name]);\n        }\n    }\n    if (attr) {\n        for (const name in attr) {\n            el.setAttribute(name, attr[name]);\n        }\n    }\n    if (style) {\n        applyStyle(el, style);\n    }\n    if (html) {\n        el.innerHTML = html;\n    }\n    return el;\n}\nexport function updateElement(prevStructure: ElementStructure, nextStructure: ElementStructure) {\n    const { dataset, attr, style, html, element } = nextStructure;\n    if (dataset) {\n        for (const name in dataset) {\n            element.setAttribute(`data-${name}`, dataset[name]);\n        }\n    }\n    if (attr) {\n        for (const name in attr) {\n            element.setAttribute(name, attr[name]);\n        }\n    }\n    style && applyStyle(element, style);\n    if (prevStructure.html !== nextStructure.html) {\n        element.innerHTML = html;\n    }\n}\nexport function keys(value: object) {\n    const arr = [];\n    for (const name in value) {\n        arr.push(name);\n    }\n    return arr;\n}\nexport function toValue(value: any) {\n    const type = typeof value;\n    if (type === \"object\") {\n        if (Array.isArray(value)) {\n            return `[${value.join(\", \")}]`;\n        }\n        return `{${keys(value).map(k => `${k}: ${toValue(value[k])}`).join(\", \")}}`;\n    }\n    return value;\n}\nexport function flatObject(obj: IObject<any>, newObj: IObject<any> = {}) {\n\n    for (const name in obj) {\n        const value = obj[name];\n\n        if (isObject(value)) {\n            const nextObj = flatObject(isFrame(value) ? value.get() : value);\n\n            for (const nextName in nextObj) {\n                newObj[`${name}///${nextName}`] = nextObj[nextName];\n            }\n        } else {\n            newObj[name] = value;\n        }\n    }\n    return newObj;\n}\n\nexport function getTarget<T extends HTMLElement>(target: T, conditionCallback: (el: Element) => boolean): T {\n    let parentTarget = target;\n\n    while (parentTarget && parentTarget !== document.body) {\n        if (conditionCallback(parentTarget)) {\n            return parentTarget;\n        }\n        parentTarget = parentTarget.parentNode as T;\n    }\n    return null;\n}\n\nexport function hasClass(target: Element, className: string) {\n    return hasClass2(target, `${PREFIX}${className}`);\n}\nexport function addClass(target: Element, className: string) {\n    return addClass2(target, `${PREFIX}${className}`);\n}\nexport function removeClass(target: Element, className: string) {\n    return removeClass2(target, `${PREFIX}${className}`);\n}\nexport function findStructure(\n    selector: string,\n    structure: ElementStructure | ElementStructure[],\n    multi: true,\n    arr?: ElementStructure[],\n): ElementStructure[];\nexport function findStructure(\n    selector: string,\n    structure: ElementStructure | ElementStructure[],\n    multi?: false,\n    arr?: ElementStructure[],\n): ElementStructure;\nexport function findStructure(\n    selector: string,\n    structure: ElementStructure | ElementStructure[],\n    multi: true | false,\n    arr?: ElementStructure[],\n): ElementStructure | ElementStructure[];\nexport function findStructure(\n    selector: string,\n    structure: ElementStructure | ElementStructure[],\n    multi: boolean = false,\n    arr: ElementStructure[] = [],\n): ElementStructure | ElementStructure[] {\n    if (isArray(structure)) {\n        const length = structure.length;\n\n        for (let i = 0; i < length; ++i) {\n            findStructure(selector, structure[i], multi, arr);\n        }\n    } else {\n        if (structure.selector === selector) {\n            arr.push(structure);\n        }\n        if (!multi && arr.length) {\n            return arr[0];\n        }\n        if (structure.children) {\n            findStructure(selector, structure.children, multi, arr);\n        }\n    }\n    return multi ? arr : arr[0];\n}\nexport function isScene(value: any): value is Scene {\n    return !!(value.constructor as typeof Scene).prototype.getItem;\n}\nexport function isSceneItem(value: any): value is SceneItem {\n    return !!(value.constructor as typeof SceneItem).prototype.getFrame;\n}\nexport function isFrame(value: any): value is Frame {\n    return !!(value.constructor as typeof Frame).prototype.toCSS;\n}\nexport function splitProperty(scene: Scene, property: string) {\n    const names = property.split(\"///\");\n    const length = names.length;\n    let item: Scene | SceneItem = scene;\n    let i;\n\n    for (i = 0; i < length; ++i) {\n        if (isSceneItem(item)) {\n            break;\n        }\n        item = scene.getItem(names[i]);\n    }\n    return {\n        item: item as SceneItem,\n        names: names.slice(0, i),\n        properties: names.slice(i),\n    };\n}\nexport function getSceneItem(scene: Scene, names: string[]): SceneItem {\n    return names.reduce<any>(\n        (nextScene, name) => nextScene.getItem(name),\n        scene,\n    );\n}\n\nexport function findElementIndexByPosition(elements: HTMLElement[], pos: number): number {\n    const length = elements.length;\n\n    for (let index = 0; index < length; ++index) {\n        const el = elements[index];\n        const box = el.getBoundingClientRect();\n        const top = box.top;\n        const bottom = top + box.height;\n\n        if (top <= pos && pos < bottom) {\n            return index;\n        }\n    }\n    return -1;\n}\n","/*\nCopyright (c) 2019 Daybrush\nname: @daybrush/drag\nlicense: MIT\nauthor: Daybrush\nrepository: git+https://github.com/daybrush/drag.git\nversion: 0.4.2\n*/\nfunction setDrag(el, options) {\n  var flag = false;\n  var startX = 0;\n  var startY = 0;\n  var prevX = 0;\n  var prevY = 0;\n  var datas = {};\n  var isDrag = false;\n  var _a = options.container,\n      container = _a === void 0 ? el : _a,\n      dragstart = options.dragstart,\n      drag = options.drag,\n      dragend = options.dragend,\n      _b = options.events,\n      events = _b === void 0 ? [\"touch\", \"mouse\"] : _b;\n  var isTouch = events.indexOf(\"touch\") > -1;\n  var isMouse = events.indexOf(\"mouse\") > -1;\n\n  function getPosition(e) {\n    return e.touches && e.touches.length ? e.touches[0] : e;\n  }\n\n  function onDragStart(e) {\n    flag = true;\n    isDrag = false;\n\n    var _a = getPosition(e),\n        clientX = _a.clientX,\n        clientY = _a.clientY;\n\n    startX = clientX;\n    startY = clientY;\n    prevX = clientX;\n    prevY = clientY;\n    datas = {};\n    (dragstart && dragstart({\n      datas: datas,\n      inputEvent: e,\n      clientX: clientX,\n      clientY: clientY\n    })) === false && (flag = false);\n    flag && e.preventDefault();\n  }\n\n  function onDrag(e) {\n    if (!flag) {\n      return;\n    }\n\n    var _a = getPosition(e),\n        clientX = _a.clientX,\n        clientY = _a.clientY;\n\n    var deltaX = clientX - prevX;\n    var deltaY = clientY - prevY;\n\n    if (!deltaX && !deltaY) {\n      return;\n    }\n\n    isDrag = true;\n    drag && drag({\n      datas: datas,\n      clientX: clientX,\n      clientY: clientY,\n      deltaX: deltaX,\n      deltaY: deltaY,\n      distX: clientX - startX,\n      distY: clientY - startY,\n      inputEvent: e\n    });\n    prevX = clientX;\n    prevY = clientY;\n  }\n\n  function onDragEnd(e) {\n    if (!flag) {\n      return;\n    }\n\n    flag = false;\n    dragend && dragend({\n      datas: datas,\n      isDrag: isDrag,\n      inputEvent: e,\n      clientX: prevX,\n      clientY: prevY,\n      distX: prevX - startX,\n      distY: prevY - startY\n    });\n  }\n\n  if (isMouse) {\n    el.addEventListener(\"mousedown\", onDragStart);\n    container.addEventListener(\"mousemove\", onDrag);\n    container.addEventListener(\"mouseup\", onDragEnd); // container.addEventListener(\"mouseleave\", onDragEnd);\n  }\n\n  if (isTouch) {\n    el.addEventListener(\"touchstart\", onDragStart);\n    container.addEventListener(\"touchmove\", onDrag, { passive: false });\n    container.addEventListener(\"touchend\", onDragEnd);\n  }\n}\n\nexport { setDrag as drag };\n","/*! Hammer.JS - v2.0.15 - 2019-04-04\n * http://naver.github.io/egjs\n *\n * Forked By Naver egjs\n * Copyright (c) hammerjs\n * Licensed under the MIT license */\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\n/**\n * @private\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} target\n * @param {...Object} objects_to_assign\n * @returns {Object} target\n */\nvar assign;\n\nif (typeof Object.assign !== 'function') {\n  assign = function assign(target) {\n    if (target === undefined || target === null) {\n      throw new TypeError('Cannot convert undefined or null to object');\n    }\n\n    var output = Object(target);\n\n    for (var index = 1; index < arguments.length; index++) {\n      var source = arguments[index];\n\n      if (source !== undefined && source !== null) {\n        for (var nextKey in source) {\n          if (source.hasOwnProperty(nextKey)) {\n            output[nextKey] = source[nextKey];\n          }\n        }\n      }\n    }\n\n    return output;\n  };\n} else {\n  assign = Object.assign;\n}\n\nvar assign$1 = assign;\n\nvar VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];\nvar TEST_ELEMENT = typeof document === \"undefined\" ? {\n  style: {}\n} : document.createElement('div');\nvar TYPE_FUNCTION = 'function';\nvar round = Math.round,\n    abs = Math.abs;\nvar now = Date.now;\n\n/**\n * @private\n * get the prefixed property\n * @param {Object} obj\n * @param {String} property\n * @returns {String|Undefined} prefixed\n */\n\nfunction prefixed(obj, property) {\n  var prefix;\n  var prop;\n  var camelProp = property[0].toUpperCase() + property.slice(1);\n  var i = 0;\n\n  while (i < VENDOR_PREFIXES.length) {\n    prefix = VENDOR_PREFIXES[i];\n    prop = prefix ? prefix + camelProp : property;\n\n    if (prop in obj) {\n      return prop;\n    }\n\n    i++;\n  }\n\n  return undefined;\n}\n\n/* eslint-disable no-new-func, no-nested-ternary */\nvar win;\n\nif (typeof window === \"undefined\") {\n  // window is undefined in node.js\n  win = {};\n} else {\n  win = window;\n}\n\nvar PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');\nvar NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;\nfunction getTouchActionProps() {\n  if (!NATIVE_TOUCH_ACTION) {\n    return false;\n  }\n\n  var touchMap = {};\n  var cssSupports = win.CSS && win.CSS.supports;\n  ['auto', 'manipulation', 'pan-y', 'pan-x', 'pan-x pan-y', 'none'].forEach(function (val) {\n    // If css.supports is not supported but there is native touch-action assume it supports\n    // all values. This is the case for IE 10 and 11.\n    return touchMap[val] = cssSupports ? win.CSS.supports('touch-action', val) : true;\n  });\n  return touchMap;\n}\n\nvar TOUCH_ACTION_COMPUTE = 'compute';\nvar TOUCH_ACTION_AUTO = 'auto';\nvar TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented\n\nvar TOUCH_ACTION_NONE = 'none';\nvar TOUCH_ACTION_PAN_X = 'pan-x';\nvar TOUCH_ACTION_PAN_Y = 'pan-y';\nvar TOUCH_ACTION_MAP = getTouchActionProps();\n\nvar MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\nvar SUPPORT_TOUCH = 'ontouchstart' in win;\nvar SUPPORT_POINTER_EVENTS = prefixed(win, 'PointerEvent') !== undefined;\nvar SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);\nvar INPUT_TYPE_TOUCH = 'touch';\nvar INPUT_TYPE_PEN = 'pen';\nvar INPUT_TYPE_MOUSE = 'mouse';\nvar INPUT_TYPE_KINECT = 'kinect';\nvar COMPUTE_INTERVAL = 25;\nvar INPUT_START = 1;\nvar INPUT_MOVE = 2;\nvar INPUT_END = 4;\nvar INPUT_CANCEL = 8;\nvar DIRECTION_NONE = 1;\nvar DIRECTION_LEFT = 2;\nvar DIRECTION_RIGHT = 4;\nvar DIRECTION_UP = 8;\nvar DIRECTION_DOWN = 16;\nvar DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;\nvar DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;\nvar DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;\nvar PROPS_XY = ['x', 'y'];\nvar PROPS_CLIENT_XY = ['clientX', 'clientY'];\n\n/**\n * @private\n * walk objects and arrays\n * @param {Object} obj\n * @param {Function} iterator\n * @param {Object} context\n */\nfunction each(obj, iterator, context) {\n  var i;\n\n  if (!obj) {\n    return;\n  }\n\n  if (obj.forEach) {\n    obj.forEach(iterator, context);\n  } else if (obj.length !== undefined) {\n    i = 0;\n\n    while (i < obj.length) {\n      iterator.call(context, obj[i], i, obj);\n      i++;\n    }\n  } else {\n    for (i in obj) {\n      obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);\n    }\n  }\n}\n\n/**\n * @private\n * let a boolean value also be a function that must return a boolean\n * this first item in args will be used as the context\n * @param {Boolean|Function} val\n * @param {Array} [args]\n * @returns {Boolean}\n */\n\nfunction boolOrFn(val, args) {\n  if (typeof val === TYPE_FUNCTION) {\n    return val.apply(args ? args[0] || undefined : undefined, args);\n  }\n\n  return val;\n}\n\n/**\n * @private\n * small indexOf wrapper\n * @param {String} str\n * @param {String} find\n * @returns {Boolean} found\n */\nfunction inStr(str, find) {\n  return str.indexOf(find) > -1;\n}\n\n/**\n * @private\n * when the touchActions are collected they are not a valid value, so we need to clean things up. *\n * @param {String} actions\n * @returns {*}\n */\n\nfunction cleanTouchActions(actions) {\n  // none\n  if (inStr(actions, TOUCH_ACTION_NONE)) {\n    return TOUCH_ACTION_NONE;\n  }\n\n  var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n  var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y); // if both pan-x and pan-y are set (different recognizers\n  // for different directions, e.g. horizontal pan but vertical swipe?)\n  // we need none (as otherwise with pan-x pan-y combined none of these\n  // recognizers will work, since the browser would handle all panning\n\n  if (hasPanX && hasPanY) {\n    return TOUCH_ACTION_NONE;\n  } // pan-x OR pan-y\n\n\n  if (hasPanX || hasPanY) {\n    return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;\n  } // manipulation\n\n\n  if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {\n    return TOUCH_ACTION_MANIPULATION;\n  }\n\n  return TOUCH_ACTION_AUTO;\n}\n\n/**\n * @private\n * Touch Action\n * sets the touchAction property or uses the js alternative\n * @param {Manager} manager\n * @param {String} value\n * @constructor\n */\n\nvar TouchAction =\n/*#__PURE__*/\nfunction () {\n  function TouchAction(manager, value) {\n    this.manager = manager;\n    this.set(value);\n  }\n  /**\n   * @private\n   * set the touchAction value on the element or enable the polyfill\n   * @param {String} value\n   */\n\n\n  var _proto = TouchAction.prototype;\n\n  _proto.set = function set(value) {\n    // find out the touch-action by the event handlers\n    if (value === TOUCH_ACTION_COMPUTE) {\n      value = this.compute();\n    }\n\n    if (NATIVE_TOUCH_ACTION && this.manager.element.style && TOUCH_ACTION_MAP[value]) {\n      this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;\n    }\n\n    this.actions = value.toLowerCase().trim();\n  };\n  /**\n   * @private\n   * just re-set the touchAction value\n   */\n\n\n  _proto.update = function update() {\n    this.set(this.manager.options.touchAction);\n  };\n  /**\n   * @private\n   * compute the value for the touchAction property based on the recognizer's settings\n   * @returns {String} value\n   */\n\n\n  _proto.compute = function compute() {\n    var actions = [];\n    each(this.manager.recognizers, function (recognizer) {\n      if (boolOrFn(recognizer.options.enable, [recognizer])) {\n        actions = actions.concat(recognizer.getTouchAction());\n      }\n    });\n    return cleanTouchActions(actions.join(' '));\n  };\n  /**\n   * @private\n   * this method is called on each input cycle and provides the preventing of the browser behavior\n   * @param {Object} input\n   */\n\n\n  _proto.preventDefaults = function preventDefaults(input) {\n    var srcEvent = input.srcEvent;\n    var direction = input.offsetDirection; // if the touch action did prevented once this session\n\n    if (this.manager.session.prevented) {\n      srcEvent.preventDefault();\n      return;\n    }\n\n    var actions = this.actions;\n    var hasNone = inStr(actions, TOUCH_ACTION_NONE) && !TOUCH_ACTION_MAP[TOUCH_ACTION_NONE];\n    var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y];\n    var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];\n\n    if (hasNone) {\n      // do not prevent defaults if this is a tap gesture\n      var isTapPointer = input.pointers.length === 1;\n      var isTapMovement = input.distance < 2;\n      var isTapTouchTime = input.deltaTime < 250;\n\n      if (isTapPointer && isTapMovement && isTapTouchTime) {\n        return;\n      }\n    }\n\n    if (hasPanX && hasPanY) {\n      // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent\n      return;\n    }\n\n    if (hasNone || hasPanY && direction & DIRECTION_HORIZONTAL || hasPanX && direction & DIRECTION_VERTICAL) {\n      return this.preventSrc(srcEvent);\n    }\n  };\n  /**\n   * @private\n   * call preventDefault to prevent the browser's default behavior (scrolling in most cases)\n   * @param {Object} srcEvent\n   */\n\n\n  _proto.preventSrc = function preventSrc(srcEvent) {\n    this.manager.session.prevented = true;\n    srcEvent.preventDefault();\n  };\n\n  return TouchAction;\n}();\n\n/**\n * @private\n * find if a node is in the given parent\n * @method hasParent\n * @param {HTMLElement} node\n * @param {HTMLElement} parent\n * @return {Boolean} found\n */\nfunction hasParent(node, parent) {\n  while (node) {\n    if (node === parent) {\n      return true;\n    }\n\n    node = node.parentNode;\n  }\n\n  return false;\n}\n\n/**\n * @private\n * get the center of all the pointers\n * @param {Array} pointers\n * @return {Object} center contains `x` and `y` properties\n */\n\nfunction getCenter(pointers) {\n  var pointersLength = pointers.length; // no need to loop when only one touch\n\n  if (pointersLength === 1) {\n    return {\n      x: round(pointers[0].clientX),\n      y: round(pointers[0].clientY)\n    };\n  }\n\n  var x = 0;\n  var y = 0;\n  var i = 0;\n\n  while (i < pointersLength) {\n    x += pointers[i].clientX;\n    y += pointers[i].clientY;\n    i++;\n  }\n\n  return {\n    x: round(x / pointersLength),\n    y: round(y / pointersLength)\n  };\n}\n\n/**\n * @private\n * create a simple clone from the input used for storage of firstInput and firstMultiple\n * @param {Object} input\n * @returns {Object} clonedInputData\n */\n\nfunction simpleCloneInputData(input) {\n  // make a simple copy of the pointers because we will get a reference if we don't\n  // we only need clientXY for the calculations\n  var pointers = [];\n  var i = 0;\n\n  while (i < input.pointers.length) {\n    pointers[i] = {\n      clientX: round(input.pointers[i].clientX),\n      clientY: round(input.pointers[i].clientY)\n    };\n    i++;\n  }\n\n  return {\n    timeStamp: now(),\n    pointers: pointers,\n    center: getCenter(pointers),\n    deltaX: input.deltaX,\n    deltaY: input.deltaY\n  };\n}\n\n/**\n * @private\n * calculate the absolute distance between two points\n * @param {Object} p1 {x, y}\n * @param {Object} p2 {x, y}\n * @param {Array} [props] containing x and y keys\n * @return {Number} distance\n */\n\nfunction getDistance(p1, p2, props) {\n  if (!props) {\n    props = PROPS_XY;\n  }\n\n  var x = p2[props[0]] - p1[props[0]];\n  var y = p2[props[1]] - p1[props[1]];\n  return Math.sqrt(x * x + y * y);\n}\n\n/**\n * @private\n * calculate the angle between two coordinates\n * @param {Object} p1\n * @param {Object} p2\n * @param {Array} [props] containing x and y keys\n * @return {Number} angle\n */\n\nfunction getAngle(p1, p2, props) {\n  if (!props) {\n    props = PROPS_XY;\n  }\n\n  var x = p2[props[0]] - p1[props[0]];\n  var y = p2[props[1]] - p1[props[1]];\n  return Math.atan2(y, x) * 180 / Math.PI;\n}\n\n/**\n * @private\n * get the direction between two points\n * @param {Number} x\n * @param {Number} y\n * @return {Number} direction\n */\n\nfunction getDirection(x, y) {\n  if (x === y) {\n    return DIRECTION_NONE;\n  }\n\n  if (abs(x) >= abs(y)) {\n    return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n  }\n\n  return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n}\n\nfunction computeDeltaXY(session, input) {\n  var center = input.center; // let { offsetDelta:offset = {}, prevDelta = {}, prevInput = {} } = session;\n  // jscs throwing error on defalut destructured values and without defaults tests fail\n\n  var offset = session.offsetDelta || {};\n  var prevDelta = session.prevDelta || {};\n  var prevInput = session.prevInput || {};\n\n  if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {\n    prevDelta = session.prevDelta = {\n      x: prevInput.deltaX || 0,\n      y: prevInput.deltaY || 0\n    };\n    offset = session.offsetDelta = {\n      x: center.x,\n      y: center.y\n    };\n  }\n\n  input.deltaX = prevDelta.x + (center.x - offset.x);\n  input.deltaY = prevDelta.y + (center.y - offset.y);\n}\n\n/**\n * @private\n * calculate the velocity between two points. unit is in px per ms.\n * @param {Number} deltaTime\n * @param {Number} x\n * @param {Number} y\n * @return {Object} velocity `x` and `y`\n */\nfunction getVelocity(deltaTime, x, y) {\n  return {\n    x: x / deltaTime || 0,\n    y: y / deltaTime || 0\n  };\n}\n\n/**\n * @private\n * calculate the scale factor between two pointersets\n * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} scale\n */\n\nfunction getScale(start, end) {\n  return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);\n}\n\n/**\n * @private\n * calculate the rotation degrees between two pointersets\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} rotation\n */\n\nfunction getRotation(start, end) {\n  return getAngle(end[1], end[0], PROPS_CLIENT_XY) + getAngle(start[1], start[0], PROPS_CLIENT_XY);\n}\n\n/**\n * @private\n * velocity is calculated every x ms\n * @param {Object} session\n * @param {Object} input\n */\n\nfunction computeIntervalInputData(session, input) {\n  var last = session.lastInterval || input;\n  var deltaTime = input.timeStamp - last.timeStamp;\n  var velocity;\n  var velocityX;\n  var velocityY;\n  var direction;\n\n  if (input.eventType !== INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {\n    var deltaX = input.deltaX - last.deltaX;\n    var deltaY = input.deltaY - last.deltaY;\n    var v = getVelocity(deltaTime, deltaX, deltaY);\n    velocityX = v.x;\n    velocityY = v.y;\n    velocity = abs(v.x) > abs(v.y) ? v.x : v.y;\n    direction = getDirection(deltaX, deltaY);\n    session.lastInterval = input;\n  } else {\n    // use latest velocity info if it doesn't overtake a minimum period\n    velocity = last.velocity;\n    velocityX = last.velocityX;\n    velocityY = last.velocityY;\n    direction = last.direction;\n  }\n\n  input.velocity = velocity;\n  input.velocityX = velocityX;\n  input.velocityY = velocityY;\n  input.direction = direction;\n}\n\n/**\n* @private\n * extend the data with some usable properties like scale, rotate, velocity etc\n * @param {Object} manager\n * @param {Object} input\n */\n\nfunction computeInputData(manager, input) {\n  var session = manager.session;\n  var pointers = input.pointers;\n  var pointersLength = pointers.length; // store the first input to calculate the distance and direction\n\n  if (!session.firstInput) {\n    session.firstInput = simpleCloneInputData(input);\n  } // to compute scale and rotation we need to store the multiple touches\n\n\n  if (pointersLength > 1 && !session.firstMultiple) {\n    session.firstMultiple = simpleCloneInputData(input);\n  } else if (pointersLength === 1) {\n    session.firstMultiple = false;\n  }\n\n  var firstInput = session.firstInput,\n      firstMultiple = session.firstMultiple;\n  var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;\n  var center = input.center = getCenter(pointers);\n  input.timeStamp = now();\n  input.deltaTime = input.timeStamp - firstInput.timeStamp;\n  input.angle = getAngle(offsetCenter, center);\n  input.distance = getDistance(offsetCenter, center);\n  computeDeltaXY(session, input);\n  input.offsetDirection = getDirection(input.deltaX, input.deltaY);\n  var overallVelocity = getVelocity(input.deltaTime, input.deltaX, input.deltaY);\n  input.overallVelocityX = overallVelocity.x;\n  input.overallVelocityY = overallVelocity.y;\n  input.overallVelocity = abs(overallVelocity.x) > abs(overallVelocity.y) ? overallVelocity.x : overallVelocity.y;\n  input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;\n  input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;\n  input.maxPointers = !session.prevInput ? input.pointers.length : input.pointers.length > session.prevInput.maxPointers ? input.pointers.length : session.prevInput.maxPointers;\n  computeIntervalInputData(session, input); // find the correct target\n\n  var target = manager.element;\n\n  if (hasParent(input.srcEvent.target, target)) {\n    target = input.srcEvent.target;\n  }\n\n  input.target = target;\n}\n\n/**\n * @private\n * handle input events\n * @param {Manager} manager\n * @param {String} eventType\n * @param {Object} input\n */\n\nfunction inputHandler(manager, eventType, input) {\n  var pointersLen = input.pointers.length;\n  var changedPointersLen = input.changedPointers.length;\n  var isFirst = eventType & INPUT_START && pointersLen - changedPointersLen === 0;\n  var isFinal = eventType & (INPUT_END | INPUT_CANCEL) && pointersLen - changedPointersLen === 0;\n  input.isFirst = !!isFirst;\n  input.isFinal = !!isFinal;\n\n  if (isFirst) {\n    manager.session = {};\n  } // source event is the normalized value of the domEvents\n  // like 'touchstart, mouseup, pointerdown'\n\n\n  input.eventType = eventType; // compute scale, rotation etc\n\n  computeInputData(manager, input); // emit secret event\n\n  manager.emit('hammer.input', input);\n  manager.recognize(input);\n  manager.session.prevInput = input;\n}\n\n/**\n * @private\n * split string on whitespace\n * @param {String} str\n * @returns {Array} words\n */\nfunction splitStr(str) {\n  return str.trim().split(/\\s+/g);\n}\n\n/**\n * @private\n * addEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\n\nfunction addEventListeners(target, types, handler) {\n  each(splitStr(types), function (type) {\n    target.addEventListener(type, handler, false);\n  });\n}\n\n/**\n * @private\n * removeEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\n\nfunction removeEventListeners(target, types, handler) {\n  each(splitStr(types), function (type) {\n    target.removeEventListener(type, handler, false);\n  });\n}\n\n/**\n * @private\n * get the window object of an element\n * @param {HTMLElement} element\n * @returns {DocumentView|Window}\n */\nfunction getWindowForElement(element) {\n  var doc = element.ownerDocument || element;\n  return doc.defaultView || doc.parentWindow || window;\n}\n\n/**\n * @private\n * create new input type manager\n * @param {Manager} manager\n * @param {Function} callback\n * @returns {Input}\n * @constructor\n */\n\nvar Input =\n/*#__PURE__*/\nfunction () {\n  function Input(manager, callback) {\n    var self = this;\n    this.manager = manager;\n    this.callback = callback;\n    this.element = manager.element;\n    this.target = manager.options.inputTarget; // smaller wrapper around the handler, for the scope and the enabled state of the manager,\n    // so when disabled the input events are completely bypassed.\n\n    this.domHandler = function (ev) {\n      if (boolOrFn(manager.options.enable, [manager])) {\n        self.handler(ev);\n      }\n    };\n\n    this.init();\n  }\n  /**\n   * @private\n   * should handle the inputEvent data and trigger the callback\n   * @virtual\n   */\n\n\n  var _proto = Input.prototype;\n\n  _proto.handler = function handler() {};\n  /**\n   * @private\n   * bind the events\n   */\n\n\n  _proto.init = function init() {\n    this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);\n    this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);\n    this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n  };\n  /**\n   * @private\n   * unbind the events\n   */\n\n\n  _proto.destroy = function destroy() {\n    this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);\n    this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);\n    this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n  };\n\n  return Input;\n}();\n\n/**\n * @private\n * find if a array contains the object using indexOf or a simple polyFill\n * @param {Array} src\n * @param {String} find\n * @param {String} [findByKey]\n * @return {Boolean|Number} false when not found, or the index\n */\nfunction inArray(src, find, findByKey) {\n  if (src.indexOf && !findByKey) {\n    return src.indexOf(find);\n  } else {\n    var i = 0;\n\n    while (i < src.length) {\n      if (findByKey && src[i][findByKey] == find || !findByKey && src[i] === find) {\n        // do not use === here, test fails\n        return i;\n      }\n\n      i++;\n    }\n\n    return -1;\n  }\n}\n\nvar POINTER_INPUT_MAP = {\n  pointerdown: INPUT_START,\n  pointermove: INPUT_MOVE,\n  pointerup: INPUT_END,\n  pointercancel: INPUT_CANCEL,\n  pointerout: INPUT_CANCEL\n}; // in IE10 the pointer types is defined as an enum\n\nvar IE10_POINTER_TYPE_ENUM = {\n  2: INPUT_TYPE_TOUCH,\n  3: INPUT_TYPE_PEN,\n  4: INPUT_TYPE_MOUSE,\n  5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816\n\n};\nvar POINTER_ELEMENT_EVENTS = 'pointerdown';\nvar POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel'; // IE10 has prefixed support, and case-sensitive\n\nif (win.MSPointerEvent && !win.PointerEvent) {\n  POINTER_ELEMENT_EVENTS = 'MSPointerDown';\n  POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';\n}\n/**\n * @private\n * Pointer events input\n * @constructor\n * @extends Input\n */\n\n\nvar PointerEventInput =\n/*#__PURE__*/\nfunction (_Input) {\n  _inheritsLoose(PointerEventInput, _Input);\n\n  function PointerEventInput() {\n    var _this;\n\n    var proto = PointerEventInput.prototype;\n    proto.evEl = POINTER_ELEMENT_EVENTS;\n    proto.evWin = POINTER_WINDOW_EVENTS;\n    _this = _Input.apply(this, arguments) || this;\n    _this.store = _this.manager.session.pointerEvents = [];\n    return _this;\n  }\n  /**\n   * @private\n   * handle mouse events\n   * @param {Object} ev\n   */\n\n\n  var _proto = PointerEventInput.prototype;\n\n  _proto.handler = function handler(ev) {\n    var store = this.store;\n    var removePointer = false;\n    var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');\n    var eventType = POINTER_INPUT_MAP[eventTypeNormalized];\n    var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;\n    var isTouch = pointerType === INPUT_TYPE_TOUCH; // get index of the event in the store\n\n    var storeIndex = inArray(store, ev.pointerId, 'pointerId'); // start and mouse must be down\n\n    if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {\n      if (storeIndex < 0) {\n        store.push(ev);\n        storeIndex = store.length - 1;\n      }\n    } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n      removePointer = true;\n    } // it not found, so the pointer hasn't been down (so it's probably a hover)\n\n\n    if (storeIndex < 0) {\n      return;\n    } // update the event in the store\n\n\n    store[storeIndex] = ev;\n    this.callback(this.manager, eventType, {\n      pointers: store,\n      changedPointers: [ev],\n      pointerType: pointerType,\n      srcEvent: ev\n    });\n\n    if (removePointer) {\n      // remove from the store\n      store.splice(storeIndex, 1);\n    }\n  };\n\n  return PointerEventInput;\n}(Input);\n\n/**\n * @private\n * convert array-like objects to real arrays\n * @param {Object} obj\n * @returns {Array}\n */\nfunction toArray(obj) {\n  return Array.prototype.slice.call(obj, 0);\n}\n\n/**\n * @private\n * unique array with objects based on a key (like 'id') or just by the array's value\n * @param {Array} src [{id:1},{id:2},{id:1}]\n * @param {String} [key]\n * @param {Boolean} [sort=False]\n * @returns {Array} [{id:1},{id:2}]\n */\n\nfunction uniqueArray(src, key, sort) {\n  var results = [];\n  var values = [];\n  var i = 0;\n\n  while (i < src.length) {\n    var val = key ? src[i][key] : src[i];\n\n    if (inArray(values, val) < 0) {\n      results.push(src[i]);\n    }\n\n    values[i] = val;\n    i++;\n  }\n\n  if (sort) {\n    if (!key) {\n      results = results.sort();\n    } else {\n      results = results.sort(function (a, b) {\n        return a[key] > b[key];\n      });\n    }\n  }\n\n  return results;\n}\n\nvar TOUCH_INPUT_MAP = {\n  touchstart: INPUT_START,\n  touchmove: INPUT_MOVE,\n  touchend: INPUT_END,\n  touchcancel: INPUT_CANCEL\n};\nvar TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';\n/**\n * @private\n * Multi-user touch events input\n * @constructor\n * @extends Input\n */\n\nvar TouchInput =\n/*#__PURE__*/\nfunction (_Input) {\n  _inheritsLoose(TouchInput, _Input);\n\n  function TouchInput() {\n    var _this;\n\n    TouchInput.prototype.evTarget = TOUCH_TARGET_EVENTS;\n    _this = _Input.apply(this, arguments) || this;\n    _this.targetIds = {}; // this.evTarget = TOUCH_TARGET_EVENTS;\n\n    return _this;\n  }\n\n  var _proto = TouchInput.prototype;\n\n  _proto.handler = function handler(ev) {\n    var type = TOUCH_INPUT_MAP[ev.type];\n    var touches = getTouches.call(this, ev, type);\n\n    if (!touches) {\n      return;\n    }\n\n    this.callback(this.manager, type, {\n      pointers: touches[0],\n      changedPointers: touches[1],\n      pointerType: INPUT_TYPE_TOUCH,\n      srcEvent: ev\n    });\n  };\n\n  return TouchInput;\n}(Input);\n\nfunction getTouches(ev, type) {\n  var allTouches = toArray(ev.touches);\n  var targetIds = this.targetIds; // when there is only one touch, the process can be simplified\n\n  if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {\n    targetIds[allTouches[0].identifier] = true;\n    return [allTouches, allTouches];\n  }\n\n  var i;\n  var targetTouches;\n  var changedTouches = toArray(ev.changedTouches);\n  var changedTargetTouches = [];\n  var target = this.target; // get target touches from touches\n\n  targetTouches = allTouches.filter(function (touch) {\n    return hasParent(touch.target, target);\n  }); // collect touches\n\n  if (type === INPUT_START) {\n    i = 0;\n\n    while (i < targetTouches.length) {\n      targetIds[targetTouches[i].identifier] = true;\n      i++;\n    }\n  } // filter changed touches to only contain touches that exist in the collected target ids\n\n\n  i = 0;\n\n  while (i < changedTouches.length) {\n    if (targetIds[changedTouches[i].identifier]) {\n      changedTargetTouches.push(changedTouches[i]);\n    } // cleanup removed touches\n\n\n    if (type & (INPUT_END | INPUT_CANCEL)) {\n      delete targetIds[changedTouches[i].identifier];\n    }\n\n    i++;\n  }\n\n  if (!changedTargetTouches.length) {\n    return;\n  }\n\n  return [// merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'\n  uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true), changedTargetTouches];\n}\n\nvar MOUSE_INPUT_MAP = {\n  mousedown: INPUT_START,\n  mousemove: INPUT_MOVE,\n  mouseup: INPUT_END\n};\nvar MOUSE_ELEMENT_EVENTS = 'mousedown';\nvar MOUSE_WINDOW_EVENTS = 'mousemove mouseup';\n/**\n * @private\n * Mouse events input\n * @constructor\n * @extends Input\n */\n\nvar MouseInput =\n/*#__PURE__*/\nfunction (_Input) {\n  _inheritsLoose(MouseInput, _Input);\n\n  function MouseInput() {\n    var _this;\n\n    var proto = MouseInput.prototype;\n    proto.evEl = MOUSE_ELEMENT_EVENTS;\n    proto.evWin = MOUSE_WINDOW_EVENTS;\n    _this = _Input.apply(this, arguments) || this;\n    _this.pressed = false; // mousedown state\n\n    return _this;\n  }\n  /**\n   * @private\n   * handle mouse events\n   * @param {Object} ev\n   */\n\n\n  var _proto = MouseInput.prototype;\n\n  _proto.handler = function handler(ev) {\n    var eventType = MOUSE_INPUT_MAP[ev.type]; // on start we want to have the left mouse button down\n\n    if (eventType & INPUT_START && ev.button === 0) {\n      this.pressed = true;\n    }\n\n    if (eventType & INPUT_MOVE && ev.which !== 1) {\n      eventType = INPUT_END;\n    } // mouse must be down\n\n\n    if (!this.pressed) {\n      return;\n    }\n\n    if (eventType & INPUT_END) {\n      this.pressed = false;\n    }\n\n    this.callback(this.manager, eventType, {\n      pointers: [ev],\n      changedPointers: [ev],\n      pointerType: INPUT_TYPE_MOUSE,\n      srcEvent: ev\n    });\n  };\n\n  return MouseInput;\n}(Input);\n\n/**\n * @private\n * Combined touch and mouse input\n *\n * Touch has a higher priority then mouse, and while touching no mouse events are allowed.\n * This because touch devices also emit mouse events while doing a touch.\n *\n * @constructor\n * @extends Input\n */\n\nvar DEDUP_TIMEOUT = 2500;\nvar DEDUP_DISTANCE = 25;\n\nfunction setLastTouch(eventData) {\n  var _eventData$changedPoi = eventData.changedPointers,\n      touch = _eventData$changedPoi[0];\n\n  if (touch.identifier === this.primaryTouch) {\n    var lastTouch = {\n      x: touch.clientX,\n      y: touch.clientY\n    };\n    var lts = this.lastTouches;\n    this.lastTouches.push(lastTouch);\n\n    var removeLastTouch = function removeLastTouch() {\n      var i = lts.indexOf(lastTouch);\n\n      if (i > -1) {\n        lts.splice(i, 1);\n      }\n    };\n\n    setTimeout(removeLastTouch, DEDUP_TIMEOUT);\n  }\n}\n\nfunction recordTouches(eventType, eventData) {\n  if (eventType & INPUT_START) {\n    this.primaryTouch = eventData.changedPointers[0].identifier;\n    setLastTouch.call(this, eventData);\n  } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n    setLastTouch.call(this, eventData);\n  }\n}\n\nfunction isSyntheticEvent(eventData) {\n  var x = eventData.srcEvent.clientX;\n  var y = eventData.srcEvent.clientY;\n\n  for (var i = 0; i < this.lastTouches.length; i++) {\n    var t = this.lastTouches[i];\n    var dx = Math.abs(x - t.x);\n    var dy = Math.abs(y - t.y);\n\n    if (dx <= DEDUP_DISTANCE && dy <= DEDUP_DISTANCE) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nvar TouchMouseInput =\n/*#__PURE__*/\nfunction () {\n  var TouchMouseInput =\n  /*#__PURE__*/\n  function (_Input) {\n    _inheritsLoose(TouchMouseInput, _Input);\n\n    function TouchMouseInput(_manager, callback) {\n      var _this;\n\n      _this = _Input.call(this, _manager, callback) || this;\n\n      _this.handler = function (manager, inputEvent, inputData) {\n        var isTouch = inputData.pointerType === INPUT_TYPE_TOUCH;\n        var isMouse = inputData.pointerType === INPUT_TYPE_MOUSE;\n\n        if (isMouse && inputData.sourceCapabilities && inputData.sourceCapabilities.firesTouchEvents) {\n          return;\n        } // when we're in a touch event, record touches to  de-dupe synthetic mouse event\n\n\n        if (isTouch) {\n          recordTouches.call(_assertThisInitialized(_assertThisInitialized(_this)), inputEvent, inputData);\n        } else if (isMouse && isSyntheticEvent.call(_assertThisInitialized(_assertThisInitialized(_this)), inputData)) {\n          return;\n        }\n\n        _this.callback(manager, inputEvent, inputData);\n      };\n\n      _this.touch = new TouchInput(_this.manager, _this.handler);\n      _this.mouse = new MouseInput(_this.manager, _this.handler);\n      _this.primaryTouch = null;\n      _this.lastTouches = [];\n      return _this;\n    }\n    /**\n     * @private\n     * handle mouse and touch events\n     * @param {Hammer} manager\n     * @param {String} inputEvent\n     * @param {Object} inputData\n     */\n\n\n    var _proto = TouchMouseInput.prototype;\n\n    /**\n     * @private\n     * remove the event listeners\n     */\n    _proto.destroy = function destroy() {\n      this.touch.destroy();\n      this.mouse.destroy();\n    };\n\n    return TouchMouseInput;\n  }(Input);\n\n  return TouchMouseInput;\n}();\n\n/**\n * @private\n * create new input type manager\n * called by the Manager constructor\n * @param {Hammer} manager\n * @returns {Input}\n */\n\nfunction createInputInstance(manager) {\n  var Type; // let inputClass = manager.options.inputClass;\n\n  var inputClass = manager.options.inputClass;\n\n  if (inputClass) {\n    Type = inputClass;\n  } else if (SUPPORT_POINTER_EVENTS) {\n    Type = PointerEventInput;\n  } else if (SUPPORT_ONLY_TOUCH) {\n    Type = TouchInput;\n  } else if (!SUPPORT_TOUCH) {\n    Type = MouseInput;\n  } else {\n    Type = TouchMouseInput;\n  }\n\n  return new Type(manager, inputHandler);\n}\n\n/**\n * @private\n * if the argument is an array, we want to execute the fn on each entry\n * if it aint an array we don't want to do a thing.\n * this is used by all the methods that accept a single and array argument.\n * @param {*|Array} arg\n * @param {String} fn\n * @param {Object} [context]\n * @returns {Boolean}\n */\n\nfunction invokeArrayArg(arg, fn, context) {\n  if (Array.isArray(arg)) {\n    each(arg, context[fn], context);\n    return true;\n  }\n\n  return false;\n}\n\nvar STATE_POSSIBLE = 1;\nvar STATE_BEGAN = 2;\nvar STATE_CHANGED = 4;\nvar STATE_ENDED = 8;\nvar STATE_RECOGNIZED = STATE_ENDED;\nvar STATE_CANCELLED = 16;\nvar STATE_FAILED = 32;\n\n/**\n * @private\n * get a unique id\n * @returns {number} uniqueId\n */\nvar _uniqueId = 1;\nfunction uniqueId() {\n  return _uniqueId++;\n}\n\n/**\n * @private\n * get a recognizer by name if it is bound to a manager\n * @param {Recognizer|String} otherRecognizer\n * @param {Recognizer} recognizer\n * @returns {Recognizer}\n */\nfunction getRecognizerByNameIfManager(otherRecognizer, recognizer) {\n  var manager = recognizer.manager;\n\n  if (manager) {\n    return manager.get(otherRecognizer);\n  }\n\n  return otherRecognizer;\n}\n\n/**\n * @private\n * get a usable string, used as event postfix\n * @param {constant} state\n * @returns {String} state\n */\n\nfunction stateStr(state) {\n  if (state & STATE_CANCELLED) {\n    return 'cancel';\n  } else if (state & STATE_ENDED) {\n    return 'end';\n  } else if (state & STATE_CHANGED) {\n    return 'move';\n  } else if (state & STATE_BEGAN) {\n    return 'start';\n  }\n\n  return '';\n}\n\n/**\n * @private\n * Recognizer flow explained; *\n * All recognizers have the initial state of POSSIBLE when a input session starts.\n * The definition of a input session is from the first input until the last input, with all it's movement in it. *\n * Example session for mouse-input: mousedown -> mousemove -> mouseup\n *\n * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed\n * which determines with state it should be.\n *\n * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\n * POSSIBLE to give it another change on the next cycle.\n *\n *               Possible\n *                  |\n *            +-----+---------------+\n *            |                     |\n *      +-----+-----+               |\n *      |           |               |\n *   Failed      Cancelled          |\n *                          +-------+------+\n *                          |              |\n *                      Recognized       Began\n *                                         |\n *                                      Changed\n *                                         |\n *                                  Ended/Recognized\n */\n\n/**\n * @private\n * Recognizer\n * Every recognizer needs to extend from this class.\n * @constructor\n * @param {Object} options\n */\n\nvar Recognizer =\n/*#__PURE__*/\nfunction () {\n  function Recognizer(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    this.options = _extends({\n      enable: true\n    }, options);\n    this.id = uniqueId();\n    this.manager = null; // default is enable true\n\n    this.state = STATE_POSSIBLE;\n    this.simultaneous = {};\n    this.requireFail = [];\n  }\n  /**\n   * @private\n   * set options\n   * @param {Object} options\n   * @return {Recognizer}\n   */\n\n\n  var _proto = Recognizer.prototype;\n\n  _proto.set = function set(options) {\n    assign$1(this.options, options); // also update the touchAction, in case something changed about the directions/enabled state\n\n    this.manager && this.manager.touchAction.update();\n    return this;\n  };\n  /**\n   * @private\n   * recognize simultaneous with an other recognizer.\n   * @param {Recognizer} otherRecognizer\n   * @returns {Recognizer} this\n   */\n\n\n  _proto.recognizeWith = function recognizeWith(otherRecognizer) {\n    if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {\n      return this;\n    }\n\n    var simultaneous = this.simultaneous;\n    otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n\n    if (!simultaneous[otherRecognizer.id]) {\n      simultaneous[otherRecognizer.id] = otherRecognizer;\n      otherRecognizer.recognizeWith(this);\n    }\n\n    return this;\n  };\n  /**\n   * @private\n   * drop the simultaneous link. it doesnt remove the link on the other recognizer.\n   * @param {Recognizer} otherRecognizer\n   * @returns {Recognizer} this\n   */\n\n\n  _proto.dropRecognizeWith = function dropRecognizeWith(otherRecognizer) {\n    if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {\n      return this;\n    }\n\n    otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n    delete this.simultaneous[otherRecognizer.id];\n    return this;\n  };\n  /**\n   * @private\n   * recognizer can only run when an other is failing\n   * @param {Recognizer} otherRecognizer\n   * @returns {Recognizer} this\n   */\n\n\n  _proto.requireFailure = function requireFailure(otherRecognizer) {\n    if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {\n      return this;\n    }\n\n    var requireFail = this.requireFail;\n    otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n\n    if (inArray(requireFail, otherRecognizer) === -1) {\n      requireFail.push(otherRecognizer);\n      otherRecognizer.requireFailure(this);\n    }\n\n    return this;\n  };\n  /**\n   * @private\n   * drop the requireFailure link. it does not remove the link on the other recognizer.\n   * @param {Recognizer} otherRecognizer\n   * @returns {Recognizer} this\n   */\n\n\n  _proto.dropRequireFailure = function dropRequireFailure(otherRecognizer) {\n    if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {\n      return this;\n    }\n\n    otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n    var index = inArray(this.requireFail, otherRecognizer);\n\n    if (index > -1) {\n      this.requireFail.splice(index, 1);\n    }\n\n    return this;\n  };\n  /**\n   * @private\n   * has require failures boolean\n   * @returns {boolean}\n   */\n\n\n  _proto.hasRequireFailures = function hasRequireFailures() {\n    return this.requireFail.length > 0;\n  };\n  /**\n   * @private\n   * if the recognizer can recognize simultaneous with an other recognizer\n   * @param {Recognizer} otherRecognizer\n   * @returns {Boolean}\n   */\n\n\n  _proto.canRecognizeWith = function canRecognizeWith(otherRecognizer) {\n    return !!this.simultaneous[otherRecognizer.id];\n  };\n  /**\n   * @private\n   * You should use `tryEmit` instead of `emit` directly to check\n   * that all the needed recognizers has failed before emitting.\n   * @param {Object} input\n   */\n\n\n  _proto.emit = function emit(input) {\n    var self = this;\n    var state = this.state;\n\n    function emit(event) {\n      self.manager.emit(event, input);\n    } // 'panstart' and 'panmove'\n\n\n    if (state < STATE_ENDED) {\n      emit(self.options.event + stateStr(state));\n    }\n\n    emit(self.options.event); // simple 'eventName' events\n\n    if (input.additionalEvent) {\n      // additional event(panleft, panright, pinchin, pinchout...)\n      emit(input.additionalEvent);\n    } // panend and pancancel\n\n\n    if (state >= STATE_ENDED) {\n      emit(self.options.event + stateStr(state));\n    }\n  };\n  /**\n   * @private\n   * Check that all the require failure recognizers has failed,\n   * if true, it emits a gesture event,\n   * otherwise, setup the state to FAILED.\n   * @param {Object} input\n   */\n\n\n  _proto.tryEmit = function tryEmit(input) {\n    if (this.canEmit()) {\n      return this.emit(input);\n    } // it's failing anyway\n\n\n    this.state = STATE_FAILED;\n  };\n  /**\n   * @private\n   * can we emit?\n   * @returns {boolean}\n   */\n\n\n  _proto.canEmit = function canEmit() {\n    var i = 0;\n\n    while (i < this.requireFail.length) {\n      if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {\n        return false;\n      }\n\n      i++;\n    }\n\n    return true;\n  };\n  /**\n   * @private\n   * update the recognizer\n   * @param {Object} inputData\n   */\n\n\n  _proto.recognize = function recognize(inputData) {\n    // make a new copy of the inputData\n    // so we can change the inputData without messing up the other recognizers\n    var inputDataClone = assign$1({}, inputData); // is is enabled and allow recognizing?\n\n    if (!boolOrFn(this.options.enable, [this, inputDataClone])) {\n      this.reset();\n      this.state = STATE_FAILED;\n      return;\n    } // reset when we've reached the end\n\n\n    if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {\n      this.state = STATE_POSSIBLE;\n    }\n\n    this.state = this.process(inputDataClone); // the recognizer has recognized a gesture\n    // so trigger an event\n\n    if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {\n      this.tryEmit(inputDataClone);\n    }\n  };\n  /**\n   * @private\n   * return the state of the recognizer\n   * the actual recognizing happens in this method\n   * @virtual\n   * @param {Object} inputData\n   * @returns {constant} STATE\n   */\n\n  /* jshint ignore:start */\n\n\n  _proto.process = function process(inputData) {};\n  /* jshint ignore:end */\n\n  /**\n   * @private\n   * return the preferred touch-action\n   * @virtual\n   * @returns {Array}\n   */\n\n\n  _proto.getTouchAction = function getTouchAction() {};\n  /**\n   * @private\n   * called when the gesture isn't allowed to recognize\n   * like when another is being recognized or it is disabled\n   * @virtual\n   */\n\n\n  _proto.reset = function reset() {};\n\n  return Recognizer;\n}();\n\nvar defaults = {\n  /**\n   * @private\n   * set if DOM events are being triggered.\n   * But this is slower and unused by simple implementations, so disabled by default.\n   * @type {Boolean}\n   * @default false\n   */\n  domEvents: false,\n\n  /**\n   * @private\n   * The value for the touchAction property/fallback.\n   * When set to `compute` it will magically set the correct value based on the added recognizers.\n   * @type {String}\n   * @default compute\n   */\n  touchAction: TOUCH_ACTION_COMPUTE,\n\n  /**\n   * @private\n   * @type {Boolean}\n   * @default true\n   */\n  enable: true,\n\n  /**\n   * @private\n   * EXPERIMENTAL FEATURE -- can be removed/changed\n   * Change the parent input target element.\n   * If Null, then it is being set the to main element.\n   * @type {Null|EventTarget}\n   * @default null\n   */\n  inputTarget: null,\n\n  /**\n   * @private\n   * force an input class\n   * @type {Null|Function}\n   * @default null\n   */\n  inputClass: null,\n\n  /**\n   * @private\n   * Default recognizer setup when calling `Hammer()`\n   * When creating a new Manager these will be skipped.\n   * @type {Array}\n   */\n  preset: [],\n\n  /**\n   * @private\n   * Some CSS properties can be used to improve the working of Hammer.\n   * Add them to this method and they will be set when creating a new Manager.\n   * @namespace\n   */\n  cssProps: {\n    /**\n     * @private\n     * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.\n     * @type {String}\n     * @default 'none'\n     */\n    userSelect: \"none\",\n\n    /**\n     * @private\n     * Disable the Windows Phone grippers when pressing an element.\n     * @type {String}\n     * @default 'none'\n     */\n    touchSelect: \"none\",\n\n    /**\n     * @private\n     * Disables the default callout shown when you touch and hold a touch target.\n     * On iOS, when you touch and hold a touch target such as a link, Safari displays\n     * a callout containing information about the link. This property allows you to disable that callout.\n     * @type {String}\n     * @default 'none'\n     */\n    touchCallout: \"none\",\n\n    /**\n     * @private\n     * Specifies whether zooming is enabled. Used by IE10>\n     * @type {String}\n     * @default 'none'\n     */\n    contentZooming: \"none\",\n\n    /**\n     * @private\n     * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.\n     * @type {String}\n     * @default 'none'\n     */\n    userDrag: \"none\",\n\n    /**\n     * @private\n     * Overrides the highlight color shown when the user taps a link or a JavaScript\n     * clickable element in iOS. This property obeys the alpha value, if specified.\n     * @type {String}\n     * @default 'rgba(0,0,0,0)'\n     */\n    tapHighlightColor: \"rgba(0,0,0,0)\"\n  }\n};\n\nvar STOP = 1;\nvar FORCED_STOP = 2;\n/**\n * @private\n * add/remove the css properties as defined in manager.options.cssProps\n * @param {Manager} manager\n * @param {Boolean} add\n */\n\nfunction toggleCssProps(manager, add) {\n  var element = manager.element;\n\n  if (!element.style) {\n    return;\n  }\n\n  var prop;\n  each(manager.options.cssProps, function (value, name) {\n    prop = prefixed(element.style, name);\n\n    if (add) {\n      manager.oldCssProps[prop] = element.style[prop];\n      element.style[prop] = value;\n    } else {\n      element.style[prop] = manager.oldCssProps[prop] || \"\";\n    }\n  });\n\n  if (!add) {\n    manager.oldCssProps = {};\n  }\n}\n/**\n * @private\n * trigger dom event\n * @param {String} event\n * @param {Object} data\n */\n\n\nfunction triggerDomEvent(event, data) {\n  var gestureEvent = document.createEvent(\"Event\");\n  gestureEvent.initEvent(event, true, true);\n  gestureEvent.gesture = data;\n  data.target.dispatchEvent(gestureEvent);\n}\n/**\n* @private\n * Manager\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\n\n\nvar Manager =\n/*#__PURE__*/\nfunction () {\n  function Manager(element, options) {\n    var _this = this;\n\n    this.options = assign$1({}, defaults, options || {});\n    this.options.inputTarget = this.options.inputTarget || element;\n    this.handlers = {};\n    this.session = {};\n    this.recognizers = [];\n    this.oldCssProps = {};\n    this.element = element;\n    this.input = createInputInstance(this);\n    this.touchAction = new TouchAction(this, this.options.touchAction);\n    toggleCssProps(this, true);\n    each(this.options.recognizers, function (item) {\n      var recognizer = _this.add(new item[0](item[1]));\n\n      item[2] && recognizer.recognizeWith(item[2]);\n      item[3] && recognizer.requireFailure(item[3]);\n    }, this);\n  }\n  /**\n   * @private\n   * set options\n   * @param {Object} options\n   * @returns {Manager}\n   */\n\n\n  var _proto = Manager.prototype;\n\n  _proto.set = function set(options) {\n    assign$1(this.options, options); // Options that need a little more setup\n\n    if (options.touchAction) {\n      this.touchAction.update();\n    }\n\n    if (options.inputTarget) {\n      // Clean up existing event listeners and reinitialize\n      this.input.destroy();\n      this.input.target = options.inputTarget;\n      this.input.init();\n    }\n\n    return this;\n  };\n  /**\n   * @private\n   * stop recognizing for this session.\n   * This session will be discarded, when a new [input]start event is fired.\n   * When forced, the recognizer cycle is stopped immediately.\n   * @param {Boolean} [force]\n   */\n\n\n  _proto.stop = function stop(force) {\n    this.session.stopped = force ? FORCED_STOP : STOP;\n  };\n  /**\n   * @private\n   * run the recognizers!\n   * called by the inputHandler function on every movement of the pointers (touches)\n   * it walks through all the recognizers and tries to detect the gesture that is being made\n   * @param {Object} inputData\n   */\n\n\n  _proto.recognize = function recognize(inputData) {\n    var session = this.session;\n\n    if (session.stopped) {\n      return;\n    } // run the touch-action polyfill\n\n\n    this.touchAction.preventDefaults(inputData);\n    var recognizer;\n    var recognizers = this.recognizers; // this holds the recognizer that is being recognized.\n    // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED\n    // if no recognizer is detecting a thing, it is set to `null`\n\n    var curRecognizer = session.curRecognizer; // reset when the last recognizer is recognized\n    // or when we're in a new session\n\n    if (!curRecognizer || curRecognizer && curRecognizer.state & STATE_RECOGNIZED) {\n      session.curRecognizer = null;\n      curRecognizer = null;\n    }\n\n    var i = 0;\n\n    while (i < recognizers.length) {\n      recognizer = recognizers[i]; // find out if we are allowed try to recognize the input for this one.\n      // 1.   allow if the session is NOT forced stopped (see the .stop() method)\n      // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one\n      //      that is being recognized.\n      // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.\n      //      this can be setup with the `recognizeWith()` method on the recognizer.\n\n      if (session.stopped !== FORCED_STOP && ( // 1\n      !curRecognizer || recognizer === curRecognizer || // 2\n      recognizer.canRecognizeWith(curRecognizer))) {\n        // 3\n        recognizer.recognize(inputData);\n      } else {\n        recognizer.reset();\n      } // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the\n      // current active recognizer. but only if we don't already have an active recognizer\n\n\n      if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {\n        session.curRecognizer = recognizer;\n        curRecognizer = recognizer;\n      }\n\n      i++;\n    }\n  };\n  /**\n   * @private\n   * get a recognizer by its event name.\n   * @param {Recognizer|String} recognizer\n   * @returns {Recognizer|Null}\n   */\n\n\n  _proto.get = function get(recognizer) {\n    if (recognizer instanceof Recognizer) {\n      return recognizer;\n    }\n\n    var recognizers = this.recognizers;\n\n    for (var i = 0; i < recognizers.length; i++) {\n      if (recognizers[i].options.event === recognizer) {\n        return recognizers[i];\n      }\n    }\n\n    return null;\n  };\n  /**\n   * @private add a recognizer to the manager\n   * existing recognizers with the same event name will be removed\n   * @param {Recognizer} recognizer\n   * @returns {Recognizer|Manager}\n   */\n\n\n  _proto.add = function add(recognizer) {\n    if (invokeArrayArg(recognizer, \"add\", this)) {\n      return this;\n    } // remove existing\n\n\n    var existing = this.get(recognizer.options.event);\n\n    if (existing) {\n      this.remove(existing);\n    }\n\n    this.recognizers.push(recognizer);\n    recognizer.manager = this;\n    this.touchAction.update();\n    return recognizer;\n  };\n  /**\n   * @private\n   * remove a recognizer by name or instance\n   * @param {Recognizer|String} recognizer\n   * @returns {Manager}\n   */\n\n\n  _proto.remove = function remove(recognizer) {\n    if (invokeArrayArg(recognizer, \"remove\", this)) {\n      return this;\n    }\n\n    var targetRecognizer = this.get(recognizer); // let's make sure this recognizer exists\n\n    if (recognizer) {\n      var recognizers = this.recognizers;\n      var index = inArray(recognizers, targetRecognizer);\n\n      if (index !== -1) {\n        recognizers.splice(index, 1);\n        this.touchAction.update();\n      }\n    }\n\n    return this;\n  };\n  /**\n   * @private\n   * bind event\n   * @param {String} events\n   * @param {Function} handler\n   * @returns {EventEmitter} this\n   */\n\n\n  _proto.on = function on(events, handler) {\n    if (events === undefined || handler === undefined) {\n      return this;\n    }\n\n    var handlers = this.handlers;\n    each(splitStr(events), function (event) {\n      handlers[event] = handlers[event] || [];\n      handlers[event].push(handler);\n    });\n    return this;\n  };\n  /**\n   * @private unbind event, leave emit blank to remove all handlers\n   * @param {String} events\n   * @param {Function} [handler]\n   * @returns {EventEmitter} this\n   */\n\n\n  _proto.off = function off(events, handler) {\n    if (events === undefined) {\n      return this;\n    }\n\n    var handlers = this.handlers;\n    each(splitStr(events), function (event) {\n      if (!handler) {\n        delete handlers[event];\n      } else {\n        handlers[event] && handlers[event].splice(inArray(handlers[event], handler), 1);\n      }\n    });\n    return this;\n  };\n  /**\n   * @private emit event to the listeners\n   * @param {String} event\n   * @param {Object} data\n   */\n\n\n  _proto.emit = function emit(event, data) {\n    // we also want to trigger dom events\n    if (this.options.domEvents) {\n      triggerDomEvent(event, data);\n    } // no handlers, so skip it all\n\n\n    var handlers = this.handlers[event] && this.handlers[event].slice();\n\n    if (!handlers || !handlers.length) {\n      return;\n    }\n\n    data.type = event;\n\n    data.preventDefault = function () {\n      data.srcEvent.preventDefault();\n    };\n\n    var i = 0;\n\n    while (i < handlers.length) {\n      handlers[i](data);\n      i++;\n    }\n  };\n  /**\n   * @private\n   * destroy the manager and unbinds all events\n   * it doesn't unbind dom events, that is the user own responsibility\n   */\n\n\n  _proto.destroy = function destroy() {\n    this.element && toggleCssProps(this, false);\n    this.handlers = {};\n    this.session = {};\n    this.input.destroy();\n    this.element = null;\n  };\n\n  return Manager;\n}();\n\nvar SINGLE_TOUCH_INPUT_MAP = {\n  touchstart: INPUT_START,\n  touchmove: INPUT_MOVE,\n  touchend: INPUT_END,\n  touchcancel: INPUT_CANCEL\n};\nvar SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';\nvar SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';\n/**\n * @private\n * Touch events input\n * @constructor\n * @extends Input\n */\n\nvar SingleTouchInput =\n/*#__PURE__*/\nfunction (_Input) {\n  _inheritsLoose(SingleTouchInput, _Input);\n\n  function SingleTouchInput() {\n    var _this;\n\n    var proto = SingleTouchInput.prototype;\n    proto.evTarget = SINGLE_TOUCH_TARGET_EVENTS;\n    proto.evWin = SINGLE_TOUCH_WINDOW_EVENTS;\n    _this = _Input.apply(this, arguments) || this;\n    _this.started = false;\n    return _this;\n  }\n\n  var _proto = SingleTouchInput.prototype;\n\n  _proto.handler = function handler(ev) {\n    var type = SINGLE_TOUCH_INPUT_MAP[ev.type]; // should we handle the touch events?\n\n    if (type === INPUT_START) {\n      this.started = true;\n    }\n\n    if (!this.started) {\n      return;\n    }\n\n    var touches = normalizeSingleTouches.call(this, ev, type); // when done, reset the started state\n\n    if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {\n      this.started = false;\n    }\n\n    this.callback(this.manager, type, {\n      pointers: touches[0],\n      changedPointers: touches[1],\n      pointerType: INPUT_TYPE_TOUCH,\n      srcEvent: ev\n    });\n  };\n\n  return SingleTouchInput;\n}(Input);\n\nfunction normalizeSingleTouches(ev, type) {\n  var all = toArray(ev.touches);\n  var changed = toArray(ev.changedTouches);\n\n  if (type & (INPUT_END | INPUT_CANCEL)) {\n    all = uniqueArray(all.concat(changed), 'identifier', true);\n  }\n\n  return [all, changed];\n}\n\n/**\n * @private\n * This recognizer is just used as a base for the simple attribute recognizers.\n * @constructor\n * @extends Recognizer\n */\n\nvar AttrRecognizer =\n/*#__PURE__*/\nfunction (_Recognizer) {\n  _inheritsLoose(AttrRecognizer, _Recognizer);\n\n  function AttrRecognizer(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    return _Recognizer.call(this, _extends({\n      pointers: 1\n    }, options)) || this;\n  }\n  /**\n   * @private\n   * Used to check if it the recognizer receives valid input, like input.distance > 10.\n   * @memberof AttrRecognizer\n   * @param {Object} input\n   * @returns {Boolean} recognized\n   */\n\n\n  var _proto = AttrRecognizer.prototype;\n\n  _proto.attrTest = function attrTest(input) {\n    var optionPointers = this.options.pointers;\n    return optionPointers === 0 || input.pointers.length === optionPointers;\n  };\n  /**\n   * @private\n   * Process the input and return the state for the recognizer\n   * @memberof AttrRecognizer\n   * @param {Object} input\n   * @returns {*} State\n   */\n\n\n  _proto.process = function process(input) {\n    var state = this.state;\n    var eventType = input.eventType;\n    var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);\n    var isValid = this.attrTest(input); // on cancel input and we've recognized before, return STATE_CANCELLED\n\n    if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {\n      return state | STATE_CANCELLED;\n    } else if (isRecognized || isValid) {\n      if (eventType & INPUT_END) {\n        return state | STATE_ENDED;\n      } else if (!(state & STATE_BEGAN)) {\n        return STATE_BEGAN;\n      }\n\n      return state | STATE_CHANGED;\n    }\n\n    return STATE_FAILED;\n  };\n\n  return AttrRecognizer;\n}(Recognizer);\n\n/**\n * @private\n * A tap is recognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\n * between the given interval and position. The delay option can be used to recognize multi-taps without firing\n * a single tap.\n *\n * The eventData from the emitted event contains the property `tapCount`, which contains the amount of\n * multi-taps being recognized.\n * @constructor\n * @extends Recognizer\n */\n\nvar TapRecognizer =\n/*#__PURE__*/\nfunction (_Recognizer) {\n  _inheritsLoose(TapRecognizer, _Recognizer);\n\n  function TapRecognizer(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _Recognizer.call(this, _extends({\n      event: 'tap',\n      pointers: 1,\n      taps: 1,\n      interval: 300,\n      // max time between the multi-tap taps\n      time: 250,\n      // max time of the pointer to be down (like finger on the screen)\n      threshold: 9,\n      // a minimal movement is ok, but keep it low\n      posThreshold: 10\n    }, options)) || this; // previous time and center,\n    // used for tap counting\n\n    _this.pTime = false;\n    _this.pCenter = false;\n    _this._timer = null;\n    _this._input = null;\n    _this.count = 0;\n    return _this;\n  }\n\n  var _proto = TapRecognizer.prototype;\n\n  _proto.getTouchAction = function getTouchAction() {\n    return [TOUCH_ACTION_MANIPULATION];\n  };\n\n  _proto.process = function process(input) {\n    var _this2 = this;\n\n    var options = this.options;\n    var validPointers = input.pointers.length === options.pointers;\n    var validMovement = input.distance < options.threshold;\n    var validTouchTime = input.deltaTime < options.time;\n    this.reset();\n\n    if (input.eventType & INPUT_START && this.count === 0) {\n      return this.failTimeout();\n    } // we only allow little movement\n    // and we've reached an end event, so a tap is possible\n\n\n    if (validMovement && validTouchTime && validPointers) {\n      if (input.eventType !== INPUT_END) {\n        return this.failTimeout();\n      }\n\n      var validInterval = this.pTime ? input.timeStamp - this.pTime < options.interval : true;\n      var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;\n      this.pTime = input.timeStamp;\n      this.pCenter = input.center;\n\n      if (!validMultiTap || !validInterval) {\n        this.count = 1;\n      } else {\n        this.count += 1;\n      }\n\n      this._input = input; // if tap count matches we have recognized it,\n      // else it has began recognizing...\n\n      var tapCount = this.count % options.taps;\n\n      if (tapCount === 0) {\n        // no failing requirements, immediately trigger the tap event\n        // or wait as long as the multitap interval to trigger\n        if (!this.hasRequireFailures()) {\n          return STATE_RECOGNIZED;\n        } else {\n          this._timer = setTimeout(function () {\n            _this2.state = STATE_RECOGNIZED;\n\n            _this2.tryEmit();\n          }, options.interval);\n          return STATE_BEGAN;\n        }\n      }\n    }\n\n    return STATE_FAILED;\n  };\n\n  _proto.failTimeout = function failTimeout() {\n    var _this3 = this;\n\n    this._timer = setTimeout(function () {\n      _this3.state = STATE_FAILED;\n    }, this.options.interval);\n    return STATE_FAILED;\n  };\n\n  _proto.reset = function reset() {\n    clearTimeout(this._timer);\n  };\n\n  _proto.emit = function emit() {\n    if (this.state === STATE_RECOGNIZED) {\n      this._input.tapCount = this.count;\n      this.manager.emit(this.options.event, this._input);\n    }\n  };\n\n  return TapRecognizer;\n}(Recognizer);\n\n/**\n * @private\n * direction cons to string\n * @param {constant} direction\n * @returns {String}\n */\n\nfunction directionStr(direction) {\n  if (direction === DIRECTION_DOWN) {\n    return 'down';\n  } else if (direction === DIRECTION_UP) {\n    return 'up';\n  } else if (direction === DIRECTION_LEFT) {\n    return 'left';\n  } else if (direction === DIRECTION_RIGHT) {\n    return 'right';\n  }\n\n  return '';\n}\n\n/**\n * @private\n * Pan\n * Recognized when the pointer is down and moved in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\n\nvar PanRecognizer =\n/*#__PURE__*/\nfunction (_AttrRecognizer) {\n  _inheritsLoose(PanRecognizer, _AttrRecognizer);\n\n  function PanRecognizer(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _AttrRecognizer.call(this, _extends({\n      event: 'pan',\n      threshold: 10,\n      pointers: 1,\n      direction: DIRECTION_ALL\n    }, options)) || this;\n    _this.pX = null;\n    _this.pY = null;\n    return _this;\n  }\n\n  var _proto = PanRecognizer.prototype;\n\n  _proto.getTouchAction = function getTouchAction() {\n    var direction = this.options.direction;\n    var actions = [];\n\n    if (direction & DIRECTION_HORIZONTAL) {\n      actions.push(TOUCH_ACTION_PAN_Y);\n    }\n\n    if (direction & DIRECTION_VERTICAL) {\n      actions.push(TOUCH_ACTION_PAN_X);\n    }\n\n    return actions;\n  };\n\n  _proto.directionTest = function directionTest(input) {\n    var options = this.options;\n    var hasMoved = true;\n    var distance = input.distance;\n    var direction = input.direction;\n    var x = input.deltaX;\n    var y = input.deltaY; // lock to axis?\n\n    if (!(direction & options.direction)) {\n      if (options.direction & DIRECTION_HORIZONTAL) {\n        direction = x === 0 ? DIRECTION_NONE : x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n        hasMoved = x !== this.pX;\n        distance = Math.abs(input.deltaX);\n      } else {\n        direction = y === 0 ? DIRECTION_NONE : y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n        hasMoved = y !== this.pY;\n        distance = Math.abs(input.deltaY);\n      }\n    }\n\n    input.direction = direction;\n    return hasMoved && distance > options.threshold && direction & options.direction;\n  };\n\n  _proto.attrTest = function attrTest(input) {\n    return AttrRecognizer.prototype.attrTest.call(this, input) && ( // replace with a super call\n    this.state & STATE_BEGAN || !(this.state & STATE_BEGAN) && this.directionTest(input));\n  };\n\n  _proto.emit = function emit(input) {\n    this.pX = input.deltaX;\n    this.pY = input.deltaY;\n    var direction = directionStr(input.direction);\n\n    if (direction) {\n      input.additionalEvent = this.options.event + direction;\n    }\n\n    _AttrRecognizer.prototype.emit.call(this, input);\n  };\n\n  return PanRecognizer;\n}(AttrRecognizer);\n\n/**\n * @private\n * Swipe\n * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\n\nvar SwipeRecognizer =\n/*#__PURE__*/\nfunction (_AttrRecognizer) {\n  _inheritsLoose(SwipeRecognizer, _AttrRecognizer);\n\n  function SwipeRecognizer(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    return _AttrRecognizer.call(this, _extends({\n      event: 'swipe',\n      threshold: 10,\n      velocity: 0.3,\n      direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,\n      pointers: 1\n    }, options)) || this;\n  }\n\n  var _proto = SwipeRecognizer.prototype;\n\n  _proto.getTouchAction = function getTouchAction() {\n    return PanRecognizer.prototype.getTouchAction.call(this);\n  };\n\n  _proto.attrTest = function attrTest(input) {\n    var direction = this.options.direction;\n    var velocity;\n\n    if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {\n      velocity = input.overallVelocity;\n    } else if (direction & DIRECTION_HORIZONTAL) {\n      velocity = input.overallVelocityX;\n    } else if (direction & DIRECTION_VERTICAL) {\n      velocity = input.overallVelocityY;\n    }\n\n    return _AttrRecognizer.prototype.attrTest.call(this, input) && direction & input.offsetDirection && input.distance > this.options.threshold && input.maxPointers === this.options.pointers && abs(velocity) > this.options.velocity && input.eventType & INPUT_END;\n  };\n\n  _proto.emit = function emit(input) {\n    var direction = directionStr(input.offsetDirection);\n\n    if (direction) {\n      this.manager.emit(this.options.event + direction, input);\n    }\n\n    this.manager.emit(this.options.event, input);\n  };\n\n  return SwipeRecognizer;\n}(AttrRecognizer);\n\n/**\n * @private\n * Pinch\n * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).\n * @constructor\n * @extends AttrRecognizer\n */\n\nvar PinchRecognizer =\n/*#__PURE__*/\nfunction (_AttrRecognizer) {\n  _inheritsLoose(PinchRecognizer, _AttrRecognizer);\n\n  function PinchRecognizer(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    return _AttrRecognizer.call(this, _extends({\n      event: 'pinch',\n      threshold: 0,\n      pointers: 2\n    }, options)) || this;\n  }\n\n  var _proto = PinchRecognizer.prototype;\n\n  _proto.getTouchAction = function getTouchAction() {\n    return [TOUCH_ACTION_NONE];\n  };\n\n  _proto.attrTest = function attrTest(input) {\n    return _AttrRecognizer.prototype.attrTest.call(this, input) && (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);\n  };\n\n  _proto.emit = function emit(input) {\n    if (input.scale !== 1) {\n      var inOut = input.scale < 1 ? 'in' : 'out';\n      input.additionalEvent = this.options.event + inOut;\n    }\n\n    _AttrRecognizer.prototype.emit.call(this, input);\n  };\n\n  return PinchRecognizer;\n}(AttrRecognizer);\n\n/**\n * @private\n * Rotate\n * Recognized when two or more pointer are moving in a circular motion.\n * @constructor\n * @extends AttrRecognizer\n */\n\nvar RotateRecognizer =\n/*#__PURE__*/\nfunction (_AttrRecognizer) {\n  _inheritsLoose(RotateRecognizer, _AttrRecognizer);\n\n  function RotateRecognizer(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    return _AttrRecognizer.call(this, _extends({\n      event: 'rotate',\n      threshold: 0,\n      pointers: 2\n    }, options)) || this;\n  }\n\n  var _proto = RotateRecognizer.prototype;\n\n  _proto.getTouchAction = function getTouchAction() {\n    return [TOUCH_ACTION_NONE];\n  };\n\n  _proto.attrTest = function attrTest(input) {\n    return _AttrRecognizer.prototype.attrTest.call(this, input) && (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);\n  };\n\n  return RotateRecognizer;\n}(AttrRecognizer);\n\n/**\n * @private\n * Press\n * Recognized when the pointer is down for x ms without any movement.\n * @constructor\n * @extends Recognizer\n */\n\nvar PressRecognizer =\n/*#__PURE__*/\nfunction (_Recognizer) {\n  _inheritsLoose(PressRecognizer, _Recognizer);\n\n  function PressRecognizer(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _Recognizer.call(this, _extends({\n      event: 'press',\n      pointers: 1,\n      time: 251,\n      // minimal time of the pointer to be pressed\n      threshold: 9\n    }, options)) || this;\n    _this._timer = null;\n    _this._input = null;\n    return _this;\n  }\n\n  var _proto = PressRecognizer.prototype;\n\n  _proto.getTouchAction = function getTouchAction() {\n    return [TOUCH_ACTION_AUTO];\n  };\n\n  _proto.process = function process(input) {\n    var _this2 = this;\n\n    var options = this.options;\n    var validPointers = input.pointers.length === options.pointers;\n    var validMovement = input.distance < options.threshold;\n    var validTime = input.deltaTime > options.time;\n    this._input = input; // we only allow little movement\n    // and we've reached an end event, so a tap is possible\n\n    if (!validMovement || !validPointers || input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime) {\n      this.reset();\n    } else if (input.eventType & INPUT_START) {\n      this.reset();\n      this._timer = setTimeout(function () {\n        _this2.state = STATE_RECOGNIZED;\n\n        _this2.tryEmit();\n      }, options.time);\n    } else if (input.eventType & INPUT_END) {\n      return STATE_RECOGNIZED;\n    }\n\n    return STATE_FAILED;\n  };\n\n  _proto.reset = function reset() {\n    clearTimeout(this._timer);\n  };\n\n  _proto.emit = function emit(input) {\n    if (this.state !== STATE_RECOGNIZED) {\n      return;\n    }\n\n    if (input && input.eventType & INPUT_END) {\n      this.manager.emit(this.options.event + \"up\", input);\n    } else {\n      this._input.timeStamp = now();\n      this.manager.emit(this.options.event, this._input);\n    }\n  };\n\n  return PressRecognizer;\n}(Recognizer);\n\n/**\n * @private\n * wrap a method with a deprecation warning and stack trace\n * @param {Function} method\n * @param {String} name\n * @param {String} message\n * @returns {Function} A new function wrapping the supplied method.\n */\nfunction deprecate(method, name, message) {\n  var deprecationMessage = \"DEPRECATED METHOD: \" + name + \"\\n\" + message + \" AT \\n\";\n  return function () {\n    var e = new Error('get-stack-trace');\n    var stack = e && e.stack ? e.stack.replace(/^[^\\(]+?[\\n$]/gm, '').replace(/^\\s+at\\s+/gm, '').replace(/^Object.<anonymous>\\s*\\(/gm, '{anonymous}()@') : 'Unknown Stack Trace';\n    var log = window.console && (window.console.warn || window.console.log);\n\n    if (log) {\n      log.call(window.console, deprecationMessage, stack);\n    }\n\n    return method.apply(this, arguments);\n  };\n}\n\n/**\n * @private\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} dest\n * @param {Object} src\n * @param {Boolean} [merge=false]\n * @returns {Object} dest\n */\n\nvar extend = deprecate(function (dest, src, merge) {\n  var keys = Object.keys(src);\n  var i = 0;\n\n  while (i < keys.length) {\n    if (!merge || merge && dest[keys[i]] === undefined) {\n      dest[keys[i]] = src[keys[i]];\n    }\n\n    i++;\n  }\n\n  return dest;\n}, 'extend', 'Use `assign`.');\n\n/**\n * @private\n * merge the values from src in the dest.\n * means that properties that exist in dest will not be overwritten by src\n * @param {Object} dest\n * @param {Object} src\n * @returns {Object} dest\n */\n\nvar merge = deprecate(function (dest, src) {\n  return extend(dest, src, true);\n}, 'merge', 'Use `assign`.');\n\n/**\n * @private\n * simple class inheritance\n * @param {Function} child\n * @param {Function} base\n * @param {Object} [properties]\n */\n\nfunction inherit(child, base, properties) {\n  var baseP = base.prototype;\n  var childP;\n  childP = child.prototype = Object.create(baseP);\n  childP.constructor = child;\n  childP._super = baseP;\n\n  if (properties) {\n    assign$1(childP, properties);\n  }\n}\n\n/**\n * @private\n * simple function bind\n * @param {Function} fn\n * @param {Object} context\n * @returns {Function}\n */\nfunction bindFn(fn, context) {\n  return function boundFn() {\n    return fn.apply(context, arguments);\n  };\n}\n\n/**\n * @private\n * Simple way to create a manager with a default set of recognizers.\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\n\nvar Hammer =\n/*#__PURE__*/\nfunction () {\n  var Hammer =\n  /**\n    * @private\n    * @const {string}\n    */\n  function Hammer(element, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    return new Manager(element, _extends({\n      recognizers: [// RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]\n      [RotateRecognizer, {\n        enable: false\n      }], [PinchRecognizer, {\n        enable: false\n      }, ['rotate']], [SwipeRecognizer, {\n        direction: DIRECTION_HORIZONTAL\n      }], [PanRecognizer, {\n        direction: DIRECTION_HORIZONTAL\n      }, ['swipe']], [TapRecognizer], [TapRecognizer, {\n        event: 'doubletap',\n        taps: 2\n      }, ['tap']], [PressRecognizer]]\n    }, options));\n  };\n\n  Hammer.VERSION = \"2.0.15\";\n  Hammer.DIRECTION_ALL = DIRECTION_ALL;\n  Hammer.DIRECTION_DOWN = DIRECTION_DOWN;\n  Hammer.DIRECTION_LEFT = DIRECTION_LEFT;\n  Hammer.DIRECTION_RIGHT = DIRECTION_RIGHT;\n  Hammer.DIRECTION_UP = DIRECTION_UP;\n  Hammer.DIRECTION_HORIZONTAL = DIRECTION_HORIZONTAL;\n  Hammer.DIRECTION_VERTICAL = DIRECTION_VERTICAL;\n  Hammer.DIRECTION_NONE = DIRECTION_NONE;\n  Hammer.DIRECTION_DOWN = DIRECTION_DOWN;\n  Hammer.INPUT_START = INPUT_START;\n  Hammer.INPUT_MOVE = INPUT_MOVE;\n  Hammer.INPUT_END = INPUT_END;\n  Hammer.INPUT_CANCEL = INPUT_CANCEL;\n  Hammer.STATE_POSSIBLE = STATE_POSSIBLE;\n  Hammer.STATE_BEGAN = STATE_BEGAN;\n  Hammer.STATE_CHANGED = STATE_CHANGED;\n  Hammer.STATE_ENDED = STATE_ENDED;\n  Hammer.STATE_RECOGNIZED = STATE_RECOGNIZED;\n  Hammer.STATE_CANCELLED = STATE_CANCELLED;\n  Hammer.STATE_FAILED = STATE_FAILED;\n  Hammer.Manager = Manager;\n  Hammer.Input = Input;\n  Hammer.TouchAction = TouchAction;\n  Hammer.TouchInput = TouchInput;\n  Hammer.MouseInput = MouseInput;\n  Hammer.PointerEventInput = PointerEventInput;\n  Hammer.TouchMouseInput = TouchMouseInput;\n  Hammer.SingleTouchInput = SingleTouchInput;\n  Hammer.Recognizer = Recognizer;\n  Hammer.AttrRecognizer = AttrRecognizer;\n  Hammer.Tap = TapRecognizer;\n  Hammer.Pan = PanRecognizer;\n  Hammer.Swipe = SwipeRecognizer;\n  Hammer.Pinch = PinchRecognizer;\n  Hammer.Rotate = RotateRecognizer;\n  Hammer.Press = PressRecognizer;\n  Hammer.on = addEventListeners;\n  Hammer.off = removeEventListeners;\n  Hammer.each = each;\n  Hammer.merge = merge;\n  Hammer.extend = extend;\n  Hammer.bindFn = bindFn;\n  Hammer.assign = assign$1;\n  Hammer.inherit = inherit;\n  Hammer.bindFn = bindFn;\n  Hammer.prefixed = prefixed;\n  Hammer.toArray = toArray;\n  Hammer.inArray = inArray;\n  Hammer.uniqueArray = uniqueArray;\n  Hammer.splitStr = splitStr;\n  Hammer.boolOrFn = boolOrFn;\n  Hammer.hasParent = hasParent;\n  Hammer.addEventListeners = addEventListeners;\n  Hammer.removeEventListeners = removeEventListeners;\n  Hammer.defaults = defaults;\n  return Hammer;\n}();\n\nexport default Hammer;\nexport { INPUT_START, INPUT_MOVE, INPUT_END, INPUT_CANCEL, STATE_POSSIBLE, STATE_BEGAN, STATE_CHANGED, STATE_ENDED, STATE_RECOGNIZED, STATE_CANCELLED, STATE_FAILED, DIRECTION_NONE, DIRECTION_LEFT, DIRECTION_RIGHT, DIRECTION_UP, DIRECTION_DOWN, DIRECTION_HORIZONTAL, DIRECTION_VERTICAL, DIRECTION_ALL, Manager, Input, TouchAction, TouchInput, MouseInput, PointerEventInput, TouchMouseInput, SingleTouchInput, Recognizer, AttrRecognizer, TapRecognizer as Tap, PanRecognizer as Pan, SwipeRecognizer as Swipe, PinchRecognizer as Pinch, RotateRecognizer as Rotate, PressRecognizer as Press, addEventListeners as on, removeEventListeners as off, each, merge, extend, assign$1 as assign, inherit, bindFn, prefixed, toArray, inArray, uniqueArray, splitStr, boolOrFn, hasParent, addEventListeners, removeEventListeners, defaults };\n//# sourceMappingURL=hammer.esm.js.map\n","/*\nCopyright (c) 2017 NAVER Corp.\n@egjs/component project is licensed under the MIT license\n\n@egjs/component JavaScript library\nhttps://naver.github.io/egjs-component\n\n@version 2.1.2\n*/\n/**\n * Copyright (c) 2015 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nfunction isUndefined(value) {\n  return typeof value === \"undefined\";\n}\n/**\n * A class used to manage events in a component\n * @ko 컴포넌트의 이벤트을 관리할 수 있게 하는 클래스\n * @alias eg.Component\n */\n\n\nvar Component =\n/*#__PURE__*/\nfunction () {\n  var Component =\n  /*#__PURE__*/\n  function () {\n    /**\n    * Version info string\n    * @ko 버전정보 문자열\n    * @name VERSION\n    * @static\n    * @type {String}\n    * @example\n    * eg.Component.VERSION;  // ex) 2.0.0\n    * @memberof eg.Component\n    */\n\n    /**\n     * @support {\"ie\": \"7+\", \"ch\" : \"latest\", \"ff\" : \"latest\",  \"sf\" : \"latest\", \"edge\" : \"latest\", \"ios\" : \"7+\", \"an\" : \"2.1+ (except 3.x)\"}\n     */\n    function Component() {\n      this._eventHandler = {};\n      this.options = {};\n    }\n    /**\n     * Triggers a custom event.\n     * @ko 커스텀 이벤트를 발생시킨다\n     * @param {String} eventName The name of the custom event to be triggered <ko>발생할 커스텀 이벤트의 이름</ko>\n     * @param {Object} customEvent Event data to be sent when triggering a custom event <ko>커스텀 이벤트가 발생할 때 전달할 데이터</ko>\n     * @return {Boolean} Indicates whether the event has occurred. If the stop() method is called by a custom event handler, it will return false and prevent the event from occurring. <a href=\"https://github.com/naver/egjs-component/wiki/How-to-make-Component-event-design%3F\">Ref</a> <ko>이벤트 발생 여부. 커스텀 이벤트 핸들러에서 stop() 메서드를 호출하면 'false'를 반환하고 이벤트 발생을 중단한다. <a href=\"https://github.com/naver/egjs-component/wiki/How-to-make-Component-event-design%3F\">참고</a></ko>\n     * @example\n    class Some extends eg.Component {\n     some(){\n     \tif(this.trigger(\"beforeHi\")){ // When event call to stop return false.\n    \tthis.trigger(\"hi\");// fire hi event.\n     \t}\n     }\n    }\n    const some = new Some();\n    some.on(\"beforeHi\", (e) => {\n    if(condition){\n    \te.stop(); // When event call to stop, `hi` event not call.\n    }\n    });\n    some.on(\"hi\", (e) => {\n    // `currentTarget` is component instance.\n    console.log(some === e.currentTarget); // true\n    });\n    // If you want to more know event design. You can see article.\n    // https://github.com/naver/egjs-component/wiki/How-to-make-Component-event-design%3F\n     */\n\n\n    var _proto = Component.prototype;\n\n    _proto.trigger = function trigger(eventName, customEvent) {\n      if (customEvent === void 0) {\n        customEvent = {};\n      }\n\n      var handlerList = this._eventHandler[eventName] || [];\n      var hasHandlerList = handlerList.length > 0;\n\n      if (!hasHandlerList) {\n        return true;\n      } // If detach method call in handler in first time then handler list calls.\n\n\n      handlerList = handlerList.concat();\n      customEvent.eventType = eventName;\n      var isCanceled = false;\n      var arg = [customEvent];\n      var i = 0;\n\n      customEvent.stop = function () {\n        isCanceled = true;\n      };\n\n      customEvent.currentTarget = this;\n\n      for (var _len = arguments.length, restParam = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n        restParam[_key - 2] = arguments[_key];\n      }\n\n      if (restParam.length >= 1) {\n        arg = arg.concat(restParam);\n      }\n\n      for (i = 0; handlerList[i]; i++) {\n        handlerList[i].apply(this, arg);\n      }\n\n      return !isCanceled;\n    };\n    /**\n     * Executed event just one time.\n     * @ko 이벤트가 한번만 실행된다.\n     * @param {eventName} eventName The name of the event to be attached <ko>등록할 이벤트의 이름</ko>\n     * @param {Function} handlerToAttach The handler function of the event to be attached <ko>등록할 이벤트의 핸들러 함수</ko>\n     * @return {eg.Component} An instance of a component itself<ko>컴포넌트 자신의 인스턴스</ko>\n     * @example\n    class Some extends eg.Component {\n     hi() {\n       alert(\"hi\");\n     }\n     thing() {\n       this.once(\"hi\", this.hi);\n     }\n    }\n    var some = new Some();\n    some.thing();\n    some.trigger(\"hi\");\n    // fire alert(\"hi\");\n    some.trigger(\"hi\");\n    // Nothing happens\n     */\n\n\n    _proto.once = function once(eventName, handlerToAttach) {\n      if (typeof eventName === \"object\" && isUndefined(handlerToAttach)) {\n        var eventHash = eventName;\n        var i;\n\n        for (i in eventHash) {\n          this.once(i, eventHash[i]);\n        }\n\n        return this;\n      } else if (typeof eventName === \"string\" && typeof handlerToAttach === \"function\") {\n        var self = this;\n        this.on(eventName, function listener() {\n          for (var _len2 = arguments.length, arg = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n            arg[_key2] = arguments[_key2];\n          }\n\n          handlerToAttach.apply(self, arg);\n          self.off(eventName, listener);\n        });\n      }\n\n      return this;\n    };\n    /**\n     * Checks whether an event has been attached to a component.\n     * @ko 컴포넌트에 이벤트가 등록됐는지 확인한다.\n     * @param {String} eventName The name of the event to be attached <ko>등록 여부를 확인할 이벤트의 이름</ko>\n     * @return {Boolean} Indicates whether the event is attached. <ko>이벤트 등록 여부</ko>\n     * @example\n    class Some extends eg.Component {\n     some() {\n       this.hasOn(\"hi\");// check hi event.\n     }\n    }\n     */\n\n\n    _proto.hasOn = function hasOn(eventName) {\n      return !!this._eventHandler[eventName];\n    };\n    /**\n     * Attaches an event to a component.\n     * @ko 컴포넌트에 이벤트를 등록한다.\n     * @param {eventName} eventName The name of the event to be attached <ko>등록할 이벤트의 이름</ko>\n     * @param {Function} handlerToAttach The handler function of the event to be attached <ko>등록할 이벤트의 핸들러 함수</ko>\n     * @return {eg.Component} An instance of a component itself<ko>컴포넌트 자신의 인스턴스</ko>\n     * @example\n    class Some extends eg.Component {\n     hi() {\n       console.log(\"hi\");\n     }\n     some() {\n       this.on(\"hi\",this.hi); //attach event\n     }\n    }\n    */\n\n\n    _proto.on = function on(eventName, handlerToAttach) {\n      if (typeof eventName === \"object\" && isUndefined(handlerToAttach)) {\n        var eventHash = eventName;\n        var name;\n\n        for (name in eventHash) {\n          this.on(name, eventHash[name]);\n        }\n\n        return this;\n      } else if (typeof eventName === \"string\" && typeof handlerToAttach === \"function\") {\n        var handlerList = this._eventHandler[eventName];\n\n        if (isUndefined(handlerList)) {\n          this._eventHandler[eventName] = [];\n          handlerList = this._eventHandler[eventName];\n        }\n\n        handlerList.push(handlerToAttach);\n      }\n\n      return this;\n    };\n    /**\n     * Detaches an event from the component.\n     * @ko 컴포넌트에 등록된 이벤트를 해제한다\n     * @param {eventName} eventName The name of the event to be detached <ko>해제할 이벤트의 이름</ko>\n     * @param {Function} handlerToDetach The handler function of the event to be detached <ko>해제할 이벤트의 핸들러 함수</ko>\n     * @return {eg.Component} An instance of a component itself <ko>컴포넌트 자신의 인스턴스</ko>\n     * @example\n    class Some extends eg.Component {\n     hi() {\n       console.log(\"hi\");\n     }\n     some() {\n       this.off(\"hi\",this.hi); //detach event\n     }\n    }\n     */\n\n\n    _proto.off = function off(eventName, handlerToDetach) {\n      // All event detach.\n      if (isUndefined(eventName)) {\n        this._eventHandler = {};\n        return this;\n      } // All handler of specific event detach.\n\n\n      if (isUndefined(handlerToDetach)) {\n        if (typeof eventName === \"string\") {\n          this._eventHandler[eventName] = undefined;\n          return this;\n        } else {\n          var eventHash = eventName;\n          var name;\n\n          for (name in eventHash) {\n            this.off(name, eventHash[name]);\n          }\n\n          return this;\n        }\n      } // The handler of specific event detach.\n\n\n      var handlerList = this._eventHandler[eventName];\n\n      if (handlerList) {\n        var k;\n        var handlerFunction;\n\n        for (k = 0; (handlerFunction = handlerList[k]) !== undefined; k++) {\n          if (handlerFunction === handlerToDetach) {\n            handlerList = handlerList.splice(k, 1);\n            break;\n          }\n        }\n      }\n\n      return this;\n    };\n\n    return Component;\n  }();\n\n  Component.VERSION = \"2.1.2\";\n  return Component;\n}();\n\nexport default Component;\n//# sourceMappingURL=component.esm.js.map\n","/*\nCopyright (c) 2017 NAVER Corp.\n@egjs/axes project is licensed under the MIT license\n\n@egjs/axes JavaScript library\nhttps://github.com/naver/egjs-axes\n\n@version 2.5.10\n*/\nimport { DIRECTION_NONE, DIRECTION_LEFT, DIRECTION_RIGHT, DIRECTION_UP, DIRECTION_DOWN, DIRECTION_HORIZONTAL, DIRECTION_VERTICAL, DIRECTION_ALL, Manager, PointerEventInput, TouchMouseInput, TouchInput, MouseInput, Pan, Pinch } from '@egjs/hammerjs';\nimport Component from '@egjs/component';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\n\n/* global Reflect, Promise */\nvar extendStatics = Object.setPrototypeOf || {\n  __proto__: []\n} instanceof Array && function (d, b) {\n  d.__proto__ = b;\n} || function (d, b) {\n  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n};\n\nfunction __extends(d, b) {\n  extendStatics(d, b);\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\nvar __assign = Object.assign || function __assign(t) {\n  for (var s, i = 1, n = arguments.length; i < n; i++) {\n    s = arguments[i];\n\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n  }\n\n  return t;\n};\n\n/* eslint-disable no-new-func, no-nested-ternary */\nvar win;\n\nif (typeof window === \"undefined\") {\n  // window is undefined in node.js\n  win = {};\n} else {\n  win = window;\n}\n\n// export const DIRECTION_NONE = 1;\nvar FIXED_DIGIT = 100000;\nvar TRANSFORM = function () {\n  if (typeof document === \"undefined\") {\n    return \"\";\n  }\n\n  var bodyStyle = (document.head || document.getElementsByTagName(\"head\")[0]).style;\n  var target = [\"transform\", \"webkitTransform\", \"msTransform\", \"mozTransform\"];\n\n  for (var i = 0, len = target.length; i < len; i++) {\n    if (target[i] in bodyStyle) {\n      return target[i];\n    }\n  }\n\n  return \"\";\n}();\n\nfunction toArray(nodes) {\n  // const el = Array.prototype.slice.call(nodes);\n  // for IE8\n  var el = [];\n\n  for (var i = 0, len = nodes.length; i < len; i++) {\n    el.push(nodes[i]);\n  }\n\n  return el;\n}\nfunction $(param, multi) {\n  if (multi === void 0) {\n    multi = false;\n  }\n\n  var el;\n\n  if (typeof param === \"string\") {\n    // String (HTML, Selector)\n    // check if string is HTML tag format\n    var match = param.match(/^<([a-z]+)\\s*([^>]*)>/); // creating element\n\n    if (match) {\n      // HTML\n      var dummy = document.createElement(\"div\");\n      dummy.innerHTML = param;\n      el = toArray(dummy.childNodes);\n    } else {\n      // Selector\n      el = toArray(document.querySelectorAll(param));\n    }\n\n    if (!multi) {\n      el = el.length >= 1 ? el[0] : undefined;\n    }\n  } else if (param === win) {\n    // window\n    el = param;\n  } else if (param.nodeName && (param.nodeType === 1 || param.nodeType === 9)) {\n    // HTMLElement, Document\n    el = param;\n  } else if (\"jQuery\" in win && param instanceof jQuery || param.constructor.prototype.jquery) {\n    // jQuery\n    el = multi ? param.toArray() : param.get(0);\n  } else if (Array.isArray(param)) {\n    el = param.map(function (v) {\n      return $(v);\n    });\n\n    if (!multi) {\n      el = el.length >= 1 ? el[0] : undefined;\n    }\n  }\n\n  return el;\n}\nvar raf = win.requestAnimationFrame || win.webkitRequestAnimationFrame;\nvar caf = win.cancelAnimationFrame || win.webkitCancelAnimationFrame;\n\nif (raf && !caf) {\n  var keyInfo_1 = {};\n  var oldraf_1 = raf;\n\n  raf = function (callback) {\n    function wrapCallback(timestamp) {\n      if (keyInfo_1[key]) {\n        callback(timestamp);\n      }\n    }\n\n    var key = oldraf_1(wrapCallback);\n    keyInfo_1[key] = true;\n    return key;\n  };\n\n  caf = function (key) {\n    delete keyInfo_1[key];\n  };\n} else if (!(raf && caf)) {\n  raf = function (callback) {\n    return win.setTimeout(function () {\n      callback(win.performance && win.performance.now && win.performance.now() || new Date().getTime());\n    }, 16);\n  };\n\n  caf = win.clearTimeout;\n}\n/**\n * A polyfill for the window.requestAnimationFrame() method.\n * @see  https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame\n * @private\n */\n\n\nfunction requestAnimationFrame(fp) {\n  return raf(fp);\n}\n/**\n* A polyfill for the window.cancelAnimationFrame() method. It cancels an animation executed through a call to the requestAnimationFrame() method.\n* @param {Number} key −\tThe ID value returned through a call to the requestAnimationFrame() method. <ko>requestAnimationFrame() 메서드가 반환한 아이디 값</ko>\n* @see  https://developer.mozilla.org/en-US/docs/Web/API/Window/cancelAnimationFrame\n* @private\n*/\n\nfunction cancelAnimationFrame(key) {\n  caf(key);\n}\nfunction map(obj, callback) {\n  var tranformed = {};\n\n  for (var k in obj) {\n    k && (tranformed[k] = callback(obj[k], k));\n  }\n\n  return tranformed;\n}\nfunction filter(obj, callback) {\n  var filtered = {};\n\n  for (var k in obj) {\n    k && callback(obj[k], k) && (filtered[k] = obj[k]);\n  }\n\n  return filtered;\n}\nfunction every(obj, callback) {\n  for (var k in obj) {\n    if (k && !callback(obj[k], k)) {\n      return false;\n    }\n  }\n\n  return true;\n}\nfunction equal(target, base) {\n  return every(target, function (v, k) {\n    return v === base[k];\n  });\n}\nfunction toFixed(num) {\n  return Math.round(num * FIXED_DIGIT) / FIXED_DIGIT;\n}\n\nfunction getInsidePosition(destPos, range, circular, bounce) {\n  var toDestPos = destPos;\n  var targetRange = [circular[0] ? range[0] : bounce ? range[0] - bounce[0] : range[0], circular[1] ? range[1] : bounce ? range[1] + bounce[1] : range[1]];\n  toDestPos = Math.max(targetRange[0], toDestPos);\n  toDestPos = Math.min(targetRange[1], toDestPos);\n  return +toFixed(toDestPos);\n} // determine outside\n\nfunction isOutside(pos, range) {\n  return pos < range[0] || pos > range[1];\n}\nfunction getDuration(distance, deceleration) {\n  var duration = Math.sqrt(distance / deceleration * 2); // when duration is under 100, then value is zero\n\n  return duration < 100 ? 0 : duration;\n}\nfunction isCircularable(destPos, range, circular) {\n  return circular[1] && destPos > range[1] || circular[0] && destPos < range[0];\n}\nfunction getCirculatedPos(pos, range, circular, isAccurate) {\n  var toPos = pos;\n  var min = range[0];\n  var max = range[1];\n  var length = max - min;\n\n  if (circular[1] && pos > max) {\n    // right\n    toPos = (toPos - max) % length + min;\n  }\n\n  if (circular[0] && pos < min) {\n    // left\n    toPos = (toPos - min) % length + max;\n  }\n\n  return isAccurate ? toPos : +toFixed(toPos);\n}\n\nfunction minMax(value, min, max) {\n  return Math.max(Math.min(value, max), min);\n}\n\nvar AnimationManager =\n/*#__PURE__*/\nfunction () {\n  function AnimationManager(_a) {\n    var options = _a.options,\n        itm = _a.itm,\n        em = _a.em,\n        axm = _a.axm;\n    this.options = options;\n    this.itm = itm;\n    this.em = em;\n    this.axm = axm;\n    this.animationEnd = this.animationEnd.bind(this);\n  }\n\n  var __proto = AnimationManager.prototype;\n\n  __proto.getDuration = function (depaPos, destPos, wishDuration) {\n    var _this = this;\n\n    var duration;\n\n    if (typeof wishDuration !== \"undefined\") {\n      duration = wishDuration;\n    } else {\n      var durations_1 = map(destPos, function (v, k) {\n        return getDuration(Math.abs(Math.abs(v) - Math.abs(depaPos[k])), _this.options.deceleration);\n      });\n      duration = Object.keys(durations_1).reduce(function (max, v) {\n        return Math.max(max, durations_1[v]);\n      }, -Infinity);\n    }\n\n    return minMax(duration, this.options.minimumDuration, this.options.maximumDuration);\n  };\n\n  __proto.createAnimationParam = function (pos, duration, option) {\n    var depaPos = this.axm.get();\n    var destPos = pos;\n    var inputEvent = option && option.event || null;\n    return {\n      depaPos: depaPos,\n      destPos: destPos,\n      duration: minMax(duration, this.options.minimumDuration, this.options.maximumDuration),\n      delta: this.axm.getDelta(depaPos, destPos),\n      inputEvent: inputEvent,\n      input: option && option.input || null,\n      isTrusted: !!inputEvent,\n      done: this.animationEnd\n    };\n  };\n\n  __proto.grab = function (axes, option) {\n    if (this._animateParam && axes.length) {\n      var orgPos_1 = this.axm.get(axes);\n      var pos = this.axm.map(orgPos_1, function (v, opt) {\n        return getCirculatedPos(v, opt.range, opt.circular, false);\n      });\n\n      if (!every(pos, function (v, k) {\n        return orgPos_1[k] === v;\n      })) {\n        this.em.triggerChange(pos, false, orgPos_1, option, !!option);\n      }\n\n      this._animateParam = null;\n      this._raf && cancelAnimationFrame(this._raf);\n      this._raf = null;\n      this.em.triggerAnimationEnd(!!(option && option.event));\n    }\n  };\n\n  __proto.getEventInfo = function () {\n    if (this._animateParam && this._animateParam.input && this._animateParam.inputEvent) {\n      return {\n        input: this._animateParam.input,\n        event: this._animateParam.inputEvent\n      };\n    } else {\n      return null;\n    }\n  };\n\n  __proto.restore = function (option) {\n    var pos = this.axm.get();\n    var destPos = this.axm.map(pos, function (v, opt) {\n      return Math.min(opt.range[1], Math.max(opt.range[0], v));\n    });\n    this.animateTo(destPos, this.getDuration(pos, destPos), option);\n  };\n\n  __proto.animationEnd = function () {\n    var beforeParam = this.getEventInfo();\n    this._animateParam = null; // for Circular\n\n    var circularTargets = this.axm.filter(this.axm.get(), function (v, opt) {\n      return isCircularable(v, opt.range, opt.circular);\n    });\n    Object.keys(circularTargets).length > 0 && this.setTo(this.axm.map(circularTargets, function (v, opt) {\n      return getCirculatedPos(v, opt.range, opt.circular, false);\n    }));\n    this.itm.setInterrupt(false);\n    this.em.triggerAnimationEnd(!!beforeParam);\n\n    if (this.axm.isOutside()) {\n      this.restore(beforeParam);\n    } else {\n      this.finish(!!beforeParam);\n    }\n  };\n\n  __proto.finish = function (isTrusted) {\n    this._animateParam = null;\n    this.itm.setInterrupt(false);\n    this.em.triggerFinish(isTrusted);\n  };\n\n  __proto.animateLoop = function (param, complete) {\n    if (param.duration) {\n      this._animateParam = __assign({}, param);\n      var info_1 = this._animateParam;\n      var self_1 = this;\n      var prevPos_1 = info_1.depaPos;\n      info_1.startTime = new Date().getTime();\n\n      (function loop() {\n        self_1._raf = null;\n        var easingPer = self_1.easing((new Date().getTime() - info_1.startTime) / param.duration);\n        var toPos = map(info_1.depaPos, function (pos, key) {\n          return pos + info_1.delta[key] * easingPer;\n        });\n        var isCanceled = !self_1.em.triggerChange(toPos, false, prevPos_1);\n        prevPos_1 = map(toPos, function (v) {\n          return toFixed(v);\n        });\n\n        if (easingPer >= 1) {\n          var destPos = param.destPos;\n\n          if (!equal(destPos, self_1.axm.get(Object.keys(destPos)))) {\n            self_1.em.triggerChange(destPos, true, prevPos_1);\n          }\n\n          complete();\n          return;\n        } else if (isCanceled) {\n          self_1.finish(false);\n        } else {\n          // animationEnd\n          self_1._raf = requestAnimationFrame(loop);\n        }\n      })();\n    } else {\n      this.em.triggerChange(param.destPos, true);\n      complete();\n    }\n  };\n\n  __proto.getUserControll = function (param) {\n    var userWish = param.setTo();\n    userWish.destPos = this.axm.get(userWish.destPos);\n    userWish.duration = minMax(userWish.duration, this.options.minimumDuration, this.options.maximumDuration);\n    return userWish;\n  };\n\n  __proto.animateTo = function (destPos, duration, option) {\n    var _this = this;\n\n    var param = this.createAnimationParam(destPos, duration, option);\n\n    var depaPos = __assign({}, param.depaPos);\n\n    var retTrigger = this.em.triggerAnimationStart(param); // to control\n\n    var userWish = this.getUserControll(param); // You can't stop the 'animationStart' event when 'circular' is true.\n\n    if (!retTrigger && this.axm.every(userWish.destPos, function (v, opt) {\n      return isCircularable(v, opt.range, opt.circular);\n    })) {\n      console.warn(\"You can't stop the 'animation' event when 'circular' is true.\");\n    }\n\n    if (retTrigger && !equal(userWish.destPos, depaPos)) {\n      var inputEvent = option && option.event || null;\n      this.animateLoop({\n        depaPos: depaPos,\n        destPos: userWish.destPos,\n        duration: userWish.duration,\n        delta: this.axm.getDelta(depaPos, userWish.destPos),\n        isTrusted: !!inputEvent,\n        inputEvent: inputEvent,\n        input: option && option.input || null\n      }, function () {\n        return _this.animationEnd();\n      });\n    }\n  };\n\n  __proto.easing = function (p) {\n    return p > 1 ? 1 : this.options.easing(p);\n  };\n\n  __proto.setTo = function (pos, duration) {\n    if (duration === void 0) {\n      duration = 0;\n    }\n\n    var axes = Object.keys(pos);\n    this.grab(axes);\n    var orgPos = this.axm.get(axes);\n\n    if (equal(pos, orgPos)) {\n      return this;\n    }\n\n    this.itm.setInterrupt(true);\n    var movedPos = filter(pos, function (v, k) {\n      return orgPos[k] !== v;\n    });\n\n    if (!Object.keys(movedPos).length) {\n      return this;\n    }\n\n    movedPos = this.axm.map(movedPos, function (v, opt) {\n      var range = opt.range,\n          circular = opt.circular;\n\n      if (circular && (circular[0] || circular[1])) {\n        return v;\n      } else {\n        return getInsidePosition(v, range, circular);\n      }\n    });\n\n    if (equal(movedPos, orgPos)) {\n      return this;\n    }\n\n    if (duration > 0) {\n      this.animateTo(movedPos, duration);\n    } else {\n      this.em.triggerChange(movedPos);\n      this.finish(false);\n    }\n\n    return this;\n  };\n\n  __proto.setBy = function (pos, duration) {\n    if (duration === void 0) {\n      duration = 0;\n    }\n\n    return this.setTo(map(this.axm.get(Object.keys(pos)), function (v, k) {\n      return v + pos[k];\n    }), duration);\n  };\n\n  return AnimationManager;\n}();\n\nvar EventManager =\n/*#__PURE__*/\nfunction () {\n  function EventManager(axes) {\n    this.axes = axes;\n  }\n  /**\n   * This event is fired when a user holds an element on the screen of the device.\n   * @ko 사용자가 기기의 화면에 손을 대고 있을 때 발생하는 이벤트\n   * @name eg.Axes#hold\n   * @event\n   * @type {object} The object of data to be sent when the event is fired<ko>이벤트가 발생할 때 전달되는 데이터 객체</ko>\n   * @property {Object.<string, number>} pos coordinate <ko>좌표 정보</ko>\n   * @property {Object} input The instance of inputType where the event occurred<ko>이벤트가 발생한 inputType 인스턴스</ko>\n   * @property {Object} inputEvent The event object received from inputType <ko>inputType으로 부터 받은 이벤트 객체</ko>\n   * @property {Boolean} isTrusted Returns true if an event was generated by the user action, or false if it was caused by a script or API call <ko>사용자의 액션에 의해 이벤트가 발생하였으면 true, 스크립트나 API호출에 의해 발생하였을 경우에는 false를 반환한다.</ko>\n   *\n   * @example\n   * const axes = new eg.Axes({\n   *   \"x\": {\n   *      range: [0, 100]\n   *   },\n   *   \"zoom\": {\n   *      range: [50, 30]\n   *   }\n   * }).on(\"hold\", function(event) {\n   *   // event.pos\n   *   // event.input\n   *   // event.inputEvent\n   *   // isTrusted\n   * });\n   */\n\n\n  var __proto = EventManager.prototype;\n\n  __proto.triggerHold = function (pos, option) {\n    this.axes.trigger(\"hold\", {\n      pos: pos,\n      input: option.input || null,\n      inputEvent: option.event || null,\n      isTrusted: true\n    });\n  };\n  /**\n   * Specifies the coordinates to move after the 'change' event. It works when the holding value of the change event is true.\n   * @ko 'change' 이벤트 이후 이동할 좌표를 지정한다. change이벤트의 holding 값이 true일 경우에 동작한다\n   * @name set\n  * @function\n   * @param {Object.<string, number>} pos The coordinate to move to <ko>이동할 좌표</ko>\n   * @example\n   * const axes = new eg.Axes({\n   *   \"x\": {\n   *      range: [0, 100]\n   *   },\n   *   \"zoom\": {\n   *      range: [50, 30]\n   *   }\n   * }).on(\"change\", function(event) {\n   *   event.holding && event.set({x: 10});\n   * });\n   */\n\n  /** Specifies the animation coordinates to move after the 'release' or 'animationStart' events.\n   * @ko 'release' 또는 'animationStart' 이벤트 이후 이동할 좌표를 지정한다.\n   * @name setTo\n  * @function\n   * @param {Object.<string, number>} pos The coordinate to move to <ko>이동할 좌표</ko>\n   * @param {Number} [duration] Duration of the animation (unit: ms) <ko>애니메이션 진행 시간(단위: ms)</ko>\n   * @example\n   * const axes = new eg.Axes({\n   *   \"x\": {\n   *      range: [0, 100]\n   *   },\n   *   \"zoom\": {\n   *      range: [50, 30]\n   *   }\n   * }).on(\"animationStart\", function(event) {\n   *   event.setTo({x: 10}, 2000);\n   * });\n   */\n\n  /**\n   * This event is fired when a user release an element on the screen of the device.\n   * @ko 사용자가 기기의 화면에서 손을 뗐을 때 발생하는 이벤트\n   * @name eg.Axes#release\n   * @event\n   * @type {object} The object of data to be sent when the event is fired<ko>이벤트가 발생할 때 전달되는 데이터 객체</ko>\n   * @property {Object.<string, number>} depaPos The coordinates when releasing an element<ko>손을 뗐을 때의 좌표 </ko>\n   * @property {Object.<string, number>} destPos The coordinates to move to after releasing an element<ko>손을 뗀 뒤에 이동할 좌표</ko>\n   * @property {Object.<string, number>} delta  The movement variation of coordinate <ko>좌표의 변화량</ko>\n   * @property {Object} inputEvent The event object received from inputType <ko>inputType으로 부터 받은 이벤트 객체</ko>\n   * @property {Object} input The instance of inputType where the event occurred<ko>이벤트가 발생한 inputType 인스턴스</ko>\n   * @property {setTo} setTo Specifies the animation coordinates to move after the event <ko>이벤트 이후 이동할 애니메이션 좌표를 지정한다</ko>\n   * @property {Boolean} isTrusted Returns true if an event was generated by the user action, or false if it was caused by a script or API call <ko>사용자의 액션에 의해 이벤트가 발생하였으면 true, 스크립트나 API호출에 의해 발생하였을 경우에는 false를 반환한다.</ko>\n   *\n   * @example\n   * const axes = new eg.Axes({\n   *   \"x\": {\n   *      range: [0, 100]\n   *   },\n   *   \"zoom\": {\n   *      range: [50, 30]\n   *   }\n   * }).on(\"release\", function(event) {\n   *   // event.depaPos\n   *   // event.destPos\n   *   // event.delta\n   *   // event.input\n   *   // event.inputEvent\n   *   // event.setTo\n   *   // event.isTrusted\n   *\n   *   // if you want to change the animation coordinates to move after the 'release' event.\n   *   event.setTo({x: 10}, 2000);\n   * });\n   */\n\n\n  __proto.triggerRelease = function (param) {\n    param.setTo = this.createUserControll(param.destPos, param.duration);\n    this.axes.trigger(\"release\", param);\n  };\n  /**\n   * This event is fired when coordinate changes.\n   * @ko 좌표가 변경됐을 때 발생하는 이벤트\n   * @name eg.Axes#change\n   * @event\n   * @type {object} The object of data to be sent when the event is fired <ko>이벤트가 발생할 때 전달되는 데이터 객체</ko>\n   * @property {Object.<string, number>} pos  The coordinate <ko>좌표</ko>\n   * @property {Object.<string, number>} delta  The movement variation of coordinate <ko>좌표의 변화량</ko>\n   * @property {Boolean} holding Indicates whether a user holds an element on the screen of the device.<ko>사용자가 기기의 화면을 누르고 있는지 여부</ko>\n   * @property {Object} input The instance of inputType where the event occurred. If the value is changed by animation, it returns 'null'.<ko>이벤트가 발생한 inputType 인스턴스. 애니메이션에 의해 값이 변경될 경우에는 'null'을 반환한다.</ko>\n   * @property {Object} inputEvent The event object received from inputType. If the value is changed by animation, it returns 'null'.<ko>inputType으로 부터 받은 이벤트 객체. 애니메이션에 의해 값이 변경될 경우에는 'null'을 반환한다.</ko>\n   * @property {set} set Specifies the coordinates to move after the event. It works when the holding value is true <ko>이벤트 이후 이동할 좌표를 지정한다. holding 값이 true일 경우에 동작한다.</ko>\n   * @property {Boolean} isTrusted Returns true if an event was generated by the user action, or false if it was caused by a script or API call <ko>사용자의 액션에 의해 이벤트가 발생하였으면 true, 스크립트나 API호출에 의해 발생하였을 경우에는 false를 반환한다.</ko>\n   *\n   * @example\n   * const axes = new eg.Axes({\n   *   \"x\": {\n   *      range: [0, 100]\n   *   },\n   *   \"zoom\": {\n   *      range: [50, 30]\n   *   }\n   * }).on(\"change\", function(event) {\n   *   // event.pos\n   *   // event.delta\n   *   // event.input\n   *   // event.inputEvent\n   *   // event.holding\n   *   // event.set\n   *   // event.isTrusted\n   *\n   *   // if you want to change the coordinates to move after the 'change' event.\n   *   // it works when the holding value of the change event is true.\n   *   event.holding && event.set({x: 10});\n   * });\n   */\n\n\n  __proto.triggerChange = function (pos, isAccurate, depaPos, option, holding) {\n    if (holding === void 0) {\n      holding = false;\n    }\n\n    var am = this.am;\n    var axm = am.axm;\n    var eventInfo = am.getEventInfo();\n    var moveTo = axm.moveTo(pos, isAccurate, depaPos);\n    var inputEvent = option && option.event || eventInfo && eventInfo.event || null;\n    var param = {\n      pos: moveTo.pos,\n      delta: moveTo.delta,\n      holding: holding,\n      inputEvent: inputEvent,\n      isTrusted: !!inputEvent,\n      input: option && option.input || eventInfo && eventInfo.input || null,\n      set: inputEvent ? this.createUserControll(moveTo.pos) : function () {}\n    };\n    var result = this.axes.trigger(\"change\", param);\n    inputEvent && axm.set(param.set()[\"destPos\"]);\n    return result;\n  };\n  /**\n   * This event is fired when animation starts.\n   * @ko 에니메이션이 시작할 때 발생한다.\n   * @name eg.Axes#animationStart\n   * @event\n   * @type {object} The object of data to be sent when the event is fired<ko>이벤트가 발생할 때 전달되는 데이터 객체</ko>\n   * @property {Object.<string, number>} depaPos The coordinates when animation starts<ko>애니메이션이 시작 되었을 때의 좌표 </ko>\n   * @property {Object.<string, number>} destPos The coordinates to move to. If you change this value, you can run the animation<ko>이동할 좌표. 이값을 변경하여 애니메이션을 동작시킬수 있다</ko>\n   * @property {Object.<string, number>} delta  The movement variation of coordinate <ko>좌표의 변화량</ko>\n   * @property {Number} duration Duration of the animation (unit: ms). If you change this value, you can control the animation duration time.<ko>애니메이션 진행 시간(단위: ms). 이값을 변경하여 애니메이션의 이동시간을 조절할 수 있다.</ko>\n   * @property {Object} input The instance of inputType where the event occurred. If the value is changed by animation, it returns 'null'.<ko>이벤트가 발생한 inputType 인스턴스. 애니메이션에 의해 값이 변경될 경우에는 'null'을 반환한다.</ko>\n   * @property {Object} inputEvent The event object received from inputType <ko>inputType으로 부터 받은 이벤트 객체</ko>\n   * @property {setTo} setTo Specifies the animation coordinates to move after the event <ko>이벤트 이후 이동할 애니메이션 좌표를 지정한다</ko>\n   * @property {Boolean} isTrusted Returns true if an event was generated by the user action, or false if it was caused by a script or API call <ko>사용자의 액션에 의해 이벤트가 발생하였으면 true, 스크립트나 API호출에 의해 발생하였을 경우에는 false를 반환한다.</ko>\n   *\n   * @example\n   * const axes = new eg.Axes({\n   *   \"x\": {\n   *      range: [0, 100]\n   *   },\n   *   \"zoom\": {\n   *      range: [50, 30]\n   *   }\n   * }).on(\"release\", function(event) {\n   *   // event.depaPos\n   *   // event.destPos\n   *   // event.delta\n   *   // event.input\n   *   // event.inputEvent\n   *   // event.setTo\n   *   // event.isTrusted\n   *\n   *   // if you want to change the animation coordinates to move after the 'animationStart' event.\n   *   event.setTo({x: 10}, 2000);\n   * });\n   */\n\n\n  __proto.triggerAnimationStart = function (param) {\n    param.setTo = this.createUserControll(param.destPos, param.duration);\n    return this.axes.trigger(\"animationStart\", param);\n  };\n  /**\n   * This event is fired when animation ends.\n   * @ko 에니메이션이 끝났을 때 발생한다.\n   * @name eg.Axes#animationEnd\n   * @event\n   * @type {object} The object of data to be sent when the event is fired<ko>이벤트가 발생할 때 전달되는 데이터 객체</ko>\n   * @property {Boolean} isTrusted Returns true if an event was generated by the user action, or false if it was caused by a script or API call <ko>사용자의 액션에 의해 이벤트가 발생하였으면 true, 스크립트나 API호출에 의해 발생하였을 경우에는 false를 반환한다.</ko>\n   *\n   * @example\n   * const axes = new eg.Axes({\n   *   \"x\": {\n   *      range: [0, 100]\n   *   },\n   *   \"zoom\": {\n   *      range: [50, 30]\n   *   }\n   * }).on(\"animationEnd\", function(event) {\n   *   // event.isTrusted\n   * });\n   */\n\n\n  __proto.triggerAnimationEnd = function (isTrusted) {\n    if (isTrusted === void 0) {\n      isTrusted = false;\n    }\n\n    this.axes.trigger(\"animationEnd\", {\n      isTrusted: isTrusted\n    });\n  };\n  /**\n   * This event is fired when all actions have been completed.\n   * @ko 에니메이션이 끝났을 때 발생한다.\n   * @name eg.Axes#finish\n   * @event\n   * @type {object} The object of data to be sent when the event is fired<ko>이벤트가 발생할 때 전달되는 데이터 객체</ko>\n   * @property {Boolean} isTrusted Returns true if an event was generated by the user action, or false if it was caused by a script or API call <ko>사용자의 액션에 의해 이벤트가 발생하였으면 true, 스크립트나 API호출에 의해 발생하였을 경우에는 false를 반환한다.</ko>\n   *\n   * @example\n   * const axes = new eg.Axes({\n   *   \"x\": {\n   *      range: [0, 100]\n   *   },\n   *   \"zoom\": {\n   *      range: [50, 30]\n   *   }\n   * }).on(\"finish\", function(event) {\n   *   // event.isTrusted\n   * });\n   */\n\n\n  __proto.triggerFinish = function (isTrusted) {\n    if (isTrusted === void 0) {\n      isTrusted = false;\n    }\n\n    this.axes.trigger(\"finish\", {\n      isTrusted: isTrusted\n    });\n  };\n\n  __proto.createUserControll = function (pos, duration) {\n    if (duration === void 0) {\n      duration = 0;\n    } // to controll\n\n\n    var userControl = {\n      destPos: __assign({}, pos),\n      duration: duration\n    };\n    return function (toPos, userDuration) {\n      toPos && (userControl.destPos = __assign({}, toPos));\n      userDuration !== undefined && (userControl.duration = userDuration);\n      return userControl;\n    };\n  };\n\n  __proto.setAnimationManager = function (am) {\n    this.am = am;\n  };\n\n  __proto.destroy = function () {\n    this.axes.off();\n  };\n\n  return EventManager;\n}();\n\nvar InterruptManager =\n/*#__PURE__*/\nfunction () {\n  function InterruptManager(options) {\n    this.options = options;\n    this._prevented = false; //  check whether the animation event was prevented\n  }\n\n  var __proto = InterruptManager.prototype;\n\n  __proto.isInterrupting = function () {\n    // when interruptable is 'true', return value is always 'true'.\n    return this.options.interruptable || this._prevented;\n  };\n\n  __proto.isInterrupted = function () {\n    return !this.options.interruptable && this._prevented;\n  };\n\n  __proto.setInterrupt = function (prevented) {\n    !this.options.interruptable && (this._prevented = prevented);\n  };\n\n  return InterruptManager;\n}();\n\nvar AxisManager =\n/*#__PURE__*/\nfunction () {\n  function AxisManager(axis, options) {\n    var _this = this;\n\n    this.axis = axis;\n    this.options = options;\n\n    this._complementOptions();\n\n    this._pos = Object.keys(this.axis).reduce(function (acc, v) {\n      acc[v] = _this.axis[v].range[0];\n      return acc;\n    }, {});\n  }\n  /**\n     * set up 'css' expression\n     * @private\n     */\n\n\n  var __proto = AxisManager.prototype;\n\n  __proto._complementOptions = function () {\n    var _this = this;\n\n    Object.keys(this.axis).forEach(function (axis) {\n      _this.axis[axis] = __assign({\n        range: [0, 100],\n        bounce: [0, 0],\n        circular: [false, false]\n      }, _this.axis[axis]);\n      [\"bounce\", \"circular\"].forEach(function (v) {\n        var axisOption = _this.axis;\n        var key = axisOption[axis][v];\n\n        if (/string|number|boolean/.test(typeof key)) {\n          axisOption[axis][v] = [key, key];\n        }\n      });\n    });\n  };\n\n  __proto.getDelta = function (depaPos, destPos) {\n    var fullDepaPos = this.get(depaPos);\n    return map(this.get(destPos), function (v, k) {\n      return v - fullDepaPos[k];\n    });\n  };\n\n  __proto.get = function (axes) {\n    var _this = this;\n\n    if (axes && Array.isArray(axes)) {\n      return axes.reduce(function (acc, v) {\n        if (v && v in _this._pos) {\n          acc[v] = _this._pos[v];\n        }\n\n        return acc;\n      }, {});\n    } else {\n      return __assign({}, this._pos, axes || {});\n    }\n  };\n\n  __proto.moveTo = function (pos, isAccurate, depaPos) {\n    if (depaPos === void 0) {\n      depaPos = this._pos;\n    }\n\n    var delta = map(this._pos, function (v, key) {\n      return key in pos && key in depaPos ? pos[key] - depaPos[key] : 0;\n    });\n    this.set(this.map(pos, function (v, opt) {\n      return opt ? getCirculatedPos(v, opt.range, opt.circular, isAccurate) : 0;\n    }));\n    return {\n      pos: __assign({}, this._pos),\n      delta: delta\n    };\n  };\n\n  __proto.set = function (pos) {\n    for (var k in pos) {\n      if (k && k in this._pos) {\n        this._pos[k] = pos[k];\n      }\n    }\n  };\n\n  __proto.every = function (pos, callback) {\n    var axisOptions = this.axis;\n    return every(pos, function (value, key) {\n      return callback(value, axisOptions[key], key);\n    });\n  };\n\n  __proto.filter = function (pos, callback) {\n    var axisOptions = this.axis;\n    return filter(pos, function (value, key) {\n      return callback(value, axisOptions[key], key);\n    });\n  };\n\n  __proto.map = function (pos, callback) {\n    var axisOptions = this.axis;\n    return map(pos, function (value, key) {\n      return callback(value, axisOptions[key], key);\n    });\n  };\n\n  __proto.isOutside = function (axes) {\n    return !this.every(axes ? this.get(axes) : this._pos, function (v, opt) {\n      return !isOutside(v, opt.range);\n    });\n  };\n\n  return AxisManager;\n}();\n\nvar InputObserver =\n/*#__PURE__*/\nfunction () {\n  function InputObserver(_a) {\n    var options = _a.options,\n        itm = _a.itm,\n        em = _a.em,\n        axm = _a.axm,\n        am = _a.am;\n    this.isOutside = false;\n    this.moveDistance = null;\n    this.isStopped = false;\n    this.options = options;\n    this.itm = itm;\n    this.em = em;\n    this.axm = axm;\n    this.am = am;\n  } // when move pointer is held in outside\n\n\n  var __proto = InputObserver.prototype;\n\n  __proto.atOutside = function (pos) {\n    var _this = this;\n\n    if (this.isOutside) {\n      return this.axm.map(pos, function (v, opt) {\n        var tn = opt.range[0] - opt.bounce[0];\n        var tx = opt.range[1] + opt.bounce[1];\n        return v > tx ? tx : v < tn ? tn : v;\n      });\n    } else {\n      // when start pointer is held in inside\n      // get a initialization slope value to prevent smooth animation.\n      var initSlope_1 = this.am.easing(0.00001) / 0.00001;\n      return this.axm.map(pos, function (v, opt) {\n        var min = opt.range[0];\n        var max = opt.range[1];\n        var out = opt.bounce;\n        var circular = opt.circular;\n\n        if (circular && (circular[0] || circular[1])) {\n          return v;\n        } else if (v < min) {\n          // left\n          return min - _this.am.easing((min - v) / (out[0] * initSlope_1)) * out[0];\n        } else if (v > max) {\n          // right\n          return max + _this.am.easing((v - max) / (out[1] * initSlope_1)) * out[1];\n        }\n\n        return v;\n      });\n    }\n  };\n\n  __proto.get = function (input) {\n    return this.axm.get(input.axes);\n  };\n\n  __proto.hold = function (input, event) {\n    if (this.itm.isInterrupted() || !input.axes.length) {\n      return;\n    }\n\n    var changeOption = {\n      input: input,\n      event: event\n    };\n    this.isStopped = false;\n    this.itm.setInterrupt(true);\n    this.am.grab(input.axes, changeOption);\n    !this.moveDistance && this.em.triggerHold(this.axm.get(), changeOption);\n    this.isOutside = this.axm.isOutside(input.axes);\n    this.moveDistance = this.axm.get(input.axes);\n  };\n\n  __proto.change = function (input, event, offset) {\n    if (this.isStopped || !this.itm.isInterrupting() || this.axm.every(offset, function (v) {\n      return v === 0;\n    })) {\n      return;\n    }\n\n    var depaPos = this.moveDistance || this.axm.get(input.axes);\n    var destPos; // for outside logic\n\n    destPos = map(depaPos, function (v, k) {\n      return v + (offset[k] || 0);\n    });\n    this.moveDistance && (this.moveDistance = destPos); // from outside to inside\n\n    if (this.isOutside && this.axm.every(depaPos, function (v, opt) {\n      return !isOutside(v, opt.range);\n    })) {\n      this.isOutside = false;\n    }\n\n    destPos = this.atOutside(destPos);\n    var isCanceled = !this.em.triggerChange(destPos, false, depaPos, {\n      input: input,\n      event: event\n    }, true);\n\n    if (isCanceled) {\n      this.isStopped = true;\n      this.moveDistance = null;\n      this.am.finish(false);\n    }\n  };\n\n  __proto.release = function (input, event, offset, inputDuration) {\n    if (this.isStopped || !this.itm.isInterrupting() || !this.moveDistance) {\n      return;\n    }\n\n    var pos = this.axm.get(input.axes);\n    var depaPos = this.axm.get();\n    var destPos = this.axm.get(this.axm.map(offset, function (v, opt, k) {\n      if (opt.circular && (opt.circular[0] || opt.circular[1])) {\n        return pos[k] + v;\n      } else {\n        return getInsidePosition(pos[k] + v, opt.range, opt.circular, opt.bounce);\n      }\n    }));\n    var duration = this.am.getDuration(destPos, pos, inputDuration);\n\n    if (duration === 0) {\n      destPos = __assign({}, depaPos);\n    } // prepare params\n\n\n    var param = {\n      depaPos: depaPos,\n      destPos: destPos,\n      duration: duration,\n      delta: this.axm.getDelta(depaPos, destPos),\n      inputEvent: event,\n      input: input,\n      isTrusted: true\n    };\n    this.em.triggerRelease(param);\n    this.moveDistance = null; // to contol\n\n    var userWish = this.am.getUserControll(param);\n    var isEqual = equal(userWish.destPos, depaPos);\n    var changeOption = {\n      input: input,\n      event: event\n    };\n\n    if (isEqual || userWish.duration === 0) {\n      !isEqual && this.em.triggerChange(userWish.destPos, false, depaPos, changeOption, true);\n      this.itm.setInterrupt(false);\n\n      if (this.axm.isOutside()) {\n        this.am.restore(changeOption);\n      } else {\n        this.em.triggerFinish(true);\n      }\n    } else {\n      this.am.animateTo(userWish.destPos, userWish.duration, changeOption);\n    }\n  };\n\n  return InputObserver;\n}();\n\n/**\n * @typedef {Object} AxisOption The Axis information. The key of the axis specifies the name to use as the logical virtual coordinate system.\n * @ko 축 정보. 축의 키는 논리적인 가상 좌표계로 사용할 이름을 지정한다.\n * @property {Number[]} [range] The coordinate of range <ko>좌표 범위</ko>\n * @property {Number} [range.0=0] The coordinate of the minimum <ko>최소 좌표</ko>\n * @property {Number} [range.1=0] The coordinate of the maximum <ko>최대 좌표</ko>\n * @property {Number[]} [bounce] The size of bouncing area. The coordinates can exceed the coordinate area as much as the bouncing area based on user action. If the coordinates does not exceed the bouncing area when an element is dragged, the coordinates where bouncing effects are applied are retuned back into the coordinate area<ko>바운스 영역의 크기. 사용자의 동작에 따라 좌표가 좌표 영역을 넘어 바운스 영역의 크기만큼 더 이동할 수 있다. 사용자가 끌어다 놓는 동작을 했을 때 좌표가 바운스 영역에 있으면, 바운스 효과가 적용된 좌표가 다시 좌표 영역 안으로 들어온다</ko>\n * @property {Number} [bounce.0=0] The size of coordinate of the minimum area <ko>최소 좌표 바운스 영역의 크기</ko>\n * @property {Number} [bounce.1=0] The size of coordinate of the maximum area <ko>최대 좌표 바운스 영역의 크기</ko>\n * @property {Boolean[]} [circular] Indicates whether a circular element is available. If it is set to \"true\" and an element is dragged outside the coordinate area, the element will appear on the other side.<ko>순환 여부. 'true'로 설정한 방향의 좌표 영역 밖으로 엘리먼트가 이동하면 반대 방향에서 엘리먼트가 나타난다</ko>\n * @property {Boolean} [circular.0=false] Indicates whether to circulate to the coordinate of the minimum <ko>최소 좌표 방향의 순환 여부</ko>\n * @property {Boolean} [circular.1=false] Indicates whether to circulate to the coordinate of the maximum <ko>최대 좌표 방향의 순환 여부</ko>\n**/\n\n/**\n * @typedef {Object} AxesOption The option object of the eg.Axes module\n * @ko eg.Axes 모듈의 옵션 객체\n * @property {Function} [easing=easing.easeOutCubic] The easing function to apply to an animation <ko>애니메이션에 적용할 easing 함수</ko>\n * @property {Number} [maximumDuration=Infinity] Maximum duration of the animation <ko>가속도에 의해 애니메이션이 동작할 때의 최대 좌표 이동 시간</ko>\n * @property {Number} [minimumDuration=0] Minimum duration of the animation <ko>가속도에 의해 애니메이션이 동작할 때의 최소 좌표 이동 시간</ko>\n * @property {Number} [deceleration=0.0006] Deceleration of the animation where acceleration is manually enabled by user. A higher value indicates shorter running time. <ko>사용자의 동작으로 가속도가 적용된 애니메이션의 감속도. 값이 높을수록 애니메이션 실행 시간이 짧아진다</ko>\n * @property {Boolean} [interruptable=true] Indicates whether an animation is interruptible.<br>- true: It can be paused or stopped by user action or the API.<br>- false: It cannot be paused or stopped by user action or the API while it is running.<ko>진행 중인 애니메이션 중지 가능 여부.<br>- true: 사용자의 동작이나 API로 애니메이션을 중지할 수 있다.<br>- false: 애니메이션이 진행 중일 때는 사용자의 동작이나 API가 적용되지 않는다</ko>\n**/\n\n/**\n * @class eg.Axes\n * @classdesc A module used to change the information of user action entered by various input devices such as touch screen or mouse into the logical virtual coordinates. You can easily create a UI that responds to user actions.\n * @ko 터치 입력 장치나 마우스와 같은 다양한 입력 장치를 통해 전달 받은 사용자의 동작을 논리적인 가상 좌표로 변경하는 모듈이다. 사용자 동작에 반응하는 UI를 손쉽게 만들수 있다.\n * @extends eg.Component\n *\n * @param {Object.<string, AxisOption>} axis Axis information managed by eg.Axes. The key of the axis specifies the name to use as the logical virtual coordinate system.  <ko>eg.Axes가 관리하는 축 정보. 축의 키는 논리적인 가상 좌표계로 사용할 이름을 지정한다.</ko>\n * @param {AxesOption} [options] The option object of the eg.Axes module<ko>eg.Axes 모듈의 옵션 객체</ko>\n * @param {Object.<string, number>} [startPos] The coordinates to be moved when creating an instance. not triggering change event.<ko>인스턴스 생성시 이동할 좌표, change 이벤트는 발생하지 않음.</ko>\n *\n * @support {\"ie\": \"10+\", \"ch\" : \"latest\", \"ff\" : \"latest\",  \"sf\" : \"latest\", \"edge\" : \"latest\", \"ios\" : \"7+\", \"an\" : \"2.3+ (except 3.x)\"}\n * @example\n *\n * // 1. Initialize eg.Axes\n * const axes = new eg.Axes({\n *\tsomething1: {\n *\t\trange: [0, 150],\n *\t\tbounce: 50\n *\t},\n *\tsomething2: {\n *\t\trange: [0, 200],\n *\t\tbounce: 100\n *\t},\n *\tsomethingN: {\n *\t\trange: [1, 10],\n *\t}\n * }, {\n *  deceleration : 0.0024\n * });\n *\n * // 2. attach event handler\n * axes.on({\n *\t\"hold\" : function(evt) {\n *\t},\n *\t\"release\" : function(evt) {\n *\t},\n *\t\"animationStart\" : function(evt) {\n *\t},\n *\t\"animationEnd\" : function(evt) {\n *\t},\n *\t\"change\" : function(evt) {\n *\t}\n * });\n *\n * // 3. Initialize inputTypes\n * const panInputArea = new eg.Axes.PanInput(\"#area\", {\n *\tscale: [0.5, 1]\n * });\n * const panInputHmove = new eg.Axes.PanInput(\"#hmove\");\n * const panInputVmove = new eg.Axes.PanInput(\"#vmove\");\n * const pinchInputArea = new eg.Axes.PinchInput(\"#area\", {\n *\tscale: 1.5\n * });\n *\n * // 4. Connect eg.Axes and InputTypes\n * // [PanInput] When the mouse or touchscreen is down and moved.\n * // Connect the 'something2' axis to the mouse or touchscreen x position and\n * // connect the 'somethingN' axis to the mouse or touchscreen y position.\n * axes.connect([\"something2\", \"somethingN\"], panInputArea); // or axes.connect(\"something2 somethingN\", panInputArea);\n *\n * // Connect only one 'something1' axis to the mouse or touchscreen x position.\n * axes.connect([\"something1\"], panInputHmove); // or axes.connect(\"something1\", panInputHmove);\n *\n * // Connect only one 'something2' axis to the mouse or touchscreen y position.\n * axes.connect([\"\", \"something2\"], panInputVmove); // or axes.connect(\" something2\", panInputVmove);\n *\n * // [PinchInput] Connect 'something2' axis when two pointers are moving toward (zoom-in) or away from each other (zoom-out).\n * axes.connect(\"something2\", pinchInputArea);\n */\n\nvar Axes =\n/*#__PURE__*/\nfunction (_super) {\n  __extends(Axes, _super);\n\n  function Axes(axis, options, startPos) {\n    if (axis === void 0) {\n      axis = {};\n    }\n\n    var _this = _super.call(this) || this;\n\n    _this.axis = axis;\n    _this._inputs = [];\n    _this.options = __assign({\n      easing: function easeOutCubic(x) {\n        return 1 - Math.pow(1 - x, 3);\n      },\n      interruptable: true,\n      maximumDuration: Infinity,\n      minimumDuration: 0,\n      deceleration: 0.0006\n    }, options);\n    _this.itm = new InterruptManager(_this.options);\n    _this.axm = new AxisManager(_this.axis, _this.options);\n    _this.em = new EventManager(_this);\n    _this.am = new AnimationManager(_this);\n    _this.io = new InputObserver(_this);\n\n    _this.em.setAnimationManager(_this.am);\n\n    startPos && _this.em.triggerChange(startPos);\n    return _this;\n  }\n  /**\n   * Connect the axis of eg.Axes to the inputType.\n   * @ko eg.Axes의 축과 inputType을 연결한다\n   * @method eg.Axes#connect\n   * @param {(String[]|String)} axes The name of the axis to associate with inputType <ko>inputType과 연결할 축의 이름</ko>\n   * @param {Object} inputType The inputType instance to associate with the axis of eg.Axes <ko>eg.Axes의 축과 연결할 inputType 인스턴스<ko>\n   * @return {eg.Axes} An instance of a module itself <ko>모듈 자신의 인스턴스</ko>\n   * @example\n   * const axes = new eg.Axes({\n   *   \"x\": {\n   *      range: [0, 100]\n   *   },\n   *   \"xOther\": {\n   *      range: [-100, 100]\n   *   }\n   * });\n   *\n   * axes.connect(\"x\", new eg.Axes.PanInput(\"#area1\"))\n   *    .connect(\"x xOther\", new eg.Axes.PanInput(\"#area2\"))\n   *    .connect(\" xOther\", new eg.Axes.PanInput(\"#area3\"))\n   *    .connect([\"x\"], new eg.Axes.PanInput(\"#area4\"))\n   *    .connect([\"xOther\", \"x\"], new eg.Axes.PanInput(\"#area5\"))\n   *    .connect([\"\", \"xOther\"], new eg.Axes.PanInput(\"#area6\"));\n   */\n\n\n  var __proto = Axes.prototype;\n\n  __proto.connect = function (axes, inputType) {\n    var mapped;\n\n    if (typeof axes === \"string\") {\n      mapped = axes.split(\" \");\n    } else {\n      mapped = axes.concat();\n    } // check same instance\n\n\n    if (~this._inputs.indexOf(inputType)) {\n      this.disconnect(inputType);\n    } // check same element in hammer type for share\n\n\n    if (\"hammer\" in inputType) {\n      var targets = this._inputs.filter(function (v) {\n        return v.hammer && v.element === inputType.element;\n      });\n\n      if (targets.length) {\n        inputType.hammer = targets[0].hammer;\n      }\n    }\n\n    inputType.mapAxes(mapped);\n    inputType.connect(this.io);\n\n    this._inputs.push(inputType);\n\n    return this;\n  };\n  /**\n   * Disconnect the axis of eg.Axes from the inputType.\n   * @ko eg.Axes의 축과 inputType의 연결을 끊는다.\n   * @method eg.Axes#disconnect\n   * @param {Object} [inputType] An inputType instance associated with the axis of eg.Axes <ko>eg.Axes의 축과 연결한 inputType 인스턴스<ko>\n   * @return {eg.Axes} An instance of a module itself <ko>모듈 자신의 인스턴스</ko>\n   * @example\n   * const axes = new eg.Axes({\n   *   \"x\": {\n   *      range: [0, 100]\n   *   },\n   *   \"xOther\": {\n   *      range: [-100, 100]\n   *   }\n   * });\n   *\n   * const input1 = new eg.Axes.PanInput(\"#area1\");\n   * const input2 = new eg.Axes.PanInput(\"#area2\");\n   * const input3 = new eg.Axes.PanInput(\"#area3\");\n   *\n   * axes.connect(\"x\", input1);\n   *    .connect(\"x xOther\", input2)\n   *    .connect([\"xOther\", \"x\"], input3);\n   *\n   * axes.disconnect(input1); // disconnects input1\n   * axes.disconnect(); // disconnects all of them\n   */\n\n\n  __proto.disconnect = function (inputType) {\n    if (inputType) {\n      var index = this._inputs.indexOf(inputType);\n\n      if (index >= 0) {\n        this._inputs[index].disconnect();\n\n        this._inputs.splice(index, 1);\n      }\n    } else {\n      this._inputs.forEach(function (v) {\n        return v.disconnect();\n      });\n\n      this._inputs = [];\n    }\n\n    return this;\n  };\n  /**\n   * Returns the current position of the coordinates.\n   * @ko 좌표의 현재 위치를 반환한다\n   * @method eg.Axes#get\n   * @param {Object} [axes] The names of the axis <ko>축 이름들</ko>\n   * @return {Object.<string, number>} Axis coordinate information <ko>축 좌표 정보</ko>\n   * @example\n   * const axes = new eg.Axes({\n   *   \"x\": {\n   *      range: [0, 100]\n   *   },\n   *   \"xOther\": {\n   *      range: [-100, 100]\n   *   },\n   * \t \"zoom\": {\n   *      range: [50, 30]\n   *   }\n   * });\n   *\n   * axes.get(); // {\"x\": 0, \"xOther\": -100, \"zoom\": 50}\n   * axes.get([\"x\", \"zoom\"]); // {\"x\": 0, \"zoom\": 50}\n   */\n\n\n  __proto.get = function (axes) {\n    return this.axm.get(axes);\n  };\n  /**\n   * Moves an axis to specific coordinates.\n   * @ko 좌표를 이동한다.\n   * @method eg.Axes#setTo\n   * @param {Object.<string, number>} pos The coordinate to move to <ko>이동할 좌표</ko>\n   * @param {Number} [duration=0] Duration of the animation (unit: ms) <ko>애니메이션 진행 시간(단위: ms)</ko>\n   * @return {eg.Axes} An instance of a module itself <ko>모듈 자신의 인스턴스</ko>\n   * @example\n   * const axes = new eg.Axes({\n   *   \"x\": {\n   *      range: [0, 100]\n   *   },\n   *   \"xOther\": {\n   *      range: [-100, 100]\n   *   },\n   * \t \"zoom\": {\n   *      range: [50, 30]\n   *   }\n   * });\n   *\n   * axes.setTo({\"x\": 30, \"zoom\": 60});\n   * axes.get(); // {\"x\": 30, \"xOther\": -100, \"zoom\": 60}\n   *\n   * axes.setTo({\"x\": 100, \"xOther\": 60}, 1000); // animatation\n   *\n   * // after 1000 ms\n   * axes.get(); // {\"x\": 100, \"xOther\": 60, \"zoom\": 60}\n   */\n\n\n  __proto.setTo = function (pos, duration) {\n    if (duration === void 0) {\n      duration = 0;\n    }\n\n    this.am.setTo(pos, duration);\n    return this;\n  };\n  /**\n   * Moves an axis from the current coordinates to specific coordinates.\n   * @ko 현재 좌표를 기준으로 좌표를 이동한다.\n   * @method eg.Axes#setBy\n   * @param {Object.<string, number>} pos The coordinate to move to <ko>이동할 좌표</ko>\n   * @param {Number} [duration=0] Duration of the animation (unit: ms) <ko>애니메이션 진행 시간(단위: ms)</ko>\n   * @return {eg.Axes} An instance of a module itself <ko>모듈 자신의 인스턴스</ko>\n   * @example\n   * const axes = new eg.Axes({\n   *   \"x\": {\n   *      range: [0, 100]\n   *   },\n   *   \"xOther\": {\n   *      range: [-100, 100]\n   *   },\n   * \t \"zoom\": {\n   *      range: [50, 30]\n   *   }\n   * });\n   *\n   * axes.setBy({\"x\": 30, \"zoom\": 10});\n   * axes.get(); // {\"x\": 30, \"xOther\": -100, \"zoom\": 60}\n   *\n   * axes.setBy({\"x\": 70, \"xOther\": 60}, 1000); // animatation\n   *\n   * // after 1000 ms\n   * axes.get(); // {\"x\": 100, \"xOther\": -40, \"zoom\": 60}\n   */\n\n\n  __proto.setBy = function (pos, duration) {\n    if (duration === void 0) {\n      duration = 0;\n    }\n\n    this.am.setBy(pos, duration);\n    return this;\n  };\n  /**\n   * Returns whether there is a coordinate in the bounce area of ​​the target axis.\n   * @ko 대상 축 중 bounce영역에 좌표가 존재하는지를 반환한다\n   * @method eg.Axes#isBounceArea\n   * @param {Object} [axes] The names of the axis <ko>축 이름들</ko>\n   * @return {Boolen} Whether the bounce area exists. <ko>bounce 영역 존재 여부</ko>\n   * @example\n   * const axes = new eg.Axes({\n   *   \"x\": {\n   *      range: [0, 100]\n   *   },\n   *   \"xOther\": {\n   *      range: [-100, 100]\n   *   },\n   * \t \"zoom\": {\n   *      range: [50, 30]\n   *   }\n   * });\n   *\n   * axes.isBounceArea([\"x\"]);\n   * axes.isBounceArea([\"x\", \"zoom\"]);\n   * axes.isBounceArea();\n   */\n\n\n  __proto.isBounceArea = function (axes) {\n    return this.axm.isOutside(axes);\n  };\n  /**\n  * Destroys properties, and events used in a module and disconnect all connections to inputTypes.\n  * @ko 모듈에 사용한 속성, 이벤트를 해제한다. 모든 inputType과의 연결을 끊는다.\n  * @method eg.Axes#destroy\n  */\n\n\n  __proto.destroy = function () {\n    this.disconnect();\n    this.em.destroy();\n  };\n  /**\n   * Version info string\n   * @ko 버전정보 문자열\n   * @name VERSION\n   * @static\n   * @type {String}\n   * @example\n   * eg.Axes.VERSION;  // ex) 3.3.3\n   * @memberof eg.Axes\n   */\n\n\n  Axes.VERSION = \"2.5.10\";\n  /**\n   * @name eg.Axes.TRANSFORM\n   * @desc Returns the transform attribute with CSS vendor prefixes.\n   * @ko CSS vendor prefixes를 붙인 transform 속성을 반환한다.\n   *\n   * @constant\n   * @type {String}\n   * @example\n   * eg.Axes.TRANSFORM; // \"transform\" or \"webkitTransform\"\n   */\n\n  Axes.TRANSFORM = TRANSFORM;\n  /**\n   * @name eg.Axes.DIRECTION_NONE\n   * @constant\n   * @type {Number}\n   */\n\n  Axes.DIRECTION_NONE = DIRECTION_NONE;\n  /**\n   * @name eg.Axes.DIRECTION_LEFT\n   * @constant\n   * @type {Number}\n  */\n\n  Axes.DIRECTION_LEFT = DIRECTION_LEFT;\n  /**\n   * @name eg.Axes.DIRECTION_RIGHT\n   * @constant\n   * @type {Number}\n  */\n\n  Axes.DIRECTION_RIGHT = DIRECTION_RIGHT;\n  /**\n   * @name eg.Axes.DIRECTION_UP\n   * @constant\n   * @type {Number}\n  */\n\n  Axes.DIRECTION_UP = DIRECTION_UP;\n  /**\n   * @name eg.Axes.DIRECTION_DOWN\n   * @constant\n   * @type {Number}\n  */\n\n  Axes.DIRECTION_DOWN = DIRECTION_DOWN;\n  /**\n   * @name eg.Axes.DIRECTION_HORIZONTAL\n   * @constant\n   * @type {Number}\n  */\n\n  Axes.DIRECTION_HORIZONTAL = DIRECTION_HORIZONTAL;\n  /**\n   * @name eg.Axes.DIRECTION_VERTICAL\n   * @constant\n   * @type {Number}\n  */\n\n  Axes.DIRECTION_VERTICAL = DIRECTION_VERTICAL;\n  /**\n   * @name eg.Axes.DIRECTION_ALL\n   * @constant\n   * @type {Number}\n  */\n\n  Axes.DIRECTION_ALL = DIRECTION_ALL;\n  return Axes;\n}(Component);\n\nvar SUPPORT_POINTER_EVENTS = \"PointerEvent\" in win || \"MSPointerEvent\" in win;\nvar SUPPORT_TOUCH = \"ontouchstart\" in win;\nvar UNIQUEKEY = \"_EGJS_AXES_INPUTTYPE_\";\nfunction toAxis(source, offset) {\n  return offset.reduce(function (acc, v, i) {\n    if (source[i]) {\n      acc[source[i]] = v;\n    }\n\n    return acc;\n  }, {});\n}\nfunction createHammer(element, options) {\n  try {\n    // create Hammer\n    return new Manager(element, __assign({}, options));\n  } catch (e) {\n    return null;\n  }\n}\nfunction convertInputType(inputType) {\n  if (inputType === void 0) {\n    inputType = [];\n  }\n\n  var hasTouch = false;\n  var hasMouse = false;\n  var hasPointer = false;\n  inputType.forEach(function (v) {\n    switch (v) {\n      case \"mouse\":\n        hasMouse = true;\n        break;\n\n      case \"touch\":\n        hasTouch = SUPPORT_TOUCH;\n        break;\n\n      case \"pointer\":\n        hasPointer = SUPPORT_POINTER_EVENTS;\n      // no default\n    }\n  });\n\n  if (hasPointer) {\n    return PointerEventInput;\n  } else if (hasTouch && hasMouse) {\n    return TouchMouseInput;\n  } else if (hasTouch) {\n    return TouchInput;\n  } else if (hasMouse) {\n    return MouseInput;\n  }\n\n  return null;\n}\n\nfunction getDirectionByAngle(angle, thresholdAngle) {\n  if (thresholdAngle < 0 || thresholdAngle > 90) {\n    return DIRECTION_NONE;\n  }\n\n  var toAngle = Math.abs(angle);\n  return toAngle > thresholdAngle && toAngle < 180 - thresholdAngle ? DIRECTION_VERTICAL : DIRECTION_HORIZONTAL;\n}\nfunction getNextOffset(speeds, deceleration) {\n  var normalSpeed = Math.sqrt(speeds[0] * speeds[0] + speeds[1] * speeds[1]);\n  var duration = Math.abs(normalSpeed / -deceleration);\n  return [speeds[0] / 2 * duration, speeds[1] / 2 * duration];\n}\nfunction useDirection(checkType, direction, userDirection) {\n  if (userDirection) {\n    return !!(direction === DIRECTION_ALL || direction & checkType && userDirection & checkType);\n  } else {\n    return !!(direction & checkType);\n  }\n}\n/**\n * @typedef {Object} PanInputOption The option object of the eg.Axes.PanInput module.\n * @ko eg.Axes.PanInput 모듈의 옵션 객체\n * @property {String[]} [inputType=[\"touch\",\"mouse\", \"pointer\"]] Types of input devices.<br>- touch: Touch screen<br>- mouse: Mouse <ko>입력 장치 종류.<br>- touch: 터치 입력 장치<br>- mouse: 마우스</ko>\n * @property {Number[]} [scale] Coordinate scale that a user can move<ko>사용자의 동작으로 이동하는 좌표의 배율</ko>\n * @property {Number} [scale.0=1] horizontal axis scale <ko>수평축 배율</ko>\n * @property {Number} [scale.1=1] vertical axis scale <ko>수직축 배율</ko>\n * @property {Number} [thresholdAngle=45] The threshold value that determines whether user action is horizontal or vertical (0~90) <ko>사용자의 동작이 가로 방향인지 세로 방향인지 판단하는 기준 각도(0~90)</ko>\n * @property {Number} [threshold=0] Minimal pan distance required before recognizing <ko>사용자의 Pan 동작을 인식하기 위해산 최소한의 거리</ko>\n * @property {Object} [hammerManagerOptions={cssProps: {userSelect: \"none\",touchSelect: \"none\",touchCallout: \"none\",userDrag: \"none\"}] Options of Hammer.Manager <ko>Hammer.Manager의 옵션</ko>\n**/\n\n/**\n * @class eg.Axes.PanInput\n * @classdesc A module that passes the amount of change to eg.Axes when the mouse or touchscreen is down and moved. use less than two axes.\n * @ko 마우스나 터치 스크린을 누르고 움직일때의 변화량을 eg.Axes에 전달하는 모듈. 두개 이하의 축을 사용한다.\n *\n * @example\n * const pan = new eg.Axes.PanInput(\"#area\", {\n * \t\tinputType: [\"touch\"],\n * \t\tscale: [1, 1.3],\n * });\n *\n * // Connect the 'something2' axis to the mouse or touchscreen x position when the mouse or touchscreen is down and moved.\n * // Connect the 'somethingN' axis to the mouse or touchscreen y position when the mouse or touchscreen is down and moved.\n * axes.connect([\"something2\", \"somethingN\"], pan); // or axes.connect(\"something2 somethingN\", pan);\n *\n * // Connect only one 'something1' axis to the mouse or touchscreen x position when the mouse or touchscreen is down and moved.\n * axes.connect([\"something1\"], pan); // or axes.connect(\"something1\", pan);\n *\n * // Connect only one 'something2' axis to the mouse or touchscreen y position when the mouse or touchscreen is down and moved.\n * axes.connect([\"\", \"something2\"], pan); // or axes.connect(\" something2\", pan);\n *\n * @param {HTMLElement|String|jQuery} element An element to use the eg.Axes.PanInput module <ko>eg.Axes.PanInput 모듈을 사용할 엘리먼트</ko>\n * @param {PanInputOption} [options] The option object of the eg.Axes.PanInput module<ko>eg.Axes.PanInput 모듈의 옵션 객체</ko>\n */\n\nvar PanInput =\n/*#__PURE__*/\nfunction () {\n  function PanInput(el, options) {\n    this.axes = [];\n    this.hammer = null;\n    this.element = null;\n    this.panRecognizer = null;\n    /**\n     * Hammer helps you add support for touch gestures to your page\n     *\n     * @external Hammer\n     * @see {@link http://hammerjs.github.io|Hammer.JS}\n     * @see {@link http://hammerjs.github.io/jsdoc/Hammer.html|Hammer.JS API documents}\n     * @see Hammer.JS applies specific CSS properties by {@link http://hammerjs.github.io/jsdoc/Hammer.defaults.cssProps.html|default} when creating an instance. The eg.Axes module removes all default CSS properties provided by Hammer.JS\n     */\n\n    if (typeof Manager === \"undefined\") {\n      throw new Error(\"The Hammerjs must be loaded before eg.Axes.PanInput.\\nhttp://hammerjs.github.io/\");\n    }\n\n    this.element = $(el);\n    this.options = __assign({\n      inputType: [\"touch\", \"mouse\", \"pointer\"],\n      scale: [1, 1],\n      thresholdAngle: 45,\n      threshold: 0,\n      hammerManagerOptions: {\n        // css properties were removed due to usablility issue\n        // http://hammerjs.github.io/jsdoc/Hammer.defaults.cssProps.html\n        cssProps: {\n          userSelect: \"none\",\n          touchSelect: \"none\",\n          touchCallout: \"none\",\n          userDrag: \"none\"\n        }\n      }\n    }, options);\n    this.onHammerInput = this.onHammerInput.bind(this);\n    this.onPanmove = this.onPanmove.bind(this);\n    this.onPanend = this.onPanend.bind(this);\n  }\n\n  var __proto = PanInput.prototype;\n\n  __proto.mapAxes = function (axes) {\n    var useHorizontal = !!axes[0];\n    var useVertical = !!axes[1];\n\n    if (useHorizontal && useVertical) {\n      this._direction = DIRECTION_ALL;\n    } else if (useHorizontal) {\n      this._direction = DIRECTION_HORIZONTAL;\n    } else if (useVertical) {\n      this._direction = DIRECTION_VERTICAL;\n    } else {\n      this._direction = DIRECTION_NONE;\n    }\n\n    this.axes = axes;\n  };\n\n  __proto.connect = function (observer) {\n    var hammerOption = {\n      direction: this._direction,\n      threshold: this.options.threshold\n    };\n\n    if (this.hammer) {\n      // for sharing hammer instance.\n      // hammer remove previous PanRecognizer.\n      this.removeRecognizer();\n      this.dettachEvent();\n    } else {\n      var keyValue = this.element[UNIQUEKEY];\n\n      if (!keyValue) {\n        keyValue = String(Math.round(Math.random() * new Date().getTime()));\n      }\n\n      var inputClass = convertInputType(this.options.inputType);\n\n      if (!inputClass) {\n        throw new Error(\"Wrong inputType parameter!\");\n      }\n\n      this.hammer = createHammer(this.element, __assign({\n        inputClass: inputClass\n      }, this.options.hammerManagerOptions));\n      this.element[UNIQUEKEY] = keyValue;\n    }\n\n    this.panRecognizer = new Pan(hammerOption);\n    this.hammer.add(this.panRecognizer);\n    this.attachEvent(observer);\n    return this;\n  };\n\n  __proto.disconnect = function () {\n    this.removeRecognizer();\n\n    if (this.hammer) {\n      this.dettachEvent();\n    }\n\n    this._direction = DIRECTION_NONE;\n    return this;\n  };\n  /**\n  * Destroys elements, properties, and events used in a module.\n  * @ko 모듈에 사용한 엘리먼트와 속성, 이벤트를 해제한다.\n  * @method eg.Axes.PanInput#destroy\n  */\n\n\n  __proto.destroy = function () {\n    this.disconnect();\n\n    if (this.hammer && this.hammer.recognizers.length === 0) {\n      this.hammer.destroy();\n    }\n\n    delete this.element[UNIQUEKEY];\n    this.element = null;\n    this.hammer = null;\n  };\n  /**\n   * Enables input devices\n   * @ko 입력 장치를 사용할 수 있게 한다\n   * @method eg.Axes.PanInput#enable\n   * @return {eg.Axes.PanInput} An instance of a module itself <ko>모듈 자신의 인스턴스</ko>\n   */\n\n\n  __proto.enable = function () {\n    this.hammer && (this.hammer.get(\"pan\").options.enable = true);\n    return this;\n  };\n  /**\n   * Disables input devices\n   * @ko 입력 장치를 사용할 수 없게 한다.\n   * @method eg.Axes.PanInput#disable\n   * @return {eg.Axes.PanInput} An instance of a module itself <ko>모듈 자신의 인스턴스</ko>\n   */\n\n\n  __proto.disable = function () {\n    this.hammer && (this.hammer.get(\"pan\").options.enable = false);\n    return this;\n  };\n  /**\n   * Returns whether to use an input device\n   * @ko 입력 장치를 사용 여부를 반환한다.\n   * @method eg.Axes.PanInput#isEnable\n   * @return {Boolean} Whether to use an input device <ko>입력장치 사용여부</ko>\n   */\n\n\n  __proto.isEnable = function () {\n    return !!(this.hammer && this.hammer.get(\"pan\").options.enable);\n  };\n\n  __proto.removeRecognizer = function () {\n    if (this.hammer && this.panRecognizer) {\n      this.hammer.remove(this.panRecognizer);\n      this.panRecognizer = null;\n    }\n  };\n\n  __proto.onHammerInput = function (event) {\n    if (this.isEnable()) {\n      if (event.isFirst) {\n        this.observer.hold(this, event);\n      } else if (event.isFinal) {\n        this.onPanend(event);\n      }\n    }\n  };\n\n  __proto.onPanmove = function (event) {\n    var userDirection = getDirectionByAngle(event.angle, this.options.thresholdAngle); // not support offset properties in Hammerjs - start\n\n    var prevInput = this.hammer.session.prevInput;\n    /* eslint-disable no-param-reassign */\n\n    if (prevInput) {\n      event.offsetX = event.deltaX - prevInput.deltaX;\n      event.offsetY = event.deltaY - prevInput.deltaY;\n    } else {\n      event.offsetX = 0;\n      event.offsetY = 0;\n    }\n\n    var offset = this.getOffset([event.offsetX, event.offsetY], [useDirection(DIRECTION_HORIZONTAL, this._direction, userDirection), useDirection(DIRECTION_VERTICAL, this._direction, userDirection)]);\n    var prevent = offset.some(function (v) {\n      return v !== 0;\n    });\n\n    if (prevent) {\n      event.srcEvent.preventDefault();\n      event.srcEvent.stopPropagation();\n    }\n\n    event.preventSystemEvent = prevent;\n    prevent && this.observer.change(this, event, toAxis(this.axes, offset));\n  };\n\n  __proto.onPanend = function (event) {\n    var offset = this.getOffset([Math.abs(event.velocityX) * (event.deltaX < 0 ? -1 : 1), Math.abs(event.velocityY) * (event.deltaY < 0 ? -1 : 1)], [useDirection(DIRECTION_HORIZONTAL, this._direction), useDirection(DIRECTION_VERTICAL, this._direction)]);\n    offset = getNextOffset(offset, this.observer.options.deceleration);\n    this.observer.release(this, event, toAxis(this.axes, offset));\n  };\n\n  __proto.attachEvent = function (observer) {\n    this.observer = observer;\n    this.hammer.on(\"hammer.input\", this.onHammerInput).on(\"panstart panmove\", this.onPanmove);\n  };\n\n  __proto.dettachEvent = function () {\n    this.hammer.off(\"hammer.input\", this.onHammerInput).off(\"panstart panmove\", this.onPanmove);\n    this.observer = null;\n  };\n\n  __proto.getOffset = function (properties, direction) {\n    var offset = [0, 0];\n    var scale = this.options.scale;\n\n    if (direction[0]) {\n      offset[0] = properties[0] * scale[0];\n    }\n\n    if (direction[1]) {\n      offset[1] = properties[1] * scale[1];\n    }\n\n    return offset;\n  };\n\n  return PanInput;\n}();\n\n/**\n * @typedef {Object} PinchInputOption The option object of the eg.Axes.PinchInput module\n * @ko eg.Axes.PinchInput 모듈의 옵션 객체\n * @property {Number} [scale=1] Coordinate scale that a user can move<ko>사용자의 동작으로 이동하는 좌표의 배율</ko>\n * @property {Number} [threshold=0] Minimal scale before recognizing <ko>사용자의 Pinch 동작을 인식하기 위해산 최소한의 배율</ko>\n * @property {Object} [hammerManagerOptions={cssProps: {userSelect: \"none\",touchSelect: \"none\",touchCallout: \"none\",userDrag: \"none\"}] Options of Hammer.Manager <ko>Hammer.Manager의 옵션</ko>\n**/\n\n/**\n * @class eg.Axes.PinchInput\n * @classdesc A module that passes the amount of change to eg.Axes when two pointers are moving toward (zoom-in) or away from each other (zoom-out). use one axis.\n * @ko 2개의 pointer를 이용하여 zoom-in하거나 zoom-out 하는 동작의 변화량을 eg.Axes에 전달하는 모듈. 한 개 의 축을 사용한다.\n * @example\n * const pinch = new eg.Axes.PinchInput(\"#area\", {\n * \t\tscale: 1\n * });\n *\n * // Connect 'something' axis when two pointers are moving toward (zoom-in) or away from each other (zoom-out).\n * axes.connect(\"something\", pinch);\n *\n * @param {HTMLElement|String|jQuery} element An element to use the eg.Axes.PinchInput module <ko>eg.Axes.PinchInput 모듈을 사용할 엘리먼트</ko>\n * @param {PinchInputOption} [options] The option object of the eg.Axes.PinchInput module<ko>eg.Axes.PinchInput 모듈의 옵션 객체</ko>\n */\n\nvar PinchInput =\n/*#__PURE__*/\nfunction () {\n  function PinchInput(el, options) {\n    this.axes = [];\n    this.hammer = null;\n    this.element = null;\n    this._base = null;\n    this._prev = null;\n    this.pinchRecognizer = null;\n    /**\n     * Hammer helps you add support for touch gestures to your page\n     *\n     * @external Hammer\n     * @see {@link http://hammerjs.github.io|Hammer.JS}\n     * @see {@link http://hammerjs.github.io/jsdoc/Hammer.html|Hammer.JS API documents}\n     * @see Hammer.JS applies specific CSS properties by {@link http://hammerjs.github.io/jsdoc/Hammer.defaults.cssProps.html|default} when creating an instance. The eg.Axes module removes all default CSS properties provided by Hammer.JS\n     */\n\n    if (typeof Manager === \"undefined\") {\n      throw new Error(\"The Hammerjs must be loaded before eg.Axes.PinchInput.\\nhttp://hammerjs.github.io/\");\n    }\n\n    this.element = $(el);\n    this.options = __assign({\n      scale: 1,\n      threshold: 0,\n      inputType: [\"touch\", \"pointer\"],\n      hammerManagerOptions: {\n        // css properties were removed due to usablility issue\n        // http://hammerjs.github.io/jsdoc/Hammer.defaults.cssProps.html\n        cssProps: {\n          userSelect: \"none\",\n          touchSelect: \"none\",\n          touchCallout: \"none\",\n          userDrag: \"none\"\n        }\n      }\n    }, options);\n    this.onPinchStart = this.onPinchStart.bind(this);\n    this.onPinchMove = this.onPinchMove.bind(this);\n    this.onPinchEnd = this.onPinchEnd.bind(this);\n  }\n\n  var __proto = PinchInput.prototype;\n\n  __proto.mapAxes = function (axes) {\n    this.axes = axes;\n  };\n\n  __proto.connect = function (observer) {\n    var hammerOption = {\n      threshold: this.options.threshold\n    };\n\n    if (this.hammer) {\n      // for sharing hammer instance.\n      // hammer remove previous PinchRecognizer.\n      this.removeRecognizer();\n      this.dettachEvent();\n    } else {\n      var keyValue = this.element[UNIQUEKEY];\n\n      if (!keyValue) {\n        keyValue = String(Math.round(Math.random() * new Date().getTime()));\n      }\n\n      var inputClass = convertInputType(this.options.inputType);\n\n      if (!inputClass) {\n        throw new Error(\"Wrong inputType parameter!\");\n      }\n\n      this.hammer = createHammer(this.element, __assign({\n        inputClass: inputClass\n      }, this.options.hammerManagerOptions));\n      this.element[UNIQUEKEY] = keyValue;\n    }\n\n    this.pinchRecognizer = new Pinch(hammerOption);\n    this.hammer.add(this.pinchRecognizer);\n    this.attachEvent(observer);\n    return this;\n  };\n\n  __proto.disconnect = function () {\n    this.removeRecognizer();\n\n    if (this.hammer) {\n      this.hammer.remove(this.pinchRecognizer);\n      this.pinchRecognizer = null;\n      this.dettachEvent();\n    }\n\n    return this;\n  };\n  /**\n  * Destroys elements, properties, and events used in a module.\n  * @ko 모듈에 사용한 엘리먼트와 속성, 이벤트를 해제한다.\n  * @method eg.Axes.PinchInput#destroy\n  */\n\n\n  __proto.destroy = function () {\n    this.disconnect();\n\n    if (this.hammer && this.hammer.recognizers.length === 0) {\n      this.hammer.destroy();\n    }\n\n    delete this.element[UNIQUEKEY];\n    this.element = null;\n    this.hammer = null;\n  };\n\n  __proto.removeRecognizer = function () {\n    if (this.hammer && this.pinchRecognizer) {\n      this.hammer.remove(this.pinchRecognizer);\n      this.pinchRecognizer = null;\n    }\n  };\n\n  __proto.onPinchStart = function (event) {\n    this._base = this.observer.get(this)[this.axes[0]];\n    var offset = this.getOffset(event.scale);\n    this.observer.hold(this, event);\n    this.observer.change(this, event, toAxis(this.axes, [offset]));\n    this._prev = event.scale;\n  };\n\n  __proto.onPinchMove = function (event) {\n    var offset = this.getOffset(event.scale, this._prev);\n    this.observer.change(this, event, toAxis(this.axes, [offset]));\n    this._prev = event.scale;\n  };\n\n  __proto.onPinchEnd = function (event) {\n    var offset = this.getOffset(event.scale, this._prev);\n    this.observer.change(this, event, toAxis(this.axes, [offset]));\n    this.observer.release(this, event, toAxis(this.axes, [0]), 0);\n    this._base = null;\n    this._prev = null;\n  };\n\n  __proto.getOffset = function (pinchScale, prev) {\n    if (prev === void 0) {\n      prev = 1;\n    }\n\n    return this._base * (pinchScale - prev) * this.options.scale;\n  };\n\n  __proto.attachEvent = function (observer) {\n    this.observer = observer;\n    this.hammer.on(\"pinchstart\", this.onPinchStart).on(\"pinchmove\", this.onPinchMove).on(\"pinchend\", this.onPinchEnd);\n  };\n\n  __proto.dettachEvent = function () {\n    this.hammer.off(\"pinchstart\", this.onPinchStart).off(\"pinchmove\", this.onPinchMove).off(\"pinchend\", this.onPinchEnd);\n    this.observer = null;\n    this._prev = null;\n  };\n  /**\n   * Enables input devices\n   * @ko 입력 장치를 사용할 수 있게 한다\n   * @method eg.Axes.PinchInput#enable\n   * @return {eg.Axes.PinchInput} An instance of a module itself <ko>모듈 자신의 인스턴스</ko>\n   */\n\n\n  __proto.enable = function () {\n    this.hammer && (this.hammer.get(\"pinch\").options.enable = true);\n    return this;\n  };\n  /**\n   * Disables input devices\n   * @ko 입력 장치를 사용할 수 없게 한다.\n   * @method eg.Axes.PinchInput#disable\n   * @return {eg.Axes.PinchInput} An instance of a module itself <ko>모듈 자신의 인스턴스</ko>\n   */\n\n\n  __proto.disable = function () {\n    this.hammer && (this.hammer.get(\"pinch\").options.enable = false);\n    return this;\n  };\n  /**\n   * Returns whether to use an input device\n   * @ko 입력 장치를 사용 여부를 반환한다.\n   * @method eg.Axes.PinchInput#isEnable\n   * @return {Boolean} Whether to use an input device <ko>입력장치 사용여부</ko>\n   */\n\n\n  __proto.isEnable = function () {\n    return !!(this.hammer && this.hammer.get(\"pinch\").options.enable);\n  };\n\n  return PinchInput;\n}();\n\n/**\n * @typedef {Object} WheelInputOption The option object of the eg.Axes.WheelInput module\n * @ko eg.Axes.WheelInput 모듈의 옵션 객체\n * @property {Number} [scale=1] Coordinate scale that a user can move<ko>사용자의 동작으로 이동하는 좌표의 배율</ko>\n**/\n\n/**\n * @class eg.Axes.WheelInput\n * @classdesc A module that passes the amount of change to eg.Axes when the mouse wheel is moved. use one axis.\n * @ko 마우스 휠이 움직일때의 변화량을 eg.Axes에 전달하는 모듈. 한 개 의 축을 사용한다.\n *\n * @example\n * const wheel = new eg.Axes.WheelInput(\"#area\", {\n * \t\tscale: 1\n * });\n *\n * // Connect 'something' axis when the mousewheel is moved.\n * axes.connect(\"something\", wheel);\n *\n * @param {HTMLElement|String|jQuery} element An element to use the eg.Axes.WheelInput module <ko>eg.Axes.WheelInput 모듈을 사용할 엘리먼트</ko>\n * @param {WheelInputOption} [options] The option object of the eg.Axes.WheelInput module<ko>eg.Axes.WheelInput 모듈의 옵션 객체</ko>\n */\n\nvar WheelInput =\n/*#__PURE__*/\nfunction () {\n  function WheelInput(el, options) {\n    this.axes = [];\n    this.element = null;\n    this._isEnabled = false;\n    this._isHolded = false;\n    this._timer = null;\n    this.element = $(el);\n    this.options = __assign({\n      scale: 1,\n      useNormalized: true\n    }, options);\n    this.onWheel = this.onWheel.bind(this);\n  }\n\n  var __proto = WheelInput.prototype;\n\n  __proto.mapAxes = function (axes) {\n    this.axes = axes;\n  };\n\n  __proto.connect = function (observer) {\n    this.dettachEvent();\n    this.attachEvent(observer);\n    return this;\n  };\n\n  __proto.disconnect = function () {\n    this.dettachEvent();\n    return this;\n  };\n  /**\n  * Destroys elements, properties, and events used in a module.\n  * @ko 모듈에 사용한 엘리먼트와 속성, 이벤트를 해제한다.\n  * @method eg.Axes.WheelInput#destroy\n  */\n\n\n  __proto.destroy = function () {\n    this.disconnect();\n    this.element = null;\n  };\n\n  __proto.onWheel = function (event) {\n    var _this = this;\n\n    if (!this._isEnabled) {\n      return;\n    }\n\n    event.preventDefault();\n\n    if (event.deltaY === 0) {\n      return;\n    }\n\n    if (!this._isHolded) {\n      this.observer.hold(this, event);\n      this._isHolded = true;\n    }\n\n    var offset = (event.deltaY > 0 ? -1 : 1) * this.options.scale * (this.options.useNormalized ? 1 : Math.abs(event.deltaY));\n    this.observer.change(this, event, toAxis(this.axes, [offset]));\n    clearTimeout(this._timer);\n    this._timer = setTimeout(function () {\n      if (_this._isHolded) {\n        _this._isHolded = false;\n\n        _this.observer.release(_this, event, toAxis(_this.axes, [0]));\n      }\n    }, 50);\n  };\n\n  __proto.attachEvent = function (observer) {\n    this.observer = observer;\n    this.element.addEventListener(\"wheel\", this.onWheel);\n    this._isEnabled = true;\n  };\n\n  __proto.dettachEvent = function () {\n    this.element.removeEventListener(\"wheel\", this.onWheel);\n    this._isEnabled = false;\n    this.observer = null;\n\n    if (this._timer) {\n      clearTimeout(this._timer);\n      this._timer = null;\n    }\n  };\n  /**\n   * Enables input devices\n   * @ko 입력 장치를 사용할 수 있게 한다\n   * @method eg.Axes.WheelInput#enable\n   * @return {eg.Axes.WheelInput} An instance of a module itself <ko>모듈 자신의 인스턴스</ko>\n   */\n\n\n  __proto.enable = function () {\n    this._isEnabled = true;\n    return this;\n  };\n  /**\n   * Disables input devices\n   * @ko 입력 장치를 사용할 수 없게 한다.\n   * @method eg.Axes.WheelInput#disable\n   * @return {eg.Axes.WheelInput} An instance of a module itself <ko>모듈 자신의 인스턴스</ko>\n   */\n\n\n  __proto.disable = function () {\n    this._isEnabled = false;\n    return this;\n  };\n  /**\n   * Returns whether to use an input device\n   * @ko 입력 장치를 사용 여부를 반환한다.\n   * @method eg.Axes.WheelInput#isEnable\n   * @return {Boolean} Whether to use an input device <ko>입력장치 사용여부</ko>\n   */\n\n\n  __proto.isEnable = function () {\n    return this._isEnabled;\n  };\n\n  return WheelInput;\n}();\n\nvar KEY_LEFT_ARROW = 37;\nvar KEY_A = 65;\nvar KEY_UP_ARROW = 38;\nvar KEY_W = 87;\nvar KEY_RIGHT_ARROW = 39;\nvar KEY_D = 68;\nvar KEY_DOWN_ARROW = 40;\nvar KEY_S = 83;\nvar DIRECTION_REVERSE = -1;\nvar DIRECTION_FORWARD = 1;\nvar DIRECTION_HORIZONTAL$1 = -1;\nvar DIRECTION_VERTICAL$1 = 1;\nvar DELAY = 80;\n/**\n * @typedef {Object} MoveKeyInputOption The option object of the eg.Axes.MoveKeyInput module\n * @ko eg.Axes.MoveKeyInput 모듈의 옵션 객체\n * @property {Array<Number>} [scale] Coordinate scale that a user can move<ko>사용자의 동작으로 이동하는 좌표의 배율</ko>\n * @property {Number} [scale[0]=1] Coordinate scale for the first axis<ko>첫번째 축의 배율</ko>\n * @property {Number} [scale[1]=1] Coordinate scale for the decond axis<ko>두번째 축의 배율</ko>\n**/\n\n/**\n * @class eg.Axes.MoveKeyInput\n * @classdesc A module that passes the amount of change to eg.Axes when the move key stroke is occured. use two axis.\n * @ko 이동키 입력이 발생했을 때의 변화량을 eg.Axes에 전달하는 모듈. 두 개 의 축을 사용한다.\n *\n * @example\n * const moveKey = new eg.Axes.MoveKeyInput(\"#area\", {\n * \t\tscale: [1, 1]\n * });\n *\n * // Connect 'x', 'y' axes when the moveKey is pressed.\n * axes.connect([\"x\", \"y\"], moveKey);\n *\n * @param {HTMLElement|String|jQuery} element An element to use the eg.Axes.MoveKeyInput module <ko>eg.Axes.MoveKeyInput 모듈을 사용할 엘리먼트</ko>\n * @param {MoveKeyInputOption} [options] The option object of the eg.Axes.MoveKeyInput module<ko>eg.Axes.MoveKeyInput 모듈의 옵션 객체</ko>\n */\n\nvar MoveKeyInput =\n/*#__PURE__*/\nfunction () {\n  function MoveKeyInput(el, options) {\n    this.axes = [];\n    this.element = null;\n    this._isEnabled = false;\n    this._isHolded = false;\n    this._timer = null;\n    this.element = $(el);\n    this.options = __assign({\n      scale: [1, 1]\n    }, options);\n    this.onKeydown = this.onKeydown.bind(this);\n    this.onKeyup = this.onKeyup.bind(this);\n  }\n\n  var __proto = MoveKeyInput.prototype;\n\n  __proto.mapAxes = function (axes) {\n    this.axes = axes;\n  };\n\n  __proto.connect = function (observer) {\n    this.dettachEvent(); // add tabindex=\"0\" to the container for making it focusable\n\n    if (this.element.getAttribute(\"tabindex\") !== \"0\") {\n      this.element.setAttribute(\"tabindex\", \"0\");\n    }\n\n    this.attachEvent(observer);\n    return this;\n  };\n\n  __proto.disconnect = function () {\n    this.dettachEvent();\n    return this;\n  };\n  /**\n  * Destroys elements, properties, and events used in a module.\n  * @ko 모듈에 사용한 엘리먼트와 속성, 이벤트를 해제한다.\n  * @method eg.Axes.MoveKeyInput#destroy\n  */\n\n\n  __proto.destroy = function () {\n    this.disconnect();\n    this.element = null;\n  };\n\n  __proto.onKeydown = function (e) {\n    if (!this._isEnabled) {\n      return;\n    }\n\n    var isMoveKey = true;\n    var direction = DIRECTION_FORWARD;\n    var move = DIRECTION_HORIZONTAL$1;\n\n    switch (e.keyCode) {\n      case KEY_LEFT_ARROW:\n      case KEY_A:\n        direction = DIRECTION_REVERSE;\n        break;\n\n      case KEY_RIGHT_ARROW:\n      case KEY_D:\n        break;\n\n      case KEY_DOWN_ARROW:\n      case KEY_S:\n        direction = DIRECTION_REVERSE;\n        move = DIRECTION_VERTICAL$1;\n        break;\n\n      case KEY_UP_ARROW:\n      case KEY_W:\n        move = DIRECTION_VERTICAL$1;\n        break;\n\n      default:\n        isMoveKey = false;\n    }\n\n    if (move === DIRECTION_HORIZONTAL$1 && !this.axes[0] || move === DIRECTION_VERTICAL$1 && !this.axes[1]) {\n      isMoveKey = false;\n    }\n\n    if (!isMoveKey) {\n      return;\n    }\n\n    var offsets = move === DIRECTION_HORIZONTAL$1 ? [+this.options.scale[0] * direction, 0] : [0, +this.options.scale[1] * direction];\n\n    if (!this._isHolded) {\n      this.observer.hold(this, event);\n      this._isHolded = true;\n    }\n\n    clearTimeout(this._timer);\n    this.observer.change(this, event, toAxis(this.axes, offsets));\n  };\n\n  __proto.onKeyup = function (e) {\n    var _this = this;\n\n    if (!this._isHolded) {\n      return;\n    }\n\n    clearTimeout(this._timer);\n    this._timer = setTimeout(function () {\n      _this.observer.release(_this, e, toAxis(_this.axes, [0, 0]));\n\n      _this._isHolded = false;\n    }, DELAY);\n  };\n\n  __proto.attachEvent = function (observer) {\n    this.observer = observer;\n    this.element.addEventListener(\"keydown\", this.onKeydown, false);\n    this.element.addEventListener(\"keypress\", this.onKeydown, false);\n    this.element.addEventListener(\"keyup\", this.onKeyup, false);\n    this._isEnabled = true;\n  };\n\n  __proto.dettachEvent = function () {\n    this.element.removeEventListener(\"keydown\", this.onKeydown, false);\n    this.element.removeEventListener(\"keypress\", this.onKeydown, false);\n    this.element.removeEventListener(\"keyup\", this.onKeyup, false);\n    this._isEnabled = false;\n    this.observer = null;\n  };\n  /**\n   * Enables input devices\n   * @ko 입력 장치를 사용할 수 있게 한다\n   * @method eg.Axes.MoveKeyInput#enable\n   * @return {eg.Axes.MoveKeyInput} An instance of a module itself <ko>모듈 자신의 인스턴스</ko>\n   */\n\n\n  __proto.enable = function () {\n    this._isEnabled = true;\n    return this;\n  };\n  /**\n   * Disables input devices\n   * @ko 입력 장치를 사용할 수 없게 한다.\n   * @method eg.Axes.MoveKeyInput#disable\n   * @return {eg.Axes.MoveKeyInput} An instance of a module itself <ko>모듈 자신의 인스턴스</ko>\n   */\n\n\n  __proto.disable = function () {\n    this._isEnabled = false;\n    return this;\n  };\n  /**\n   * Returns whether to use an input device\n   * @ko 입력 장치를 사용 여부를 반환한다.\n   * @method eg.Axes.MoveKeyInput#isEnable\n   * @return {Boolean} Whether to use an input device <ko>입력장치 사용여부</ko>\n   */\n\n\n  __proto.isEnable = function () {\n    return this._isEnabled;\n  };\n\n  return MoveKeyInput;\n}();\n\nexport default Axes;\nexport { PanInput, PinchInput, WheelInput, MoveKeyInput };\n//# sourceMappingURL=axes.esm.js.map\n","import { now } from \"@daybrush/utils\";\n\nlet prevTime = 0;\nlet prevX = -1;\nlet prevY = -1;\n\nexport function dblCheck(\n    isDrag: boolean,\n    e: any,\n    clientX: number,\n    clientY: number,\n    callback: (e: any, clientX: number, clientY: number) => void,\n) {\n    const currentTime = now();\n\n    if (!isDrag) {\n        if (\n            prevX === clientX &&\n            prevY === clientY &&\n            currentTime - prevTime <= 500\n        ) {\n            callback(e, clientX, clientY);\n        }\n        prevX = clientX;\n        prevY = clientY;\n        prevTime = currentTime;\n    }\n}\n","/*\nCopyright (c) 2019 Daybrush\nname: keycon\nlicense: MIT\nauthor: Daybrush\nrepository: git+https://github.com/daybrush/keycon.git\nversion: 0.2.2\n*/\nimport Component from '@egjs/component';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\n\n/* global Reflect, Promise */\nvar extendStatics = function (d, b) {\n  extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n  };\n\n  return extendStatics(d, b);\n};\n\nfunction __extends(d, b) {\n  extendStatics(d, b);\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nfunction createCommonjsModule(fn, module) {\n  return module = {\n    exports: {}\n  }, fn(module, module.exports), module.exports;\n}\n\nvar keycode = createCommonjsModule(function (module, exports) {\n// Source: http://jsfiddle.net/vWx8V/\n// http://stackoverflow.com/questions/5603195/full-list-of-javascript-keycodes\n\n/**\n * Conenience method returns corresponding value for given keyName or keyCode.\n *\n * @param {Mixed} keyCode {Number} or keyName {String}\n * @return {Mixed}\n * @api public\n */\nfunction keyCode(searchInput) {\n  // Keyboard Events\n  if (searchInput && 'object' === typeof searchInput) {\n    var hasKeyCode = searchInput.which || searchInput.keyCode || searchInput.charCode;\n    if (hasKeyCode) searchInput = hasKeyCode;\n  } // Numbers\n\n\n  if ('number' === typeof searchInput) return names[searchInput]; // Everything else (cast to string)\n\n  var search = String(searchInput); // check codes\n\n  var foundNamedKey = codes[search.toLowerCase()];\n  if (foundNamedKey) return foundNamedKey; // check aliases\n\n  var foundNamedKey = aliases[search.toLowerCase()];\n  if (foundNamedKey) return foundNamedKey; // weird character?\n\n  if (search.length === 1) return search.charCodeAt(0);\n  return undefined;\n}\n/**\n * Compares a keyboard event with a given keyCode or keyName.\n *\n * @param {Event} event Keyboard event that should be tested\n * @param {Mixed} keyCode {Number} or keyName {String}\n * @return {Boolean}\n * @api public\n */\n\n\nkeyCode.isEventKey = function isEventKey(event, nameOrCode) {\n  if (event && 'object' === typeof event) {\n    var keyCode = event.which || event.keyCode || event.charCode;\n\n    if (keyCode === null || keyCode === undefined) {\n      return false;\n    }\n\n    if (typeof nameOrCode === 'string') {\n      // check codes\n      var foundNamedKey = codes[nameOrCode.toLowerCase()];\n\n      if (foundNamedKey) {\n        return foundNamedKey === keyCode;\n      } // check aliases\n\n\n      var foundNamedKey = aliases[nameOrCode.toLowerCase()];\n\n      if (foundNamedKey) {\n        return foundNamedKey === keyCode;\n      }\n    } else if (typeof nameOrCode === 'number') {\n      return nameOrCode === keyCode;\n    }\n\n    return false;\n  }\n};\n\nexports = module.exports = keyCode;\n/**\n * Get by name\n *\n *   exports.code['enter'] // => 13\n */\n\nvar codes = exports.code = exports.codes = {\n  'backspace': 8,\n  'tab': 9,\n  'enter': 13,\n  'shift': 16,\n  'ctrl': 17,\n  'alt': 18,\n  'pause/break': 19,\n  'caps lock': 20,\n  'esc': 27,\n  'space': 32,\n  'page up': 33,\n  'page down': 34,\n  'end': 35,\n  'home': 36,\n  'left': 37,\n  'up': 38,\n  'right': 39,\n  'down': 40,\n  'insert': 45,\n  'delete': 46,\n  'command': 91,\n  'left command': 91,\n  'right command': 93,\n  'numpad *': 106,\n  'numpad +': 107,\n  'numpad -': 109,\n  'numpad .': 110,\n  'numpad /': 111,\n  'num lock': 144,\n  'scroll lock': 145,\n  'my computer': 182,\n  'my calculator': 183,\n  ';': 186,\n  '=': 187,\n  ',': 188,\n  '-': 189,\n  '.': 190,\n  '/': 191,\n  '`': 192,\n  '[': 219,\n  '\\\\': 220,\n  ']': 221,\n  \"'\": 222 // Helper aliases\n\n};\nvar aliases = exports.aliases = {\n  'windows': 91,\n  '⇧': 16,\n  '⌥': 18,\n  '⌃': 17,\n  '⌘': 91,\n  'ctl': 17,\n  'control': 17,\n  'option': 18,\n  'pause': 19,\n  'break': 19,\n  'caps': 20,\n  'return': 13,\n  'escape': 27,\n  'spc': 32,\n  'spacebar': 32,\n  'pgup': 33,\n  'pgdn': 34,\n  'ins': 45,\n  'del': 46,\n  'cmd': 91\n  /*!\n   * Programatically add the following\n   */\n  // lower case chars\n\n};\n\nfor (i = 97; i < 123; i++) codes[String.fromCharCode(i)] = i - 32; // numbers\n\n\nfor (var i = 48; i < 58; i++) codes[i - 48] = i; // function keys\n\n\nfor (i = 1; i < 13; i++) codes['f' + i] = i + 111; // numpad keys\n\n\nfor (i = 0; i < 10; i++) codes['numpad ' + i] = i + 96;\n/**\n * Get by code\n *\n *   exports.name[13] // => 'Enter'\n */\n\n\nvar names = exports.names = exports.title = {}; // title for backward compat\n// Create reverse mapping\n\nfor (i in codes) names[codes[i]] = i; // Add aliases\n\n\nfor (var alias in aliases) {\n  codes[alias] = aliases[alias];\n}\n});\nvar keycode_1 = keycode.code;\nvar keycode_2 = keycode.codes;\nvar keycode_3 = keycode.aliases;\nvar keycode_4 = keycode.names;\nvar keycode_5 = keycode.title;\n\n/*\nCopyright (c) 2018 Daybrush\n@name: @daybrush/utils\nlicense: MIT\nauthor: Daybrush\nrepository: https://github.com/daybrush/utils\n@version 0.7.1\n*/\n/**\n* get string \"string\"\n* @memberof Consts\n* @example\nimport {STRING} from \"@daybrush/utils\";\n\nconsole.log(STRING); // \"string\"\n*/\n\nvar STRING = \"string\";\n/**\n* Check the type that the value is isArray.\n* @memberof Utils\n* @param {string} value - Value to check the type\n* @return {} true if the type is correct, false otherwise\n* @example\nimport {isArray} from \"@daybrush/utils\";\n\nconsole.log(isArray([])); // true\nconsole.log(isArray({})); // false\nconsole.log(isArray(undefined)); // false\nconsole.log(isArray(null)); // false\n*/\n\n\nfunction isArray(value) {\n  return Array.isArray(value);\n}\n/**\n* Check the type that the value is string.\n* @memberof Utils\n* @param {string} value - Value to check the type\n* @return {} true if the type is correct, false otherwise\n* @example\nimport {isString} from \"@daybrush/utils\";\n\nconsole.log(isString(\"1234\")); // true\nconsole.log(isString(undefined)); // false\nconsole.log(isString(1)); // false\nconsole.log(isString(null)); // false\n*/\n\n\nfunction isString(value) {\n  return typeof value === STRING;\n}\n/**\n* Sets up a function that will be called whenever the specified event is delivered to the target\n* @memberof DOM\n* @param - event target\n* @param - A case-sensitive string representing the event type to listen for.\n* @param - The object which receives a notification (an object that implements the Event interface) when an event of the specified type occurs\n* @param - An options object that specifies characteristics about the event listener. The available options are:\n* @example\nimport {addEvent} from \"@daybrush/utils\";\n\naddEvent(el, \"click\", e => {\n  console.log(e);\n});\n*/\n\n\nfunction addEvent(el, type, listener, options) {\n  el.addEventListener(type, listener, options);\n}\n\nvar codeData = {\n  \"+\": \"plus\",\n  \"left command\": \"meta\",\n  \"right command\": \"meta\"\n};\nvar keysSort = {\n  shift: 1,\n  ctrl: 2,\n  alt: 3,\n  meta: 4\n};\n\nfunction getKey(keyCode) {\n  var key = keycode_4[keyCode] || \"\";\n\n  for (var name in codeData) {\n    key = key.replace(name, codeData[name]);\n  }\n\n  return key.replace(/\\s/g, \"\");\n}\n\nfunction getCombi(e, key) {\n  var keys = [e.shiftKey && \"shift\", e.ctrlKey && \"ctrl\", e.altKey && \"alt\", e.metaKey && \"meta\"];\n  keys.indexOf(key) === -1 && keys.push(key);\n  return keys.filter(Boolean);\n}\n\nfunction getArrangeCombi(keys) {\n  var arrangeKeys = keys.slice();\n  arrangeKeys.sort(function (prev, next) {\n    var prevScore = keysSort[prev] || 5;\n    var nextScore = keysSort[next] || 5;\n    return prevScore - nextScore;\n  });\n  return arrangeKeys;\n}\n/**\n */\n\n\nvar KeyController =\n/*#__PURE__*/\nfunction (_super) {\n  __extends(KeyController, _super);\n  /**\n   *\n   */\n\n\n  function KeyController(container) {\n    if (container === void 0) {\n      container = window;\n    }\n\n    var _this = _super.call(this) || this;\n    /**\n     */\n\n\n    _this.ctrlKey = false;\n    /**\n     */\n\n    _this.altKey = false;\n    /**\n     *\n     */\n\n    _this.shiftKey = false;\n    /**\n     *\n     */\n\n    _this.metaKey = false;\n\n    _this.clear = function () {\n      _this.ctrlKey = false;\n      _this.altKey = false;\n      _this.shiftKey = false;\n      _this.metaKey = false;\n    };\n\n    _this.keydownEvent = function (e) {\n      _this.triggerEvent(\"keydown\", e);\n    };\n\n    _this.keyupEvent = function (e) {\n      _this.triggerEvent(\"keyup\", e);\n    };\n\n    addEvent(container, \"blur\", _this.clear);\n    addEvent(container, \"keydown\", _this.keydownEvent);\n    addEvent(container, \"keyup\", _this.keyupEvent);\n    return _this;\n  }\n  /**\n   *\n   */\n\n\n  var __proto = KeyController.prototype;\n\n  __proto.keydown = function (comb, callback) {\n    return this.addEvent(\"keydown\", comb, callback);\n  };\n  /**\n   *\n   */\n\n\n  __proto.keyup = function (comb, callback) {\n    return this.addEvent(\"keyup\", comb, callback);\n  };\n\n  __proto.addEvent = function (type, comb, callback) {\n    if (isArray(comb)) {\n      this.on(type + \".\" + getArrangeCombi(comb).join(\".\"), callback);\n    } else if (isString(comb)) {\n      this.on(type + \".\" + comb, callback);\n    } else {\n      this.on(type, comb);\n    }\n\n    return this;\n  };\n\n  __proto.triggerEvent = function (type, e) {\n    this.ctrlKey = e.ctrlKey;\n    this.shiftKey = e.shiftKey;\n    this.altKey = e.altKey;\n    this.metaKey = e.metaKey;\n    var key = getKey(e.keyCode);\n    var isToggle = key === \"ctrl\" || key === \"shift\" || key === \"meta\" || key === \"alt\";\n    var param = {\n      key: key,\n      isToggle: isToggle,\n      inputEvent: e,\n      keyCode: e.keyCode,\n      ctrlKey: e.ctrlKey,\n      altKey: e.altKey,\n      shiftKey: e.shiftKey,\n      metaKey: e.metaKey\n    };\n    this.trigger(type, param);\n    this.trigger(type + \".\" + key, param);\n    var combi = getCombi(e, key);\n    combi.length > 1 && this.trigger(type + \".\" + combi.join(\".\"), param);\n  };\n\n  return KeyController;\n}(Component);\n\nexport default KeyController;\n//# sourceMappingURL=keycon.esm.js.map\n","/*\nCopyright (c) 2018 Daybrush\n@name: @daybrush/utils\nlicense: MIT\nauthor: Daybrush\nrepository: https://github.com/daybrush/utils\n@version 0.7.1\n*/\n/**\n* @namespace\n* @name Consts\n*/\n\n/**\n* get string \"rgb\"\n* @memberof Color\n* @example\nimport {RGB} from \"@daybrush/utils\";\n\nconsole.log(RGB); // \"rgb\"\n*/\nvar RGB = \"rgb\";\n/**\n* get string \"rgba\"\n* @memberof Color\n* @example\nimport {RGBA} from \"@daybrush/utils\";\n\nconsole.log(RGBA); // \"rgba\"\n*/\n\nvar RGBA = \"rgba\";\n/**\n* get string \"hsl\"\n* @memberof Color\n* @example\nimport {HSL} from \"@daybrush/utils\";\n\nconsole.log(HSL); // \"hsl\"\n*/\n\nvar HSL = \"hsl\";\n/**\n* get string \"hsla\"\n* @memberof Color\n* @example\nimport {HSLA} from \"@daybrush/utils\";\n\nconsole.log(HSLA); // \"hsla\"\n*/\n\nvar HSLA = \"hsla\";\n/**\n* gets an array of color models.\n* @memberof Color\n* @example\nimport {COLOR_MODELS} from \"@daybrush/utils\";\n\nconsole.log(COLOR_MODELS); // [\"rgb\", \"rgba\", \"hsl\", \"hsla\"];\n*/\n\nvar COLOR_MODELS = [RGB, RGBA, HSL, HSLA];\n/**\n* get string \"function\"\n* @memberof Consts\n* @example\nimport {FUNCTION} from \"@daybrush/utils\";\n\nconsole.log(FUNCTION); // \"function\"\n*/\n\nvar FUNCTION = \"function\";\n/**\n* get string \"property\"\n* @memberof Consts\n* @example\nimport {PROPERTY} from \"@daybrush/utils\";\n\nconsole.log(PROPERTY); // \"property\"\n*/\n\nvar PROPERTY = \"property\";\n/**\n* get string \"array\"\n* @memberof Consts\n* @example\nimport {ARRAY} from \"@daybrush/utils\";\n\nconsole.log(ARRAY); // \"array\"\n*/\n\nvar ARRAY = \"array\";\n/**\n* get string \"object\"\n* @memberof Consts\n* @example\nimport {OBJECT} from \"@daybrush/utils\";\n\nconsole.log(OBJECT); // \"object\"\n*/\n\nvar OBJECT = \"object\";\n/**\n* get string \"string\"\n* @memberof Consts\n* @example\nimport {STRING} from \"@daybrush/utils\";\n\nconsole.log(STRING); // \"string\"\n*/\n\nvar STRING = \"string\";\n/**\n* get string \"number\"\n* @memberof Consts\n* @example\nimport {NUMBER} from \"@daybrush/utils\";\n\nconsole.log(NUMBER); // \"number\"\n*/\n\nvar NUMBER = \"number\";\n/**\n* get string \"undefined\"\n* @memberof Consts\n* @example\nimport {UNDEFINED} from \"@daybrush/utils\";\n\nconsole.log(UNDEFINED); // \"undefined\"\n*/\n\nvar UNDEFINED = \"undefined\";\n/**\n* Check whether the environment is window or node.js.\n* @memberof Consts\n* @example\nimport {IS_WINDOW} from \"@daybrush/utils\";\n\nconsole.log(IS_WINDOW); // false in node.js\nconsole.log(IS_WINDOW); // true in browser\n*/\n\nvar IS_WINDOW = typeof window !== UNDEFINED;\n/**\n* Check whether the environment is window or node.js.\n* @memberof Consts\n* @name document\n* @example\nimport {IS_WINDOW} from \"@daybrush/utils\";\n\nconsole.log(IS_WINDOW); // false in node.js\nconsole.log(IS_WINDOW); // true in browser\n*/\n\nvar doc = typeof document !== UNDEFINED && document;\nvar prefixes = [\"webkit\", \"ms\", \"moz\", \"o\"];\n/**\n * @namespace CrossBrowser\n */\n\n/**\n* Get a CSS property with a vendor prefix that supports cross browser.\n* @function\n* @param {string} property - A CSS property\n* @return {string} CSS property with cross-browser vendor prefix\n* @memberof CrossBrowser\n* @example\nimport {getCrossBrowserProperty} from \"@daybrush/utils\";\n\nconsole.log(getCrossBrowserProperty(\"transform\")); // \"transform\", \"-ms-transform\", \"-webkit-transform\"\nconsole.log(getCrossBrowserProperty(\"filter\")); // \"filter\", \"-webkit-filter\"\n*/\n\nvar getCrossBrowserProperty =\n/*#__PURE__*/\nfunction (property) {\n  if (!doc) {\n    return \"\";\n  }\n\n  var styles = (doc.body || doc.documentElement).style;\n  var length = prefixes.length;\n\n  if (typeof styles[property] !== UNDEFINED) {\n    return property;\n  }\n\n  for (var i = 0; i < length; ++i) {\n    var name = \"-\" + prefixes[i] + \"-\" + property;\n\n    if (typeof styles[name] !== UNDEFINED) {\n      return name;\n    }\n  }\n\n  return \"\";\n};\n/**\n* get string \"transfrom\" with the vendor prefix.\n* @memberof CrossBrowser\n* @example\nimport {TRANSFORM} from \"@daybrush/utils\";\n\nconsole.log(TRANSFORM); // \"transform\", \"-ms-transform\", \"-webkit-transform\"\n*/\n\nvar TRANSFORM =\n/*#__PURE__*/\ngetCrossBrowserProperty(\"transform\");\n/**\n* get string \"filter\" with the vendor prefix.\n* @memberof CrossBrowser\n* @example\nimport {FILTER} from \"@daybrush/utils\";\n\nconsole.log(FILTER); // \"filter\", \"-ms-filter\", \"-webkit-filter\"\n*/\n\nvar FILTER =\n/*#__PURE__*/\ngetCrossBrowserProperty(\"filter\");\n/**\n* get string \"animation\" with the vendor prefix.\n* @memberof CrossBrowser\n* @example\nimport {ANIMATION} from \"@daybrush/utils\";\n\nconsole.log(ANIMATION); // \"animation\", \"-ms-animation\", \"-webkit-animation\"\n*/\n\nvar ANIMATION =\n/*#__PURE__*/\ngetCrossBrowserProperty(\"animation\");\n/**\n* get string \"keyframes\" with the vendor prefix.\n* @memberof CrossBrowser\n* @example\nimport {KEYFRAMES} from \"@daybrush/utils\";\n\nconsole.log(KEYFRAMES); // \"keyframes\", \"-ms-keyframes\", \"-webkit-keyframes\"\n*/\n\nvar KEYFRAMES =\n/*#__PURE__*/\nANIMATION.replace(\"animation\", \"keyframes\");\n\n/**\n* @namespace\n* @name Utils\n*/\n\n/**\n* Check the type that the value is undefined.\n* @memberof Utils\n* @param {string} value - Value to check the type\n* @return {boolean} true if the type is correct, false otherwise\n* @example\nimport {isUndefined} from \"@daybrush/utils\";\n\nconsole.log(isUndefined(undefined)); // true\nconsole.log(isUndefined(\"\")); // false\nconsole.log(isUndefined(1)); // false\nconsole.log(isUndefined(null)); // false\n*/\n\nfunction isUndefined(value) {\n  return typeof value === UNDEFINED;\n}\n/**\n* Check the type that the value is object.\n* @memberof Utils\n* @param {string} value - Value to check the type\n* @return {} true if the type is correct, false otherwise\n* @example\nimport {isObject} from \"@daybrush/utils\";\n\nconsole.log(isObject({})); // true\nconsole.log(isObject(undefined)); // false\nconsole.log(isObject(\"\")); // false\nconsole.log(isObject(null)); // false\n*/\n\nfunction isObject(value) {\n  return value && typeof value === OBJECT;\n}\n/**\n* Check the type that the value is isArray.\n* @memberof Utils\n* @param {string} value - Value to check the type\n* @return {} true if the type is correct, false otherwise\n* @example\nimport {isArray} from \"@daybrush/utils\";\n\nconsole.log(isArray([])); // true\nconsole.log(isArray({})); // false\nconsole.log(isArray(undefined)); // false\nconsole.log(isArray(null)); // false\n*/\n\nfunction isArray(value) {\n  return Array.isArray(value);\n}\n/**\n* Check the type that the value is string.\n* @memberof Utils\n* @param {string} value - Value to check the type\n* @return {} true if the type is correct, false otherwise\n* @example\nimport {isString} from \"@daybrush/utils\";\n\nconsole.log(isString(\"1234\")); // true\nconsole.log(isString(undefined)); // false\nconsole.log(isString(1)); // false\nconsole.log(isString(null)); // false\n*/\n\nfunction isString(value) {\n  return typeof value === STRING;\n}\n/**\n* Check the type that the value is function.\n* @memberof Utils\n* @param {string} value - Value to check the type\n* @return {} true if the type is correct, false otherwise\n* @example\nimport {isFunction} from \"@daybrush/utils\";\n\nconsole.log(isFunction(function a() {})); // true\nconsole.log(isFunction(() => {})); // true\nconsole.log(isFunction(\"1234\")); // false\nconsole.log(isFunction(1)); // false\nconsole.log(isFunction(null)); // false\n*/\n\nfunction isFunction(value) {\n  return typeof value === FUNCTION;\n}\n/**\n* divide text by space.\n* @memberof Utils\n* @param {string} text - text to divide\n* @return {Array} divided texts\n* @example\nimport {spliceSpace} from \"@daybrush/utils\";\n\nconsole.log(splitSpace(\"a b c d e f g\"));\n// [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\"]\nconsole.log(splitSpace(\"'a,b' c 'd,e' f g\"));\n// [\"'a,b'\", \"c\", \"'d,e'\", \"f\", \"g\"]\n*/\n\nfunction splitSpace(text) {\n  // divide comma(,)\n  var matches = text.match(/(\"[^\"]*\")|('[^']*')|([^\\s()]*(?:\\((?:[^()]*|\\([^()]*\\))*\\))[^\\s()]*)|\\S+/g);\n  return matches || [];\n}\n/**\n* divide text by comma.\n* @memberof Utils\n* @param {string} text - text to divide\n* @return {Array} divided texts\n* @example\nimport {splitComma} from \"@daybrush/utils\";\n\nconsole.log(splitComma(\"a,b,c,d,e,f,g\"));\n// [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\"]\nconsole.log(splitComma(\"'a,b',c,'d,e',f,g\"));\n// [\"'a,b'\", \"c\", \"'d,e'\", \"f\", \"g\"]\n*/\n\nfunction splitComma(text) {\n  // divide comma(,)\n  // \"[^\"]*\"|'[^']*'\n  var matches = text.match(/(\"[^\"]*\"|'[^']*'|[^,\\s()]*\\((?:[^()]*|\\([^()]*\\))*\\)[^,\\s()]*|[^,])+/g);\n  return matches ? matches.map(function (str) {\n    return str.trim();\n  }) : [];\n}\n/**\n* divide text by bracket \"(\", \")\".\n* @memberof Utils\n* @param {string} text - text to divide\n* @return {object} divided texts\n* @example\nimport {splitBracket} from \"@daybrush/utils\";\n\nconsole.log(splitBracket(\"a(1, 2)\"));\n// {prefix: \"a\", value: \"1, 2\", suffix: \"\"}\nconsole.log(splitBracket(\"a(1, 2)b\"));\n// {prefix: \"a\", value: \"1, 2\", suffix: \"b\"}\n*/\n\nfunction splitBracket(text) {\n  var matches = /([^(]*)\\(([\\s\\S]*)\\)([\\s\\S]*)/g.exec(text);\n\n  if (!matches || matches.length < 4) {\n    return {};\n  } else {\n    return {\n      prefix: matches[1],\n      value: matches[2],\n      suffix: matches[3]\n    };\n  }\n}\n/**\n* divide text by number and unit.\n* @memberof Utils\n* @param {string} text - text to divide\n* @return {} divided texts\n* @example\nimport {splitUnit} from \"@daybrush/utils\";\n\nconsole.log(splitUnit(\"10px\"));\n// {prefix: \"\", value: 10, unit: \"px\"}\nconsole.log(splitUnit(\"-10px\"));\n// {prefix: \"\", value: -10, unit: \"px\"}\nconsole.log(splitUnit(\"a10%\"));\n// {prefix: \"a\", value: 10, unit: \"%\"}\n*/\n\nfunction splitUnit(text) {\n  var matches = /^([^\\d|e|\\-|\\+]*)((?:\\d|\\.|-|e-|e\\+)+)(\\S*)$/g.exec(text);\n\n  if (!matches) {\n    return {\n      prefix: \"\",\n      unit: \"\",\n      value: NaN\n    };\n  }\n\n  var prefix = matches[1];\n  var value = matches[2];\n  var unit = matches[3];\n  return {\n    prefix: prefix,\n    unit: unit,\n    value: parseFloat(value)\n  };\n}\n/**\n* transform strings to camel-case\n* @memberof Utils\n* @param {String} text - string\n* @return {String} camel-case string\n* @example\nimport {camelize} from \"@daybrush/utils\";\n\nconsole.log(camelize(\"transform-origin\")); // transformOrigin\nconsole.log(camelize(\"abcd_efg\")); // abcdEfg\nconsole.log(camelize(\"abcd efg\")); // abcdEfg\n*/\n\nfunction camelize(str) {\n  return str.replace(/[\\s-_]([a-z])/g, function (all, letter) {\n    return letter.toUpperCase();\n  });\n}\n/**\n* transform a camelized string into a lowercased string.\n* @memberof Utils\n* @param {string} text - a camel-cased string\n* @param {string} [separator=\"-\"] - a separator\n* @return {string}  a lowercased string\n* @example\nimport {decamelize} from \"@daybrush/utils\";\n\nconsole.log(decamelize(\"transformOrigin\")); // transform-origin\nconsole.log(decamelize(\"abcdEfg\", \"_\")); // abcd_efg\n*/\n\nfunction decamelize(str, separator) {\n  if (separator === void 0) {\n    separator = \"-\";\n  }\n\n  return str.replace(/([a-z])([A-Z])/g, function (all, letter, letter2) {\n    return \"\" + letter + separator + letter2.toLowerCase();\n  });\n}\n/**\n* transforms something in an array into an array.\n* @memberof Utils\n* @param - Array form\n* @return an array\n* @example\nimport {toArray} from \"@daybrush/utils\";\n\nconst arr1 = toArray(document.querySelectorAll(\".a\")); // Element[]\nconst arr2 = toArray(document.querySelectorAll<HTMLElement>(\".a\")); // HTMLElement[]\n*/\n\nfunction toArray(value) {\n  return [].slice.call(value);\n}\n/**\n* Date.now() method\n* @memberof CrossBrowser\n* @return {number} milliseconds\n* @example\nimport {now} from \"@daybrush/utils\";\n\nconsole.log(now()); // 12121324241(milliseconds)\n*/\n\nfunction now() {\n  return Date.now ? Date.now() : new Date().getTime();\n}\n/**\n* window.requestAnimationFrame() method with cross browser.\n* @function\n* @memberof CrossBrowser\n* @param {FrameRequestCallback} callback - The function to call when it's time to update your animation for the next repaint.\n* @return {number} id\n* @example\nimport {requestAnimationFrame} from \"@daybrush/utils\";\n\nrequestAnimationFrame((timestamp) => {\n  console.log(timestamp);\n});\n*/\n\nvar requestAnimationFrame =\n/*#__PURE__*/\nfunction () {\n  var firstTime = now();\n  var raf = IS_WINDOW && (window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame);\n  return raf ? raf.bind(window) : function (callback) {\n    var currTime = now();\n    var id = window.setTimeout(function () {\n      callback(currTime - firstTime);\n    }, 1000 / 60);\n    return id;\n  };\n}();\n\n/**\n* @namespace\n* @name Color\n*/\n\n/**\n* Remove the # from the hex color.\n* @memberof Color\n* @param {} hex - hex color\n* @return {} hex color\n* @example\nimport {cutHex} from \"@daybrush/utils\";\n\nconsole.log(cutHex(\"#000000\")) // \"000000\"\n*/\n\nfunction cutHex(hex) {\n  return hex.replace(\"#\", \"\");\n}\n/**\n* convert hex color to rgb color.\n* @memberof Color\n* @param {} hex - hex color\n* @return {} rgb color\n* @example\nimport {hexToRGBA} from \"@daybrush/utils\";\n\nconsole.log(hexToRGBA(\"#00000005\"));\n// [0, 0, 0, 1]\nconsole.log(hexToRGBA(\"#201045\"));\n// [32, 16, 69, 1]\n*/\n\nfunction hexToRGBA(hex) {\n  var h = cutHex(hex);\n  var r = parseInt(h.substring(0, 2), 16);\n  var g = parseInt(h.substring(2, 4), 16);\n  var b = parseInt(h.substring(4, 6), 16);\n  var a = parseInt(h.substring(6, 8), 16) / 255;\n\n  if (isNaN(a)) {\n    a = 1;\n  }\n\n  return [r, g, b, a];\n}\n/**\n* convert 3(or 4)-digit hex color to 6(or 8)-digit hex color.\n* @memberof Color\n* @param {} hex - 3(or 4)-digit hex color\n* @return {} 6(or 8)-digit hex color\n* @example\nimport {toFullHex} from \"@daybrush/utils\";\n\nconsole.log(toFullHex(\"#123\")); // \"#112233\"\nconsole.log(toFullHex(\"#123a\")); // \"#112233aa\"\n*/\n\nfunction toFullHex(h) {\n  var r = h.charAt(1);\n  var g = h.charAt(2);\n  var b = h.charAt(3);\n  var a = h.charAt(4);\n  var arr = [\"#\", r, r, g, g, b, b, a, a];\n  return arr.join(\"\");\n}\n/**\n* convert hsl color to rgba color.\n* @memberof Color\n* @param {} hsl - hsl color(hue: 0 ~ 360, saturation: 0 ~ 1, lightness: 0 ~ 1, alpha: 0 ~ 1)\n* @return {} rgba color\n* @example\nimport {hslToRGBA} from \"@daybrush/utils\";\n\nconsole.log(hslToRGBA([150, 0.5, 0.4]));\n// [51, 153, 102, 1]\n*/\n\nfunction hslToRGBA(hsl) {\n  var h = hsl[0];\n  var s = hsl[1];\n  var l = hsl[2];\n\n  if (h < 0) {\n    h += Math.floor((Math.abs(h) + 360) / 360) * 360;\n  }\n\n  h %= 360;\n  var c = (1 - Math.abs(2 * l - 1)) * s;\n  var x = c * (1 - Math.abs(h / 60 % 2 - 1));\n  var m = l - c / 2;\n  var rgb;\n\n  if (h < 60) {\n    rgb = [c, x, 0];\n  } else if (h < 120) {\n    rgb = [x, c, 0];\n  } else if (h < 180) {\n    rgb = [0, c, x];\n  } else if (h < 240) {\n    rgb = [0, x, c];\n  } else if (h < 300) {\n    rgb = [x, 0, c];\n  } else if (h < 360) {\n    rgb = [c, 0, x];\n  }\n\n  var result = [Math.round((rgb[0] + m) * 255), Math.round((rgb[1] + m) * 255), Math.round((rgb[2] + m) * 255), hsl.length > 3 ? hsl[3] : 1];\n  return result;\n}\n/**\n* convert string to rgba color.\n* @memberof Color\n* @param {} - 3-hex(#000), 4-hex(#0000) 6-hex(#000000), 8-hex(#00000000) or RGB(A), or HSL(A)\n* @return {} rgba color\n* @example\nimport {stringToRGBA} from \"@daybrush/utils\";\n\nconsole.log(stringToRGBA(\"#000000\")); // [0, 0, 0, 1]\nconsole.log(stringToRGBA(\"rgb(100, 100, 100)\")); // [100, 100, 100, 1]\nconsole.log(stringToRGBA(\"hsl(150, 0.5, 0.4)\")); // [51, 153, 102, 1]\n*/\n\nfunction stringToRGBA(color) {\n  if (color.charAt(0) === \"#\") {\n    if (color.length === 4 || color.length === 5) {\n      return hexToRGBA(toFullHex(color));\n    } else {\n      return hexToRGBA(color);\n    }\n  } else if (color.indexOf(\"(\") !== -1) {\n    // in bracket.\n    var _a = splitBracket(color),\n        prefix = _a.prefix,\n        value = _a.value;\n\n    if (!prefix || !value) {\n      return;\n    }\n\n    var arr = splitComma(value);\n    var colorArr = [];\n    var length = arr.length;\n\n    switch (prefix) {\n      case RGB:\n      case RGBA:\n        for (var i = 0; i < length; ++i) {\n          colorArr[i] = parseFloat(arr[i]);\n        }\n\n        return colorArr;\n\n      case HSL:\n      case HSLA:\n        for (var i = 0; i < length; ++i) {\n          if (arr[i].indexOf(\"%\") !== -1) {\n            colorArr[i] = parseFloat(arr[i]) / 100;\n          } else {\n            colorArr[i] = parseFloat(arr[i]);\n          }\n        } // hsl, hsla to rgba\n\n\n        return hslToRGBA(colorArr);\n    }\n  }\n\n  return;\n}\n\n/**\n * Returns all element descendants of node that\n * match selectors.\n */\n\n/**\n * Checks if the specified class value exists in the element's class attribute.\n * @memberof DOM\n * @param - A DOMString containing one or more selectors to match\n * @param - If multi is true, a DOMString containing one or more selectors to match against.\n * @example\nimport {$} from \"@daybrush/utils\";\n\nconsole.log($(\"div\")); // div element\nconsole.log($(\"div\", true)); // [div, div] elements\n*/\n\nfunction $(selectors, multi) {\n  return multi ? doc.querySelectorAll(selectors) : doc.querySelector(selectors);\n}\n/**\n* Checks if the specified class value exists in the element's class attribute.\n* @memberof DOM\n* @param element - target\n* @param className - the class name to search\n* @return {boolean} return false if the class is not found.\n* @example\nimport {hasClass} from \"@daybrush/utils\";\n\nconsole.log(hasClass(element, \"start\")); // true or false\n*/\n\nfunction hasClass(element, className) {\n  if (element.classList) {\n    return element.classList.contains(className);\n  }\n\n  return !!element.className.match(new RegExp(\"(\\\\s|^)\" + className + \"(\\\\s|$)\"));\n}\n/**\n* Add the specified class value. If these classe already exist in the element's class attribute they are ignored.\n* @memberof DOM\n* @param element - target\n* @param className - the class name to add\n* @example\nimport {addClass} from \"@daybrush/utils\";\n\naddClass(element, \"start\");\n*/\n\nfunction addClass(element, className) {\n  if (element.classList) {\n    element.classList.add(className);\n  } else {\n    element.className += \" \" + className;\n  }\n}\n/**\n* Removes the specified class value.\n* @memberof DOM\n* @param element - target\n* @param className - the class name to remove\n* @example\nimport {removeClass} from \"@daybrush/utils\";\n\nremoveClass(element, \"start\");\n*/\n\nfunction removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else {\n    var reg = new RegExp(\"(\\\\s|^)\" + className + \"(\\\\s|$)\");\n    element.className = element.className.replace(reg, \" \");\n  }\n}\n/**\n* Gets the CSS properties from the element.\n* @memberof DOM\n* @param elements - elements\n* @param properites - the CSS properties\n* @return returns CSS properties and values.\n* @example\nimport {fromCSS} from \"@daybrush/utils\";\n\nconsole.log(fromCSS(element, [\"left\", \"opacity\", \"top\"])); // {\"left\": \"10px\", \"opacity\": 1, \"top\": \"10px\"}\n*/\n\nfunction fromCSS(elements, properties) {\n  if (!elements || !properties || !properties.length) {\n    return {};\n  }\n\n  var element;\n\n  if (elements instanceof Element) {\n    element = elements;\n  } else if (elements.length) {\n    element = elements[0];\n  } else {\n    return {};\n  }\n\n  var cssObject = {};\n  var styles = window.getComputedStyle(element);\n  var length = properties.length;\n\n  for (var i = 0; i < length; ++i) {\n    cssObject[properties[i]] = styles[properties[i]];\n  }\n\n  return cssObject;\n}\n/**\n* Sets up a function that will be called whenever the specified event is delivered to the target\n* @memberof DOM\n* @param - event target\n* @param - A case-sensitive string representing the event type to listen for.\n* @param - The object which receives a notification (an object that implements the Event interface) when an event of the specified type occurs\n* @param - An options object that specifies characteristics about the event listener. The available options are:\n* @example\nimport {addEvent} from \"@daybrush/utils\";\n\naddEvent(el, \"click\", e => {\n  console.log(e);\n});\n*/\n\nfunction addEvent(el, type, listener, options) {\n  el.addEventListener(type, listener, options);\n}\n/**\n* removes from the EventTarget an event listener previously registered with EventTarget.addEventListener()\n* @memberof DOM\n* @param - event target\n* @param - A case-sensitive string representing the event type to listen for.\n* @param - The EventListener function of the event handler to remove from the event target.\n* @example\nimport {addEvent, removeEvent} from \"@daybrush/utils\";\nconst listener = e => {\n  console.log(e);\n};\naddEvent(el, \"click\", listener);\nremoveEvent(el, \"click\", listener);\n*/\n\nfunction removeEvent(el, type, listener) {\n  el.removeEventListener(type, listener);\n}\n\nexport { RGB, RGBA, HSL, HSLA, COLOR_MODELS, FUNCTION, PROPERTY, ARRAY, OBJECT, STRING, NUMBER, UNDEFINED, IS_WINDOW, doc as document, getCrossBrowserProperty, TRANSFORM, FILTER, ANIMATION, KEYFRAMES, cutHex, hexToRGBA, toFullHex, hslToRGBA, stringToRGBA, isUndefined, isObject, isArray, isString, isFunction, splitSpace, splitComma, splitBracket, splitUnit, camelize, decamelize, toArray, now, requestAnimationFrame, $, hasClass, addClass, removeClass, fromCSS, addEvent, removeEvent };\n//# sourceMappingURL=utils.esm.js.map\n","/*\nCopyright (c) 2019 Daybrush\nname: data-dom\nlicense: MIT\nauthor: Daybrush\nrepository: git+https://github.com/daybrush/data-dom.git\nversion: 0.0.11\n*/\nimport { isUndefined } from '@daybrush/utils';\n\nfunction concat(arr) {\n  return [].concat(arr);\n}\n\nfunction render(createElement, structure, parentStructureIndex, parentEl) {\n  if (parentStructureIndex === void 0) {\n    parentStructureIndex = 0;\n  }\n\n  var children = structure.children;\n  var el = createElement(structure);\n  structure.element = el;\n\n  if (structure.ref) {\n    structure.ref(structure, parentStructureIndex);\n  }\n\n  if (children) {\n    concat(children).filter(function (child) {\n      return child;\n    }).forEach(function (child, i) {\n      render(createElement, child, i, el);\n    });\n  }\n\n  parentEl && parentEl.appendChild(el);\n  return structure;\n}\n\nfunction compare(prevArr, nextArr, syncCallback) {\n  var prevKeys = prevArr.map(function (_a, i) {\n    var key = _a.key;\n    return isUndefined(key) ? i : key;\n  });\n  var nextKeys = nextArr.map(function (_a, i) {\n    var key = _a.key;\n    return isUndefined(key) ? i : key;\n  });\n  var prevKeysObject = {};\n  var nextKeysObject = {};\n  var added = [];\n  var removed = [];\n  var changed = [];\n  prevKeys.forEach(function (key, i) {\n    prevKeysObject[key] = i;\n  });\n  nextKeys.forEach(function (key, i) {\n    if (!(key in prevKeysObject)) {\n      added.push(i);\n    } else {\n      syncCallback(prevArr[prevKeysObject[key]], nextArr[i], i);\n    }\n\n    nextKeysObject[key] = i;\n  });\n  prevKeys.forEach(function (key, i) {\n    var index = nextKeysObject[key];\n\n    if (isUndefined(index)) {\n      removed.push(i);\n    } else if (i !== index) {\n      changed.push([i, index]);\n    }\n  });\n  changed.sort(function (a, b) {\n    return a[1] > b[1] ? 1 : -1;\n  });\n  var newChanged = changed.filter(function (changeInfo) {\n    return changeInfo[1] < changeInfo[0];\n  });\n  return {\n    added: added,\n    removed: removed,\n    changed: newChanged\n  };\n}\n\nfunction update(createElement, updateElement, prevStructure, nextStructure, parentStructure, startIndex) {\n  if (startIndex === void 0) {\n    startIndex = 0;\n  }\n\n  var prevStructures = concat(prevStructure || []);\n  var nextStructures = concat(nextStructure || []);\n\n  var _a = compare(prevStructures, nextStructures || [], function (prev, next, index) {\n    next.element = prev.element;\n\n    if (next.ref) {\n      next.ref(next, startIndex + index);\n    }\n\n    updateElement(prev, next);\n    update(createElement, updateElement, prev.children, next.children, next);\n  }),\n      added = _a.added,\n      changed = _a.changed,\n      removed = _a.removed;\n\n  if (parentStructure) {\n    var parentElement_1 = parentStructure.element;\n    removed.reverse().forEach(function (index) {\n      parentElement_1.removeChild(prevStructures[index].element);\n    });\n\n    if (changed.length) {\n      var min_1 = Infinity;\n      var max_1 = -1;\n      changed.forEach(function (_a) {\n        var from = _a[0],\n            to = _a[1];\n        min_1 = Math.min(min_1, to);\n        max_1 = Math.max(max_1, to);\n      });\n      added.forEach(function (index) {\n        render(createElement, nextStructures[index], index);\n        min_1 = Math.min(min_1, index);\n        max_1 = Math.max(max_1, index);\n      });\n\n      for (var i = max_1; i >= min_1; --i) {\n        parentElement_1.insertBefore(nextStructure[i].element, nextStructure[i + 1] && nextStructure[i + 1].element);\n      }\n    } else {\n      added.forEach(function (index) {\n        var element = render(createElement, nextStructures[index], index).element;\n        parentElement_1.insertBefore(element, nextStructures[index + 1] && nextStructures[index + 1].element);\n      });\n    }\n\n    if (nextStructure) {\n      parentStructure.children = nextStructure;\n    }\n  }\n}\n\nvar DataDOM =\n/*#__PURE__*/\nfunction () {\n  function DataDOM(createElement, updateElement) {\n    this.createElement = createElement;\n    this.updateElement = updateElement;\n  }\n\n  var __proto = DataDOM.prototype;\n\n  __proto.render = function (structure, parentEl) {\n    return render(this.createElement, structure, 0, parentEl);\n  };\n\n  __proto.update = function (prevStructure, nextStructure, parentStructure) {\n    update(this.createElement, this.updateElement, prevStructure, nextStructure, parentStructure);\n    return this;\n  };\n\n  return DataDOM;\n}();\n\nexport default DataDOM;\n//# sourceMappingURL=datadom.esm.js.map\n","import { getKeytimesStructure } from \"./KeytimesStructure\";\nimport { Ids, ElementStructure } from \"./types\";\n\nexport function getHeaderAreaStructure(ids: Ids, zoom: number, maxDuration: number, maxTime: number): ElementStructure {\n    return {\n        selector: \".header_area\",\n        ref: e => {\n            ids.keyframesScrollAreas = [];\n            ids.keyframesAreas = [];\n            ids.propertiesAreas = [];\n        },\n        children: [\n            {\n                ref: (e: ElementStructure) => {\n                    ids.propertiesAreas[0] = e;\n                },\n                selector: \".properties_area\",\n                children: [\n                    {\n                        selector: \".property\",\n                        html: \"Name\",\n                    },\n                ],\n            },\n            {\n                selector: \".values_area\",\n                children: {\n                    selector: \".value\",\n                    children: {\n                        key: \"add\",\n                        selector: \".add\",\n                        html: \"+\",\n                        ref: (e: ElementStructure) => {\n                            ids.addItem = e;\n                        },\n                    },\n                },\n            },\n            getKeytimesAreaStructure(ids, zoom, maxDuration, maxTime),\n        ],\n    };\n}\n\nexport function getKeytimesAreaStructure(\n    ids: Ids,\n    zoom: number,\n    maxDuration: number,\n    maxTime: number,\n): ElementStructure {\n    return {\n        ref: e => {\n            ids.keyframesAreas[0] = e;\n        },\n        selector: \".keyframes_area\",\n        children: {\n            style: {\n                minWidth: `${50 * maxTime}px`,\n                width: `${Math.min(maxDuration ? maxTime / maxDuration : 1, 2) * zoom * 100}%`,\n            },\n            dataset: {\n                width: Math.min(maxDuration ? maxTime / maxDuration : 1, 2),\n            },\n            ref: (e: ElementStructure) => {\n                ids.keyframesScrollAreas[0] = e;\n            },\n            selector: \".keyframes_scroll_area\",\n            children: {\n                ref: e => {\n                    ids.cursors = [];\n                },\n                selector: \".keyframes\",\n                children: [\n                    {\n                        ref: e => {\n                            ids.keytimesContainer = e;\n                        },\n                        selector: \".keyframes_container\",\n                        children: getKeytimesStructure(maxTime),\n                    },\n                    {\n                        selector: \".keyframe_cursor\",\n                        ref: e => {\n                            ids.cursors[0] = e;\n                        },\n                    },\n                ],\n            },\n        },\n    };\n}\n","export function getKeytimesStructure(maxTime: number) {\n    const keytimes = [];\n\n    for (let time = 0; time <= maxTime; ++time) {\n        keytimes.push({\n            key: time,\n            dataset: {\n                time,\n            },\n            selector: \".keytime\",\n            style: {\n                width: `${100 / maxTime}%`,\n            },\n            children: [\n                {\n                    selector: \"span\",\n                    html: `${time}`,\n                },\n                {selector: \".graduation.start\"},\n                {selector: \".graduation.quarter\"},\n                {selector: \".graduation.half\"},\n                {selector: \".graduation.quarter3\"},\n            ],\n        });\n    }\n    return keytimes;\n}\nexport function getLinesStructure(maxTime: number) {\n    const lines = [];\n\n    for (let time = 0; time <= maxTime; ++time) {\n        lines.push({\n            key: time,\n            selector: \".division_line\",\n            style: {\n                left: `${100 / maxTime * time}%`,\n            },\n        });\n    }\n    return lines;\n}\n","import { toValue, applyStyle, isSceneItem, isScene } from \"./utils\";\nimport { ElementStructure, Ids, TimelineInfo, PropertiesInfo } from \"./types\";\nimport { getLinesStructure } from \"./KeytimesStructure\";\nimport { isUndefined } from \"@daybrush/utils\";\n\nexport function updateKeyframesStructure(keyframes: ElementStructure[], maxTime: number) {\n    keyframes.forEach(keyframe => {\n        const { selector, dataset, style, element } = keyframe;\n        if (selector === \".keyframe\") {\n            style.left = `${dataset.time / maxTime * 100}%`;\n        } else {\n            style.left = `${dataset.from / maxTime * 100}%`,\n                style.width = `${(dataset.to - dataset.from) / maxTime * 100}%`;\n        }\n        applyStyle(element, style);\n    });\n}\n\nexport function getKeyframesAreaStructure(\n    ids: Ids,\n    keyframesList: ElementStructure[],\n    zoom: number,\n    maxDuration: number,\n    maxTime: number,\n): ElementStructure {\n    const width = Math.min(maxDuration ? maxTime / maxDuration : 1, 2);\n    return {\n        ref: e => {\n            ids.keyframesAreas[1] = e;\n        },\n        selector: \".keyframes_area\",\n        children: {\n            style: {\n                minWidth: `${50 * maxTime}px`,\n                width: `${width * zoom * 100}%`,\n            },\n            dataset: {\n                width,\n            },\n            ref: e => {\n                ids.keyframesScrollAreas[1] = e;\n            },\n            selector: \".keyframes_scroll_area\",\n            children: getKeyframesScrollAreaChildrenStructure(ids, keyframesList, maxTime),\n        },\n    };\n}\nexport function getKeyframesScrollAreaChildrenStructure(\n    ids: Ids,\n    keyframesList: ElementStructure[],\n    maxTime: number,\n): ElementStructure[] {\n    return [\n        ...keyframesList,\n        {\n            key: \"cursor\",\n            selector: \".keyframe_cursor\",\n            ref: e => {\n                ids.cursors[1] = e;\n            },\n        },\n        {\n            key: \"lineArea\",\n            ref: e => {\n                ids.lineArea = e;\n            },\n            selector: \".line_area\",\n            children: getLinesStructure(maxTime),\n        },\n    ];\n}\nexport function getKeyframesListStructure(\n    ids: Ids,\n    timelineInfo: TimelineInfo,\n    maxTime: number,\n): ElementStructure[] {\n    const keyframesList: ElementStructure[] = [];\n\n    for (const key in timelineInfo) {\n        const propertiesInfo = timelineInfo[key];\n        const keyframes = getKeyframesStructure(propertiesInfo, maxTime);\n\n        keyframesList.push({\n            ref: (e, i) => {\n                ids.keyframesList[i] = e;\n                ids.keyframesContainers[i] = e.children as ElementStructure;\n            },\n            selector: \".keyframes\",\n            key,\n            dataset: {\n                item: propertiesInfo.isItem ? \"1\" : \"0\",\n                key,\n            },\n            datas: propertiesInfo,\n            children: {\n                selector: \".keyframes_container\",\n                children: keyframes,\n            },\n        });\n    }\n    return keyframesList;\n}\nexport function getDelayFrameStructure(\n    time: number,\n    nextTime: number,\n    maxTime: number,\n): ElementStructure {\n    return {\n        selector: \".keyframe_delay\",\n        key: `delay${time},${nextTime}`,\n        datas: {\n            time: -1,\n        },\n        style: {\n            left: `${time / maxTime * 100}%`,\n            width: `${(nextTime - time) / maxTime * 100}%`,\n        },\n    };\n}\nexport function getKeyframesStructure(\n    propertiesInfo: PropertiesInfo,\n    maxTime: number,\n): ElementStructure[] {\n    const { item, frames, properties } = propertiesInfo;\n    const isItScene = isScene(item);\n    const duration = item.getDuration();\n\n    const keyframes: ElementStructure[] = [];\n    const delayFrames: ElementStructure[] = [];\n    const keyframeLines: ElementStructure[] = [];\n\n    frames.forEach(([time, iterationTime, value], i): ElementStructure => {\n        const valueText = toValue(value);\n\n        if (\n            i === 0\n            && time === 0\n            && iterationTime === 0\n            && isUndefined(value)\n            && !properties.length\n        ) {\n            return;\n        }\n        if (frames[i + 1]) {\n            const [nextTime, nextIterationTime, nextValue] = frames[i + 1];\n            const nextValueText = toValue(nextValue);\n\n            if (\n                (iterationTime === 0 && nextIterationTime === 0)\n                || (iterationTime === duration && nextIterationTime === duration)\n            ) {\n                delayFrames.push(\n                    getDelayFrameStructure(time, nextTime, maxTime),\n                );\n            }\n            if (isItScene) {\n                if (valueText !== nextValueText) {\n                    keyframes.push({\n                        selector: \".keyframe_group\",\n                        key: `group${keyframes.length}`,\n                        datas: {\n                            time: `${time},${nextTime}`,\n                            from: time,\n                            to: nextTime,\n                        },\n                        dataset: {\n                            time,\n                        },\n                        style: {\n                            left: `${time / maxTime * 100}%`,\n                            width: `${(nextTime - time) / maxTime * 100}%`,\n                        },\n                    });\n                }\n                return;\n            }\n            if (!isUndefined(value) && !isUndefined(nextValue) && valueText !== nextValueText) {\n                keyframeLines.push({\n                    selector: \".keyframe_line\",\n                    key: `line${keyframeLines.length}`,\n                    datas: {\n                        time: `${time},${nextTime}`,\n                        from: time,\n                        to: nextTime,\n                    },\n                    style: {\n                        left: `${time / maxTime * 100}%`,\n                        width: `${(nextTime - time) / maxTime * 100}%`,\n                    },\n                });\n            }\n        }\n\n        if (isItScene) {\n            return;\n        }\n\n        keyframes.push({\n            key: `keyframe${keyframes.length}`,\n            selector: \".keyframe\",\n            dataset: {\n                time,\n            },\n            datas: {\n                time,\n                iterationTime,\n                value: valueText,\n            },\n            style: {\n                left: `${time / maxTime * 100}%`,\n            },\n            html: `${time} ${valueText}`,\n        });\n    });\n\n    return [...keyframes, ...delayFrames, ...keyframeLines];\n}\n","import { getKeyframesAreaStructure, getKeyframesListStructure } from \"./KeyframesStructure\";\nimport { ElementStructure, Ids, TimelineInfo } from \"./types\";\nimport { getPropertiesStructure } from \"./PropertiesStructure\";\nimport { getValuesStructure } from \"./ValuesStructure\";\n\nexport function getScrollAreaStructure(\n    ids: Ids,\n    timelineInfo: TimelineInfo,\n    zoom: number,\n    maxDuration: number,\n    maxTime: number,\n): ElementStructure {\n    const keyframesList: ElementStructure[] = getKeyframesListStructure(ids, timelineInfo, maxTime);\n\n    return {\n        ref: e => {\n            ids.scrollArea = e;\n            ids.keyframesList = [];\n            ids.keyframesContainers = [];\n        },\n        selector: \".scroll_area\",\n        children: [\n            {\n                ref: e => {\n                    ids.propertiesAreas[1] = e;\n                    ids.properties = [];\n                },\n                selector: \".properties_area\",\n                children: [\n                    {\n                        selector: \".properties_scroll_area\",\n                        children: getPropertiesStructure(ids, timelineInfo),\n                    },\n                ],\n            },\n            {\n                ref: e => {\n                    ids.valuesArea = e;\n                    ids.values = [];\n                },\n                selector: \".values_area\",\n                children: getValuesStructure(ids, timelineInfo),\n            },\n            getKeyframesAreaStructure(ids, keyframesList, zoom, maxDuration, maxTime),\n        ],\n    };\n}\n","import { ElementStructure, Ids, TimelineInfo } from \"./types\";\n\nexport function getPropertiesStructure(ids: Ids, timelineInfo: TimelineInfo) {\n    const properties: ElementStructure[] = [];\n\n    for (const key in timelineInfo) {\n        const propertiesInfo = timelineInfo[key];\n        const propertyNames = propertiesInfo.keys;\n        const length = propertyNames.length;\n        const id = propertyNames[length - 1];\n\n        properties.push({\n            ref: (e, i) => {\n                ids.properties[i] = e;\n            },\n            key,\n            selector: \".property\",\n            dataset: {\n                key,\n                object: propertiesInfo.isParent ? \"1\" : \"0\",\n                item: propertiesInfo.isItem ? \"1\" : \"0\",\n            },\n            datas: propertiesInfo,\n            style: {\n                paddingLeft: `${10 + (length - 1) * 20}px`,\n            },\n            children: [\n                { selector: \".arrow\" },\n                {\n                    selector: \"span\",\n                    html: id,\n                },\n                { selector: \".remove\" },\n            ],\n        });\n    }\n    return properties;\n}\n","import { isObject } from \"@daybrush/utils\";\nimport { Ids, ElementStructure, TimelineInfo } from \"./types\";\n\nexport function getValuesStructure(ids: Ids, timelineInfo: TimelineInfo): ElementStructure[] {\n    const values: ElementStructure[] = [];\n\n    for (const key in timelineInfo) {\n        const propertiesInfo = timelineInfo[key];\n        const frames = propertiesInfo.frames;\n        values.push({\n            ref: (e, i) => {\n                ids.values[i] = e;\n            },\n            key,\n            selector: \".value\",\n            dataset: {\n                key,\n                item: propertiesInfo.isItem ? \"1\" : \"0\",\n                object: propertiesInfo.isParent ? \"1\" : \"0\",\n            },\n            datas: propertiesInfo,\n            children: propertiesInfo.isParent\n            ? {\n                key: \"add\",\n                selector: \".add\",\n                html: \"+\",\n            }\n            : {\n                key: \"input\",\n                selector: \"input\",\n                attr: {\n                    value: frames[0] ? frames[0][1] : \"\",\n                },\n            },\n        });\n    }\n    return values;\n}\n","import Scene, { AnimatorState, SceneItem } from \"scenejs\";\nimport { ITERATION_COUNT, DELAY, PLAY_SPEED, DIRECTION, REVERSE, ALTERNATE, ALTERNATE_REVERSE } from \"./consts\";\nimport { TimelineInfo } from \"./types\";\nimport { isScene } from \"./utils\";\nimport { isUndefined, isObject } from \"@daybrush/utils\";\n\nexport const MAXIMUM = 1000000;\nexport function toFixed(num: number) {\n    return Math.round(num * MAXIMUM) / MAXIMUM;\n}\nexport function addEntry(entries: number[][], time: number, keytime: number) {\n    const prevEntry = entries[entries.length - 1];\n\n    (!prevEntry || prevEntry[0] !== time || prevEntry[1] !== keytime) &&\n        entries.push([toFixed(time), toFixed(keytime)]);\n}\nexport function dotNumber(a1: number, a2: number, b1: number, b2: number) {\n    return (a1 * b2 + a2 * b1) / (b1 + b2);\n  }\nexport function getEntries(times: number[], states: AnimatorState[]) {\n    if (!times.length) {\n        return [];\n    }\n    let entries = times.map(time => ([time, time]));\n    let nextEntries = [];\n    const firstEntry = entries[0];\n    if (firstEntry[0] !== 0 && states[states.length - 1][DELAY]) {\n        entries.unshift([0, 0]);\n    }\n\n    states.forEach(state => {\n        const iterationCount = state[ITERATION_COUNT] as number;\n        const delay = state[DELAY];\n        const playSpeed = state[PLAY_SPEED];\n        const direction = state[DIRECTION];\n        const intCount = Math.ceil(iterationCount);\n        const currentDuration = entries[entries.length - 1][0];\n        const length = entries.length;\n        const lastTime = currentDuration * iterationCount;\n\n        for (let i = 0; i < intCount; ++i) {\n            const isReverse =\n                direction === REVERSE ||\n                direction === ALTERNATE && i % 2 ||\n                direction === ALTERNATE_REVERSE && !(i % 2);\n\n            for (let j = 0; j < length; ++j) {\n                const entry = entries[isReverse ? length - j - 1 : j];\n                const time = entry[1];\n                const currentTime = currentDuration * i + (isReverse ? currentDuration - entry[0] : entry[0]);\n                const prevEntry = entries[isReverse ? length - j : j - 1];\n\n                if (currentTime > lastTime) {\n                    if (j !== 0) {\n                        const prevTime = currentDuration * i +\n                            (isReverse ? currentDuration - prevEntry[0] : prevEntry[0]);\n                        const divideTime = dotNumber(prevEntry[1], time, lastTime - prevTime, currentTime - lastTime);\n\n                        addEntry(nextEntries, (delay + currentDuration * iterationCount) / playSpeed, divideTime);\n                    }\n                    break;\n                } else if (\n                    currentTime === lastTime\n                    && nextEntries.length\n                    && nextEntries[nextEntries.length - 1][0] === lastTime + delay\n                ) {\n                    break;\n                }\n                addEntry(nextEntries, (delay + currentTime) / playSpeed, time);\n            }\n        }\n        // delay time\n        delay && nextEntries.unshift([0, nextEntries[0][1]]);\n\n        entries = nextEntries;\n        nextEntries = [];\n    });\n\n    return entries;\n}\nexport function getItemInfo(\n    timelineInfo: TimelineInfo,\n    items: Array<Scene | SceneItem>,\n    names: Array<string | number>,\n    item: SceneItem) {\n    item.update();\n    const times = item.times.slice();\n\n    const originalDuration = item.getDuration();\n    (!item.getFrame(0)) && times.unshift(0);\n    (!item.getFrame(originalDuration)) && times.push(originalDuration);\n    const entries = getEntries(times, items.slice(1).map(animator => animator.state).reverse());\n    const parentItem = items[items.length - 2] as Scene;\n\n    (function getPropertyInfo(itemNames: any, ...properties: any[]) {\n        const frames = [];\n        const isParent = isObject(itemNames);\n        const isItem = properties.length === 0;\n        entries.forEach(([time, iterationTime]) => {\n            const value = item.get(iterationTime, ...properties);\n            if (isUndefined(value) && properties.length) {\n                return;\n            }\n            frames.push([time, iterationTime, value]);\n        });\n        const keys = [...names, ...properties];\n        const key = keys.join(\"///\");\n\n        if (key) {\n            timelineInfo[key] = {\n                key,\n                keys,\n                parentItem,\n                isParent,\n                isItem,\n                item,\n                names,\n                properties,\n                frames,\n            };\n        }\n        if (isParent) {\n            for (const property in itemNames) {\n                getPropertyInfo(itemNames[property], ...properties, property);\n            }\n        }\n    })(item.names);\n}\nexport function getTimelineInfo(scene: Scene | SceneItem): TimelineInfo {\n    const timelineInfo: TimelineInfo = {};\n    (function sceneForEach(...items: Array<Scene | SceneItem>) {\n        const length = items.length;\n        const lastItem = items[length - 1];\n        const names = items.slice(1).map(item => item.getId());\n        if (isScene(lastItem)) {\n            if (names.length) {\n                const key = names.join(\"///\");\n\n                const times = [0, lastItem.getDuration()];\n                const entries = getEntries(times, items.slice(1).map(animator => animator.state).reverse());\n                const frames = [];\n                entries.forEach(([time, iterationTime]) => {\n                    frames.push([time, iterationTime, iterationTime]);\n                });\n                timelineInfo[key] = {\n                    key,\n                    keys: names,\n                    isItem: true,\n                    isParent: true,\n                    parentItem: items[length - 2] as Scene,\n                    item: lastItem,\n                    names: [],\n                    properties: [],\n                    frames,\n                };\n            }\n            lastItem.forEach((item: Scene | SceneItem) => {\n                sceneForEach(...items, item);\n            });\n        } else {\n            getItemInfo(timelineInfo, items, names, lastItem);\n        }\n    })(scene);\n    return timelineInfo;\n}\n","import Scene, { SceneItem } from \"scenejs\";\nimport {\n    getTarget,\n    hasClass, removeClass, addClass,\n    flatObject, splitProperty, findElementIndexByPosition,\n    createElement, updateElement, findIndexByProperty, findStructure, numberFormat, isScene, findStructureByProperty,\n} from \"./utils\";\nimport { drag } from \"@daybrush/drag\";\nimport { CSS } from \"./consts\";\nimport { IObject, addEvent, isUndefined } from \"@daybrush/utils\";\nimport Axes, { PinchInput } from \"@egjs/axes\";\nimport { ElementStructure, Ids, PropertiesInfo, TimelineInfo } from \"./types\";\nimport { dblCheck } from \"./dblcheck\";\nimport KeyController from \"keycon\";\nimport DataDOM from \"data-dom\";\nimport { getHeaderAreaStructure, getKeytimesAreaStructure } from \"./HeaderAreaStructure\";\nimport { getScrollAreaStructure } from \"./ScrollAreaStructure\";\nimport { getControlAreaStructure } from \"./ControlAreaStructure\";\nimport Component from \"@egjs/component\";\nimport { getTimelineInfo } from \"./TimelineInfo\";\nimport { Info } from \"./Info\";\n\nlet isExportCSS = false;\n\nexport default class Timeline extends Component {\n    public scene: Scene | SceneItem;\n    public options: {\n        keyboard?: boolean,\n    };\n    private maxTime: number = 0;\n    private axes: Axes;\n    private selectedProperty: string = \"\";\n    private selectedTime: number = -1;\n    private keycon: KeyController;\n    private datadom: DataDOM<ElementStructure>;\n    private structure: ElementStructure;\n    private ids: Ids = {};\n    private timelineInfo: TimelineInfo;\n    constructor(scene: Scene | SceneItem, parentEl: HTMLElement, options: {\n        keyboard?: boolean,\n    } = {}) {\n        super();\n        this.options = {\n            keyboard: true,\n            ...options,\n        };\n        scene.finish();\n        this.scene = scene;\n        this.initStructure(scene, parentEl);\n        this.initEditor();\n        this.initScroll();\n        this.initWheelZoom();\n        this.initDragKeyframes();\n        this.initClickProperty();\n        this.initController();\n        this.initDragValues();\n        this.initKeyController();\n\n        this.setTime(0);\n\n        // new Info(this, parentEl);\n    }\n    public getElement() {\n        return this.structure.element;\n    }\n    // scene control\n    public prev() {\n        this.setTime(this.scene.getTime() - 0.05);\n    }\n    public next() {\n        this.setTime(this.scene.getTime() + 0.05);\n    }\n    public finish() {\n        this.scene.finish();\n    }\n    public togglePlay() {\n        const scene = this.scene;\n        if (scene.getPlayState() === \"running\") {\n            scene.pause();\n        } else {\n            scene.play();\n        }\n    }\n    public setTime(time: number) {\n        const scene = this.scene;\n        const direction = scene.getDirection();\n\n        if (direction === \"normal\" || direction === \"alternate\") {\n            scene.setTime(time);\n        } else {\n            scene.setTime(scene.getDuration() - time);\n        }\n    }\n    public update() {\n        const scene = this.scene;\n        this.timelineInfo = getTimelineInfo(scene);\n        const maxDuration = Math.ceil(scene.getDuration());\n        const maxTime = Math.max(this.maxTime, maxDuration);\n        let zoom = this.axes.get([\"zoom\"]).zoom;\n        const currentMaxTime = this.maxTime;\n        this.maxTime = maxTime;\n        const ids = this.ids;\n        const prevKeytimesArea = ids.keyframesAreas[0];\n        const nextZoom = currentMaxTime > 1 ? maxTime / currentMaxTime : 1;\n\n        zoom = Math.max(1, zoom * nextZoom);\n        this.axes.axm.set({ zoom });\n        // update keytimes\n        this.datadom.update(\n            prevKeytimesArea,\n            getKeytimesAreaStructure(ids, zoom, maxTime, maxTime),\n        );\n\n        const nextScrollAreaStructure = getScrollAreaStructure(\n            ids,\n            this.timelineInfo,\n            this.axes.get([\"zoom\"]).zoom,\n            maxTime, maxTime,\n        );\n\n        this.datadom.update(\n            ids.scrollArea,\n            nextScrollAreaStructure,\n        );\n        this.setTime(scene.getTime());\n    }\n    private newItem(scene: Scene) {\n        const name = prompt(\"Add Item\");\n\n        if (!name) {\n            return;\n        }\n        (this.scene as Scene).newItem(name);\n        this.update();\n    }\n    private newProperty(item: SceneItem, properties: string[]) {\n        const property = prompt(\"new property\");\n\n        if (!property) {\n            return;\n        }\n        item.set(item.getIterationTime(), ...properties, property, 0);\n        this.update();\n    }\n    // init\n    private initController() {\n        const ids = this.ids;\n        const playBtn = this.ids.playBtn.element;\n        const scene = this.scene;\n\n        this.ids.addItem.element.addEventListener(\"click\", e => {\n            if (isScene(this.scene)) {\n                this.newItem(this.scene);\n            } else {\n                this.newProperty(this.scene, []);\n            }\n        });\n        playBtn.addEventListener(\"click\", e => {\n            this.togglePlay();\n            e.preventDefault();\n        });\n        ids.unselectedArea.element.addEventListener(\"click\", e => {\n            this.select(\"\", -1);\n        });\n        ids.prevBtn.element.addEventListener(\"click\", e => {\n            this.prev();\n            e.preventDefault();\n        });\n        ids.nextBtn.element.addEventListener(\"click\", e => {\n            this.next();\n            e.preventDefault();\n        });\n        scene.on(\"play\", () => {\n            addClass(playBtn, \"pause\");\n            removeClass(playBtn, \"play\");\n            // playBtn.innerHTML = \"pause\";\n        });\n        scene.on(\"paused\", () => {\n            addClass(playBtn, \"play\");\n            removeClass(playBtn, \"pause\");\n            // playBtn.innerHTML = \"play\";\n        });\n        if (this.options.keyboard) {\n            new KeyController(ids.timeArea.element)\n            .keydown(e => {\n                !e.isToggle && e.inputEvent.stopPropagation();\n            })\n            .keyup(e => {\n                !e.isToggle && e.inputEvent.stopPropagation();\n            })\n            .keyup(\"enter\", e => {\n                // go to time\n                const element = ids.timeArea.element;\n                const value = (element as HTMLInputElement).value;\n                const result = /(\\d+):(\\d+):(\\d+)/g.exec(value);\n\n                if (!result) {\n                    return;\n                }\n                const minute = parseFloat(result[1]);\n                const second = parseFloat(result[2]);\n                const milisecond = parseFloat(`0.${result[3]}`);\n                const time = minute * 60 + second + milisecond;\n\n                this.setTime(time);\n            });\n        }\n    }\n    private initKeyController() {\n        const ids = this.ids;\n\n        window.addEventListener(\"blur\", () => {\n            removeClass(ids.timeline.element, \"alt\");\n        });\n\n        this.keycon = new KeyController()\n        .keydown(\"alt\", () => {\n            addClass(ids.timeline.element, \"alt\");\n        })\n        .keyup(\"alt\", () => {\n            removeClass(ids.timeline.element, \"alt\");\n        });\n\n        if (this.options.keyboard) {\n            this.keycon.keydown(\"space\", ({inputEvent}) => {\n                inputEvent.preventDefault();\n            })\n            .keydown(\"left\", e => {\n                this.prev();\n            })\n            .keydown(\"right\", e => {\n                this.next();\n            })\n            .keyup(\"backspace\", () => {\n                this.removeKeyframe(this.selectedProperty);\n            })\n            .keyup(\"esc\", () => {\n                this.finish();\n            })\n            .keyup(\"space\", () => {\n                this.togglePlay();\n            });\n        }\n    }\n    private initStructure(scene: Scene | SceneItem, parentEl: HTMLElement) {\n        this.timelineInfo = getTimelineInfo(scene);\n        const duration = Math.ceil(scene.getDuration());\n        const maxDuration = Math.ceil(duration);\n        const maxTime = maxDuration;\n        const ids = this.ids;\n        let timelineCSS: ElementStructure;\n\n        this.maxTime = maxTime;\n        if (!isExportCSS) {\n            timelineCSS = {\n                selector: \"style.style\",\n                html: CSS,\n            };\n            isExportCSS = true;\n        }\n\n        const structure: ElementStructure = {\n            selector: \".timeline\",\n            ref: e => {\n                ids.timeline = e;\n            },\n            children: [\n                timelineCSS,\n                getControlAreaStructure(ids),\n                getHeaderAreaStructure(ids, 1, maxDuration, maxTime),\n                getScrollAreaStructure(ids, this.timelineInfo, 1, maxDuration, maxTime),\n            ],\n        };\n        this.datadom = new DataDOM(\n            createElement,\n            updateElement,\n        );\n        this.structure = this.datadom.render(structure, parentEl);\n\n\n        // fold all\n        this.ids.properties.forEach((property, i) => {\n            const propertiesInfo = property.datas as PropertiesInfo;\n            const {keys, isParent} = propertiesInfo;\n            if (keys.length === 1 && isParent) {\n                this.fold(i);\n            }\n        });\n    }\n    private initScroll() {\n        const {\n            keyframesAreas,\n        } = this.ids;\n        let isScrollKeyframe = false;\n\n        const headerKeyframesArea = keyframesAreas[0].element;\n        const scrollKeyframesArea = keyframesAreas[1].element;\n        headerKeyframesArea.addEventListener(\"scroll\", () => {\n            if (isScrollKeyframe) {\n                isScrollKeyframe = false;\n            } else {\n                isScrollKeyframe = true;\n                scrollKeyframesArea.scrollLeft = headerKeyframesArea.scrollLeft;\n            }\n        });\n        scrollKeyframesArea.addEventListener(\"scroll\", () => {\n            if (isScrollKeyframe) {\n                isScrollKeyframe = false;\n            } else {\n                isScrollKeyframe = true;\n                headerKeyframesArea.scrollLeft = scrollKeyframesArea.scrollLeft;\n            }\n        });\n    }\n    private initWheelZoom() {\n        const ids = this.ids;\n        const keyframesScrollAreas = ids.keyframesScrollAreas;\n        const headerArea = keyframesScrollAreas[0].element;\n        const scrollArea = keyframesScrollAreas[1].element;\n\n        const axes = new Axes(\n            {\n                zoom: {\n                    range: [1, Infinity],\n                },\n            },\n            {},\n            { zoom: 1 },\n        );\n        axes.connect(\"zoom\", new PinchInput(scrollArea, {\n            scale: 0.1,\n            hammerManagerOptions: {\n                touchAction: \"auto\",\n            },\n        }));\n        axes.on(\"hold\", e => {\n            if (e.inputEvent) {\n                e.inputEvent.preventDefault();\n            }\n        });\n        axes.on(\"change\", e => {\n            const scale = ids.keyframesScrollAreas[0].dataset.width;\n            const width = e.pos.zoom * scale * 100;\n\n            ids.keyframesScrollAreas.forEach(({ element }) => {\n                element.style.width = `${width}%`;\n            });\n\n            if (e.inputEvent) {\n                e.inputEvent.preventDefault();\n            }\n        });\n\n        this.axes = axes;\n        headerArea.addEventListener(\"wheel\", e => {\n            const delta = e.deltaY;\n\n            axes.setBy({ zoom: delta / 5000 });\n            !e.deltaX && e.preventDefault();\n        });\n\n        addEvent(scrollArea, \"wheel\", e => {\n            if (!this.keycon.altKey) {\n                return;\n            }\n            e.preventDefault();\n            const delta = e.deltaY;\n\n            axes.setBy({ zoom: delta / 5000 });\n        });\n    }\n    private select(selectedProperty: string, keyframeTime?: number) {\n        const prevSelectedProperty = this.selectedProperty;\n        const prevSelectedTime = this.selectedTime;\n        const ids = this.ids;\n        const values = ids.values;\n        const properties = ids.properties;\n        const keyframesList = ids.keyframesList;\n\n        this.selectedProperty = selectedProperty;\n        this.scene.pause();\n        if (prevSelectedProperty) {\n            const prevSelectedIndex = findIndexByProperty(prevSelectedProperty, properties);\n\n            removeClass(properties[prevSelectedIndex].element, \"select\");\n            removeClass(values[prevSelectedIndex].element, \"select\");\n            removeClass(keyframesList[prevSelectedIndex].element, \"select\");\n\n            if (prevSelectedTime >= 0) {\n                const keyframes = ids.keyframesContainers[prevSelectedIndex].children as ElementStructure[];\n\n                keyframes.forEach(keyframe => {\n                    if (keyframe.datas.time === prevSelectedTime) {\n                        removeClass(keyframe.element, \"select\");\n                    }\n                });\n                this.selectedTime = -1;\n            }\n        }\n        let selectedItem: Scene | SceneItem = this.scene;\n        if (selectedProperty) {\n            if (document.activeElement) {\n                (document.activeElement as HTMLElement).blur();\n            }\n\n            const selectedIndex = findIndexByProperty(selectedProperty, properties);\n            addClass(properties[selectedIndex].element, \"select\");\n            addClass(values[selectedIndex].element, \"select\");\n            addClass(keyframesList[selectedIndex].element, \"select\");\n\n            selectedItem = (ids.keyframesList[selectedIndex].datas as PropertiesInfo).item;\n            if (keyframeTime >= 0) {\n                const selectedPropertyStructure = ids.keyframesContainers[selectedIndex];\n                const keyframes = selectedPropertyStructure.children as ElementStructure[];\n\n                keyframes.forEach(keyframe => {\n                    if (keyframe.datas.time === keyframeTime) {\n                        addClass(keyframe.element, \"select\");\n                    }\n                });\n                this.selectedTime = keyframeTime;\n            }\n        }\n        this.trigger(\"select\", {\n            selectedItem,\n            selectedProperty: this.selectedProperty,\n            selectedTime: this.selectedTime,\n            prevSelectedProperty,\n            prevSelectedTime,\n        });\n    }\n    private initClickProperty() {\n        const ids = this.ids;\n        const {\n            propertiesAreas,\n        } = ids;\n\n        propertiesAreas[1].element.addEventListener(\"click\", e => {\n            const properties = ids.properties.map(property => property.element);\n            const length = properties.length;\n            const arrow = getTarget(e.target as HTMLElement, el => hasClass(el, \"arrow\"));\n            const remove = getTarget(e.target as HTMLElement, el => hasClass(el, \"remove\"));\n            const target = getTarget(e.target as HTMLElement, el => hasClass(el, \"property\"));\n\n            if (!target) {\n                return;\n            }\n            const index = properties.indexOf(target);\n\n            if (index === -1) {\n                return;\n            }\n            const selectedProperty = ids.properties[index];\n            if (remove) {\n                this.remove(selectedProperty.datas as PropertiesInfo);\n            } else {\n                this.select(selectedProperty.dataset.key);\n\n                if (arrow) {\n                    this.fold(index);\n                }\n            }\n        });\n    }\n    private setInputs(obj: IObject<any>) {\n        const valuesArea = this.ids.valuesArea.element;\n        for (const name in obj) {\n            valuesArea.querySelector<HTMLInputElement>(`[data-key=\"${name}\"] input`).value = obj[name];\n        }\n    }\n    private moveCursor(time: number) {\n        const {cursors} = this.ids;\n        const maxTime = this.maxTime;\n        const px = 15 - 30 * time / maxTime;\n        const percent = 100 * time / maxTime;\n        const left = `calc(${percent}% + ${px}px)`;\n\n        cursors.forEach(cursor => {\n            cursor.element.style.left = left;\n        });\n    }\n    private initDragKeyframes() {\n        const ids = this.ids;\n        const {\n            scrollArea,\n            timeArea,\n            cursors,\n            keyframesAreas,\n            keyframesScrollAreas,\n        } = ids;\n        const scene = this.scene;\n\n        scene.on(\"animate\", e => {\n            const time = e.time;\n            this.moveCursor(time);\n            this.setInputs(flatObject(e.frames || e.frame.get()));\n            const minute = numberFormat(Math.floor(time / 60), 2);\n            const second = numberFormat(Math.floor(time % 60), 2);\n            const milisecond = numberFormat(Math.floor((time % 1) * 100), 3, true);\n            (timeArea.element as HTMLInputElement).value = `${minute}:${second}:${milisecond}`;\n        });\n        const getDistTime = (\n            distX: number,\n            rect: ClientRect = keyframesScrollAreas[1].element.getBoundingClientRect(),\n        ) => {\n            const scrollAreaWidth = rect.width - 30;\n            const percentage = Math.min(scrollAreaWidth, distX) / scrollAreaWidth;\n            const time = this.maxTime * percentage;\n\n            return Math.round(time * 20) / 20;\n        };\n        const getTime = (clientX: number) => {\n            const rect = keyframesScrollAreas[1].element.getBoundingClientRect();\n            const scrollAreaX = rect.left + 15;\n            const x = Math.max(clientX - scrollAreaX, 0);\n\n            return getDistTime(x, rect);\n        };\n        const move = (clientX: number) => {\n            this.setTime(getTime(clientX));\n        };\n        const click = (e, clientX, clientY) => {\n            const target = getTarget(e.target as HTMLElement, el => hasClass(el, \"keyframe\"));\n            const time = target ? parseFloat(target.getAttribute(\"data-time\")) : getTime(clientX);\n\n            this.setTime(time);\n            const list = ids.keyframesList;\n            const index = findElementIndexByPosition(\n                list.map(({element}) => element),\n                clientY,\n            );\n\n            if (index > -1) {\n                this.select(list[index].dataset.key, time);\n            }\n            e.preventDefault();\n        };\n        const dblclick = (e, clientX, clientY) => {\n            const list = ids.keyframesList;\n            const index = findElementIndexByPosition(\n                list.map(({element}) => element),\n                clientY,\n            );\n\n            if (index === -1) {\n                return;\n            }\n            this.addKeyframe(index, getTime(clientX));\n        };\n        drag(cursors[0].element, {\n            dragstart: ({inputEvent}) => {\n                inputEvent.stopPropagation();\n            },\n            drag: ({ clientX }) => {\n                move(clientX);\n            },\n            container: window,\n        });\n\n        let dragItem: Scene | SceneItem = null;\n        let dragDelay: number = 0;\n        let dragTarget: HTMLElement = null;\n\n        keyframesScrollAreas.forEach(({ element }) => {\n            drag(element, {\n                container: window,\n                dragstart: ({ inputEvent }) => {\n                    dragTarget = getTarget(inputEvent.target, el => hasClass(el, \"keyframe_group\"));\n                    if (dragTarget) {\n                        const properties = this.ids.properties;\n                        const keyframesTarget = getTarget(dragTarget, el => hasClass(el, \"keyframes\"));\n                        const key = keyframesTarget.getAttribute(\"data-key\");\n                        const property = findStructureByProperty(key, properties);\n                        const propertiesInfo = property.datas as PropertiesInfo;\n\n                        dragItem = propertiesInfo.item;\n                        dragDelay = dragItem.getDelay();\n                    }\n                },\n                drag: ({ distX, deltaX, deltaY, inputEvent }) => {\n                    if (dragTarget) {\n                        dragItem.setDelay(Math.max(dragDelay + getDistTime(distX), 0));\n                        this.update();\n                    } else {\n                        keyframesAreas[1].element.scrollLeft -= deltaX;\n                        scrollArea.element.scrollTop -= deltaY;\n                        inputEvent.preventDefault();\n                    }\n                },\n                dragend: ({ isDrag, clientX, clientY, inputEvent }) => {\n                    dragTarget = null;\n                    dragItem = null;\n                    dragDelay = null;\n                    !isDrag && click(inputEvent, clientX, clientY);\n                    dblCheck(isDrag, inputEvent, clientX, clientY, dblclick);\n                },\n            });\n        });\n    }\n    private initDragValues() {\n        const ids = this.ids;\n        const element = ids.valuesArea.element;\n        let dragTarget: HTMLInputElement = null;\n        let dragTargetValue: any;\n\n        addEvent(element, \"click\", e => {\n            const addedElement = getTarget(dragTarget, el => hasClass(el, \"add\"));\n            if (!addedElement) {\n                return;\n            }\n            const valueElement = addedElement.parentElement as HTMLElement;\n            const index = findIndexByProperty(valueElement.getAttribute(\"data-key\"), ids.values);\n\n            if (index < 0) {\n                return;\n            }\n\n            const propertiesInfo = ids.properties[index].datas as PropertiesInfo;\n            const properties = propertiesInfo.properties.slice();\n            const item = propertiesInfo.item;\n\n            if (isScene(item)) {\n                this.newItem(item);\n            } else {\n                this.newProperty(item, properties);\n            }\n\n        });\n        drag(element, {\n            container: window,\n            dragstart: e => {\n                dragTarget = e.inputEvent.target;\n                dragTargetValue = dragTarget.value;\n\n                if (!this.keycon.altKey || !getTarget(dragTarget, el => el.nodeName === \"INPUT\")) {\n                    return false;\n                }\n            },\n            drag: e => {\n                const nextValue = dragTargetValue.replace(/-?\\d+/g, num => {\n                    return `${parseFloat(num) + Math.round(e.distX / 2)}`;\n                });\n\n                dragTarget.value = nextValue;\n            },\n            dragend: e => {\n                this.edit(dragTarget, dragTarget.value);\n            },\n        });\n    }\n    private addKeyframe(index: number, time: number) {\n        const list = this.ids.keyframesList;\n        const property = list[index].dataset.key;\n        const {item, properties} = list[index].datas as PropertiesInfo;\n\n        this.select(property, time);\n\n        const value = ((this.ids.values[index].children as ElementStructure).element as HTMLInputElement).value;\n\n        this.editKeyframe(index, value);\n    }\n    private fold(index: number, forceFold?: boolean) {\n        const ids = this.ids;\n        const {properties, values, keyframesList} = ids;\n        const selectedProperty = properties[index];\n        const length = properties.length;\n        let max;\n        for (max = index + 1; max < length; ++max) {\n            if (properties[max].datas.key.indexOf(selectedProperty.datas.key + \"///\") !== 0) {\n                break;\n            }\n        }\n        const foldProperties = properties.slice(index + 1, max);\n        const foldValues = values.slice(index + 1, max);\n        const foldKeyframesList = keyframesList.slice(index + 1, max);\n        const selectedElement = selectedProperty.element;\n        // true : unfold, false: fold\n        const isFold = isUndefined(forceFold) ? selectedElement.getAttribute(\"data-fold\") === \"1\" : forceFold;\n\n        selectedElement.setAttribute(\"data-fold\", isFold ? \"0\" : \"1\");\n        const foldFunction = (isFold ? removeClass : addClass);\n        const depth = selectedProperty.datas.keys.length;\n\n        foldProperties.forEach((property, i) => {\n            const datas = property.datas as PropertiesInfo;\n            if (depth + 1 < datas.keys.length) {\n                return;\n            }\n            foldFunction(property.element, \"fold\");\n            foldFunction(foldValues[i].element, \"fold\");\n            foldFunction(foldKeyframesList[i].element, \"fold\");\n            if (datas.isParent) {\n                if (!isFold) {\n                    this.fold(index + 1 + i, false);\n                } else {\n                    // always fold\n                    property.element.setAttribute(\"data-fold\", \"1\");\n                }\n            } else {\n                property.element.setAttribute(\"data-fold\", isFold ? \"0\" : \"1\");\n            }\n        });\n    }\n    private remove(propertiesInfo: PropertiesInfo) {\n        const {key, isItem, parentItem, item: targetItem, properties} = propertiesInfo;\n        if (isItem) {\n            let targetName: string = null;\n            parentItem.forEach((item, name) => {\n                if (item === targetItem) {\n                    targetName = name;\n                    return;\n                }\n            });\n            if (targetName != null) {\n                parentItem.removeItem(targetName);\n            }\n        } else {\n            const times = (targetItem as SceneItem).times;\n\n            times.forEach(time => {\n                (targetItem as SceneItem).remove(time, ...properties);\n            });\n        }\n        if (this.selectedProperty === key) {\n            this.selectedProperty = \"\";\n            this.selectedTime = -1;\n        }\n        this.update();\n    }\n    private removeKeyframe(property: string) {\n        const propertiesInfo = this.timelineInfo[property];\n        if (!property || !propertiesInfo || isScene(propertiesInfo.item)) {\n            return;\n        }\n\n        const properties = propertiesInfo.properties;\n        const item = propertiesInfo.item;\n\n        item.remove(item.getIterationTime(), ...properties);\n        this.update();\n    }\n    private editKeyframe(index: number, value: any) {\n        const ids = this.ids;\n        const isObjectData = ids.properties[index].dataset.object === \"1\";\n\n        if (isObjectData) {\n            return;\n        }\n        const propertiesInfo = ids.keyframesList[index].datas as PropertiesInfo;\n        const item = propertiesInfo.item;\n        const properties = propertiesInfo.properties;\n\n        item.set(item.getIterationTime(), ...properties, value);\n        this.update();\n    }\n    private restoreKeyframes() {\n        this.setTime(this.scene.getTime());\n    }\n    private edit(target: HTMLInputElement, value: any) {\n        const parentEl = getTarget(target, el => hasClass(el, \"value\"));\n\n        if (!parentEl) {\n            return;\n        }\n        const values = this.ids.values.map(({element}) => element);\n        const index = values.indexOf(parentEl);\n\n        if (index === -1) {\n            return;\n        }\n        this.editKeyframe(index, value);\n    }\n    private initEditor() {\n        const valuesArea = this.ids.valuesArea.element;\n\n        new KeyController(valuesArea)\n        .keydown(e => {\n            !e.isToggle && e.inputEvent.stopPropagation();\n        })\n        .keyup(e => {\n            !e.isToggle && e.inputEvent.stopPropagation();\n        })\n        .keyup(\"enter\", e => {\n            const target = e.inputEvent.target as HTMLInputElement;\n\n            this.edit(target, target.value);\n        })\n        .keyup(\"esc\", e => {\n            const target = e.inputEvent.target as HTMLInputElement;\n\n            target.blur();\n        });\n        valuesArea.addEventListener(\"focusout\", e => {\n            this.restoreKeyframes();\n        });\n    }\n}\n","import { Ids, ElementStructure } from \"./types\";\n\nexport function getControlAreaStructure(ids: Ids): ElementStructure {\n    return {\n        selector: \".header_area.control_area\",\n        children: [\n            {\n                selector: \".properties_area\",\n                ref: (e: ElementStructure) => {\n                    ids.unselectedArea = e;\n                },\n                children: {\n                    selector: \".property\",\n                },\n            },\n            {\n                selector: \".values_area\",\n                children: {\n                    selector: \".value\",\n                },\n            },\n            {\n                selector: \".keyframes_area\",\n                children: {\n                    selector: \".keyframes\",\n                    children: [\n                        {\n                            selector: \"input.time_area\",\n                            ref: (e: ElementStructure) => {\n                                ids.timeArea = e;\n                            },\n                            html: \"???\",\n                            // html: \"0\",\n                        },\n                        {\n                            selector: \".play_control_area\",\n                            children: [\n                                {\n                                    ref: (e: ElementStructure) => {\n                                        ids.prevBtn = e;\n                                    },\n                                    selector: \".control.prev\",\n                                },\n                                {\n                                    ref: (e: ElementStructure) => {\n                                        ids.playBtn = e;\n                                    },\n                                    selector: \".control.play\",\n                                },\n                                {\n                                    ref: (e: ElementStructure) => {\n                                        ids.nextBtn = e;\n                                    },\n                                    selector: \".control.next\",\n                                },\n                            ],\n                        },\n                    ],\n                },\n            },\n        ],\n    };\n}\n"],"names":["PREFIX","CSS","replace","DIRECTION","ITERATION_COUNT","DELAY","PLAY_SPEED","ALTERNATE","REVERSE","ALTERNATE_REVERSE","OBJECT","UNDEFINED","isUndefined","value","isObject","addEvent","el","type","listener","options","addEventListener","numberFormat","num","count","isRight","length","arr","push","i","join","applyStyle","style","name","findIndexByProperty","selectedProperty","structures","findIndex","_a","createElement","structure","selector","dataset","attr","html","classNames","match","tag","id","document","className","map","setAttribute","innerHTML","updateElement","prevStructure","nextStructure","element","toValue","Array","isArray","keys","k","getTarget","target","conditionCallback","parentTarget","body","parentNode","hasClass","classList","contains","RegExp","hasClass2","addClass","add","addClass2","removeClass","remove","reg","removeClass2","isScene","constructor","prototype","getItem","findElementIndexByPosition","elements","pos","index","box","getBoundingClientRect","top","bottom","height","setDrag","flag","startX","startY","prevX","prevY","datas","isDrag","container","dragstart","drag","dragend","_b","events","isTouch","indexOf","getPosition","e","touches","onDragStart","clientX","clientY","inputEvent","preventDefault","onDrag","deltaX","deltaY","distX","distY","onDragEnd","passive","_extends","Object","assign","arguments","source","key","hasOwnProperty","call","apply","this","_inheritsLoose","subClass","superClass","create","__proto__","_assertThisInitialized","self","ReferenceError","win","assign$1","TypeError","output","nextKey","VENDOR_PREFIXES","TEST_ELEMENT","TYPE_FUNCTION","round","Math","abs","now","Date","prefixed","obj","property","prefix","prop","camelProp","toUpperCase","slice","window","PREFIXED_TOUCH_ACTION","NATIVE_TOUCH_ACTION","undefined","TOUCH_ACTION_COMPUTE","TOUCH_ACTION_MANIPULATION","TOUCH_ACTION_NONE","TOUCH_ACTION_PAN_X","TOUCH_ACTION_PAN_Y","TOUCH_ACTION_MAP","touchMap","cssSupports","supports","forEach","val","getTouchActionProps","SUPPORT_TOUCH","SUPPORT_POINTER_EVENTS","SUPPORT_ONLY_TOUCH","test","navigator","userAgent","INPUT_TYPE_TOUCH","INPUT_TYPE_MOUSE","COMPUTE_INTERVAL","INPUT_START","INPUT_END","INPUT_CANCEL","DIRECTION_NONE","DIRECTION_LEFT","DIRECTION_RIGHT","DIRECTION_UP","DIRECTION_DOWN","DIRECTION_HORIZONTAL","DIRECTION_VERTICAL","DIRECTION_ALL","PROPS_XY","PROPS_CLIENT_XY","each","iterator","context","boolOrFn","args","inStr","str","find","TouchAction","manager","set","_proto","compute","actions","toLowerCase","trim","update","touchAction","recognizers","recognizer","enable","concat","getTouchAction","hasPanX","hasPanY","cleanTouchActions","preventDefaults","input","srcEvent","direction","offsetDirection","session","prevented","hasNone","isTapPointer","pointers","isTapMovement","distance","isTapTouchTime","deltaTime","preventSrc","hasParent","node","parent","getCenter","pointersLength","x","y","simpleCloneInputData","timeStamp","center","getDistance","p1","p2","props","sqrt","getAngle","atan2","PI","getDirection","getVelocity","computeInputData","firstInput","firstMultiple","offsetCenter","angle","offset","offsetDelta","prevDelta","prevInput","eventType","computeDeltaXY","overallVelocity","overallVelocityX","overallVelocityY","scale","start","end","getScale","rotation","getRotation","maxPointers","velocity","velocityX","velocityY","last","lastInterval","v","computeIntervalInputData","inputHandler","pointersLen","changedPointersLen","changedPointers","isFirst","isFinal","emit","recognize","splitStr","split","addEventListeners","types","handler","removeEventListeners","removeEventListener","getWindowForElement","doc","ownerDocument","defaultView","parentWindow","Input","callback","inputTarget","domHandler","ev","init","evEl","evTarget","evWin","destroy","inArray","src","findByKey","POINTER_INPUT_MAP","pointerdown","pointermove","pointerup","pointercancel","pointerout","IE10_POINTER_TYPE_ENUM","POINTER_ELEMENT_EVENTS","POINTER_WINDOW_EVENTS","MSPointerEvent","PointerEvent","PointerEventInput","_Input","_this","proto","store","pointerEvents","removePointer","eventTypeNormalized","pointerType","storeIndex","pointerId","button","splice","toArray","TOUCH_INPUT_MAP","touchstart","touchmove","touchend","touchcancel","TouchInput","targetIds","targetTouches","allTouches","identifier","changedTouches","changedTargetTouches","filter","touch","sort","results","values","a","b","uniqueArray","MOUSE_INPUT_MAP","mousedown","mousemove","mouseup","MouseInput","pressed","which","DEDUP_TIMEOUT","DEDUP_DISTANCE","setLastTouch","eventData","primaryTouch","lastTouch","lts","lastTouches","setTimeout","TouchMouseInput","_manager","inputData","isMouse","sourceCapabilities","firesTouchEvents","t","dx","dy","mouse","invokeArrayArg","arg","fn","_uniqueId","getRecognizerByNameIfManager","otherRecognizer","get","stateStr","state","Recognizer","simultaneous","requireFail","recognizeWith","dropRecognizeWith","requireFailure","dropRequireFailure","hasRequireFailures","canRecognizeWith","event","additionalEvent","tryEmit","canEmit","inputDataClone","reset","process","defaults","domEvents","inputClass","preset","cssProps","userSelect","touchSelect","touchCallout","contentZooming","userDrag","tapHighlightColor","toggleCssProps","oldCssProps","Manager","handlers","createInputInstance","item","stop","force","stopped","curRecognizer","existing","targetRecognizer","on","off","data","gestureEvent","createEvent","initEvent","gesture","dispatchEvent","triggerDomEvent","PinchRecognizer","_AttrRecognizer","threshold","attrTest","inOut","_Recognizer","AttrRecognizer","optionPointers","isRecognized","isValid","Component","_eventHandler","trigger","eventName","customEvent","handlerList","isCanceled","currentTarget","_len","restParam","_key","once","handlerToAttach","eventHash","_len2","_key2","hasOn","handlerToDetach","handlerFunction","VERSION","extendStatics","setPrototypeOf","d","p","__assign","s","n","FIXED_DIGIT","TRANSFORM","bodyStyle","head","getElementsByTagName","len","nodes","raf","requestAnimationFrame","webkitRequestAnimationFrame","caf","cancelAnimationFrame","webkitCancelAnimationFrame","keyInfo_1","oldraf_1","timestamp","performance","getTime","clearTimeout","tranformed","filtered","every","equal","base","toFixed","getInsidePosition","destPos","range","circular","bounce","toDestPos","targetRange","max","min","isOutside","isCircularable","getCirculatedPos","isAccurate","toPos","minMax","AnimationManager","itm","em","axm","animationEnd","bind","__proto","getDuration","depaPos","wishDuration","duration","durations_1","deceleration","reduce","Infinity","minimumDuration","maximumDuration","createAnimationParam","option","delta","getDelta","isTrusted","done","grab","axes","_animateParam","orgPos_1","opt","triggerChange","_raf","triggerAnimationEnd","getEventInfo","restore","animateTo","beforeParam","circularTargets","setTo","setInterrupt","finish","triggerFinish","animateLoop","param","complete","info_1","self_1","prevPos_1","startTime","loop","easingPer","easing","fp","getUserControll","userWish","retTrigger","triggerAnimationStart","console","warn","orgPos","movedPos","setBy","EventManager","triggerHold","triggerRelease","createUserControll","holding","am","eventInfo","moveTo","result","userControl","userDuration","setAnimationManager","InterruptManager","_prevented","isInterrupting","interruptable","isInterrupted","AxisManager","axis","_complementOptions","_pos","acc","axisOption","fullDepaPos","axisOptions","InputObserver","moveDistance","isStopped","atOutside","tn","tx","initSlope_1","out","hold","changeOption","change","release","inputDuration","isEqual","Axes","_super","startPos","_inputs","pow","io","__","__extends","connect","inputType","mapped","disconnect","targets","hammer","mapAxes","isBounceArea","UNIQUEKEY","toAxis","PinchInput","_base","_prev","pinchRecognizer","Error","$","multi","dummy","childNodes","querySelectorAll","nodeName","nodeType","jQuery","jquery","hammerManagerOptions","onPinchStart","onPinchMove","onPinchEnd","observer","hammerOption","removeRecognizer","dettachEvent","keyValue","String","random","hasTouch","hasMouse","hasPointer","convertInputType","createHammer","Pinch","attachEvent","getOffset","pinchScale","prev","disable","isEnable","prevTime","dblCheck","currentTime","module","keycode","exports","keyCode","searchInput","hasKeyCode","charCode","names","foundNamedKey","search","codes","aliases","charCodeAt","isEventKey","nameOrCode","code","fromCharCode","title","alias","keycode_4","codeData","keysSort","shift","ctrl","alt","meta","KeyController","ctrlKey","altKey","shiftKey","metaKey","clear","keydownEvent","triggerEvent","keyupEvent","keydown","comb","keyup","isString","arrangeKeys","next","getArrangeCombi","getKey","isToggle","combi","Boolean","getCombi","render","parentStructureIndex","parentEl","children","ref","child","appendChild","parentStructure","startIndex","prevStructures","nextStructures","prevArr","nextArr","syncCallback","prevKeys","nextKeys","prevKeysObject","nextKeysObject","added","removed","changed","newChanged","changeInfo","compare","parentElement_1","reverse","removeChild","min_1","max_1","to","insertBefore","DataDOM","getKeytimesAreaStructure","ids","zoom","maxDuration","maxTime","keyframesAreas","minWidth","width","keyframesScrollAreas","cursors","keytimesContainer","keytimes","time","getKeytimesStructure","getKeyframesAreaStructure","keyframesList","lineArea","lines","left","getLinesStructure","getKeyframesScrollAreaChildrenStructure","getKeyframesStructure","propertiesInfo","frames","properties","isItScene","keyframes","delayFrames","keyframeLines","iterationTime","valueText","nextTime","nextIterationTime","nextValue","nextValueText","getDelayFrameStructure","from","getScrollAreaStructure","timelineInfo","keyframesContainers","isItem","getKeyframesListStructure","scrollArea","propertiesAreas","propertyNames","object","isParent","paddingLeft","getPropertiesStructure","valuesArea","getValuesStructure","MAXIMUM","addEntry","entries","keytime","prevEntry","getEntries","times","states","nextEntries","unshift","b1","b2","iterationCount","delay","playSpeed","intCount","ceil","currentDuration","lastTime","isReverse","j","entry","divideTime","getTimelineInfo","scene","sceneForEach","_i","items","lastItem","getId","animator","frames_1","parentItem","originalDuration","getFrame","getPropertyInfo","itemNames","getItemInfo","isExportCSS","keyboard","initStructure","initEditor","initScroll","initWheelZoom","initDragKeyframes","initClickProperty","initController","initDragValues","initKeyController","setTime","tslib_1","getPlayState","pause","play","currentMaxTime","prevKeytimesArea","nextZoom","datadom","nextScrollAreaStructure","prompt","newItem","getIterationTime","playBtn","addItem","newProperty","togglePlay","unselectedArea","select","prevBtn","nextBtn","timeArea","stopPropagation","exec","parseFloat","timeline","keycon","removeKeyframe","timelineCSS","getControlAreaStructure","getHeaderAreaStructure","fold","isScrollKeyframe","headerKeyframesArea","scrollKeyframesArea","scrollLeft","headerArea","keyframeTime","prevSelectedProperty","prevSelectedTime","selectedTime","prevSelectedIndex","keyframe","selectedItem","activeElement","blur","selectedIndex","arrow","querySelector","cursor","moveCursor","setInputs","flatObject","newObj","nextObj","toCSS","nextName","frame","minute","floor","second","milisecond","getDistTime","rect","scrollAreaWidth","percentage","scrollAreaX","dblclick","addKeyframe","move","dragItem","dragDelay","dragTarget","findStructureByProperty","getAttribute","getDelay","setDelay","scrollTop","list","click","dragTargetValue","addedElement","parentElement","edit","editKeyframe","forceFold","foldProperties","foldValues","foldKeyframesList","selectedElement","isFold","foldFunction","depth","targetItem","targetName_1","removeItem","restoreKeyframes"],"mappings":"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"}