{"version":3,"file":"timeline.js","sources":["../src/consts.ts","../src/utils.ts","../src/KeyframesStructure.ts","../src/dblcheck.ts","../src/KeytimesStructure.ts","../src/Timeline.ts"],"sourcesContent":["export const PREFIX = `scenejs_timeline_`;\n\nexport const CSS = `\n.timeline {\n  position: relative;\n  font-size: 0;\n  background: #000;\n  display: flex;\n  flex-direction: column;\n}\n.header_area, .scroll_area {\n   width: 100%;\n   position: relative;\n  display: flex;\n  -webkit-align-items: flex-start;\n  align-items: flex-start;\n}\n.header_area {\n  position: relative;\n  z-index: 10;\n  top: 0;\n  height: 30px;\n  min-height: 30px;\n}\n.header_area .keyframes {\n  padding: 0px;\n}\n.header_area .properties_area,\n.header_area .keyframes_area,\n.header_area .values_area,\n.header_area .keyframes_scroll_area {\n    height: 100%;\n}\n.header_area .property, .header_area .value, .header_area .keyframes {\n  height: 100%;\n}\n.header_area .property {\n    line-height: 30px;\n}\n.header_area .value {\n    text-align: center;\n    color: #fff;\n    line-height: 30px;\n    font-weight: bold;\n    font-size: 20px;\n}\n.header_area .keyframes_area::-webkit-scrollbar {\n    display: none; // Safari and Chrome\n}\n.header_area .keyframe_cursor {\n    position: absolute;\n    border-top: 10px solid #f55;\n    border-left: 5px solid transparent;\n    border-right: 5px solid transparent;\n    width: 0;\n    height: 0;\n    bottom: 0;\n    top: auto;\n    background: none;\n    cursor: pointer;\n}\n.control_area .keyframes {\n    padding-left: 10px;\n}\n.play_control_area {\n    position: absolute;\n    top: 0;\n    left: 50%;\n    transform: translate(-50%);\n}\n.play_control_area .control {\n    display: inline-block;\n    color: white;\n    margin: 0px 10px;\n}\n.keytime {\n  position: relative;\n  display: inline-block;\n  height: 100%;\n  font-size: 13px;\n  font-weight: bold;\n  color: #777;\n}\n.keytime:last-child {\n  max-width: 0px;\n}\n.keytime span {\n  position: absolute;\n  top: 2px;\n  left: 0;\n  display: inline-block;\n  transform: translate(-50%);\n  color: #eee;\n}\n.keytime .graduation {\n  position: absolute;\n  bottom: 0;\n  width: 1px;\n  height: 10px;\n  background: #777;\n  transform: translate(-50%);\n}\n.keytime .graduation.half {\n  left: 50%;\n  height: 7px;\n}\n.keytime .graduation.quarter {\n  left: 25%;\n  height: 5px;\n}\n.keytime .graduation.quarter3 {\n  left: 75%;\n  height: 5px;\n}\n.scroll_area {\n  position: relative;\n  width: 100%;\n  height: calc(100% - 60px);\n  overflow: auto;\n}\n.properties_area, .keyframes_area, .values_area {\n  display: inline-block;\n  position: relative;\n  font-size: 16px;\n  overflow: auto;\n}\n\n.properties_area::-webkit-scrollbar, .keyframes_area::-webkit-scrollbar {\n    display: none; // Safari and Chrome\n}\n.properties_area {\n  width: 30%;\n  max-width: 200px;\n  box-sizing: border-box;\n}\n.values_area {\n    width: 50px;\n    min-width: 50px;\n    display: inline-block;\n    border-right: 1px solid #999;\n    box-sizing: border-box;\n}\n.value input {\n    appearance: none;\n    -webkit-appearance: none;\n    outline: none;\n    position: relative;\n    display: block;\n    width: 100%;\n    height: 100%;\n    background: transparent;\n    color: #fe5;\n    font-weight: bold;\n    background: none;\n    border: 0;\n    box-sizing: border-box;\n    text-align: center;\n}\n.value[data-object=\"1\"] input {\n    display: none;\n}\n.properties_scroll_area {\n  display: inline-block;\n  min-width: 100%;\n}\n.keyframes_area {\n  flex: 1;\n}\n.keyframes_scroll_area {\n  position: relative;\n  min-width: 300px;\n}\n.keyframes, .property, .value {\n  position: relative;\n  height: 25px;\n  border-bottom: 1px solid #777;\n  box-sizing: border-box;\n  white-space: nowrap;\n  background: rgba(90, 90, 90, 0.7);\n  z-index: 1;\n}\n\n.property {\n  line-height: 25px;\n  padding-left: 10px;\n  box-sizing: border-box;\n  font-size: 13px;\n  font-weight: bold;\n  color: #eee;\n}\n.time_area {\n    font-size: 13px;\n    color: #fe5;\n    line-height: 30px;\n    font-weight: bold;\n}\n.time_area:after {\n    content: \"s\";\n}\n.property .arrow {\n    position: relative;\n    display: inline-block;\n    margin-right: 5px;\n    width: 0;\n    vertical-align: middle;\n    cursor: pointer;\n    border-top: 6px solid #eee;\n    border-left: 4px solid transparent;\n    border-right: 4px solid transparent;\n}\n.property[data-fold=\"1\"] .arrow {\n    border-top: 4px solid transparent;\n    border-bottom: 4px solid transparent;\n    border-right: 0;\n    border-left: 6px solid #eee;\n    margin-left: 2px;\n}\n.property[data-object=\"0\"] .arrow {\n    display: none;\n}\n.property.fold, .keyframes.fold, .value.fold {\n    display: none;\n}\n.property.select, .value.select, .keyframes.select {\n    background: rgba(120, 120, 120, 0.7);\n}\n.keyframes {\n\n}\n.keyframe_line {\n  position: absolute;\n  height: 8px;\n  top: 0;\n  bottom: 0;\n  margin: auto;\n  background: #aaa;\n  z-index: 0;\n}\n.keyframe {\n  position: absolute;\n  font-size: 0px;\n  width: 12px;\n  height: 12px;\n  top: 0px;\n  bottom: 0px;\n  margin: auto;\n  background: #fff;\n  border: 2px solid #383838;\n  border-radius: 2px;\n  box-sizing: border-box;\n  transform: translate(-50%) rotate(45deg);\n  z-index: 1;\n  cursor: pointer;\n}\n.select .keyframe {\n    border-color: #4d4d4d;\n}\n.keyframes_container, .line_area {\n  position: relative;\n  width: calc(100% - 30px);\n  left: 15px;\n  height: 100%;\n}\n.line_area {\n  position: absolute;\n  top: 0;\n  z-index: 0;\n}\n.keyframe_cursor {\n  position: absolute;\n  top: 0;\n  z-index: 1;\n  background: #f55;\n  width: 1px;\n  height: 100%;\n  left: 15px;\n  transform: translate(-50%);\n}\n.division_line {\n  position: absolute;\n  background: #333;\n  width: 1px;\n  height: 100%;\n  transform: translate(-50%);\n}\n`.replace(/\\.([^{,\\s\\d.]+)/g, `.${PREFIX}$1`);\n","import { PREFIX } from \"./consts\";\nimport Scene, { SceneItem, Frame } from \"scenejs\";\nimport {\n    hasClass as hasClass2,\n    addClass as addClass2,\n    removeClass as removeClass2,\n    isString,\n    IObject,\n    isObject,\n    isArray,\n} from \"@daybrush/utils\";\nimport { ElementStructure } from \"./types\";\nimport { sync } from \"resolve\";\n\nexport function applyStyle(el: HTMLElement, style: IObject<any>) {\n    for (const name in style) {\n        el.style[name] = style[name];\n    }\n}\nexport function createElement(structure: ElementStructure, parentEl?: Element) {\n    const {selector, dataset, attr, style, html} = structure;\n\n    const classNames = selector.match(/\\.([^.#\\s])+/g) || [];\n    const tag = (selector.match(/^[^.#\\s]+/g) || [])[0] || \"div\";\n    const id = (selector.match(/#[^.#\\s]+/g) || [])[0] || \"\";\n    const el = document.createElement(tag);\n\n    id && (el.id = id.replace(/^#/g, \"\"));\n    el.className = classNames.map(name => `${PREFIX}${name.replace(/^\\./g, \"\")}`).join(\" \");\n\n    if (dataset) {\n        for (const name in dataset) {\n            el.setAttribute(`data-${name}`, dataset[name]);\n        }\n    }\n    if (attr) {\n        for (const name in attr) {\n            el.setAttribute(name, attr[name]);\n        }\n    }\n    if (style) {\n        applyStyle(el, style);\n    }\n    if (html) {\n        el.innerHTML = html;\n    }\n    parentEl && parentEl.appendChild(el);\n    return el;\n}\nexport function keys(value: object) {\n    const arr = [];\n    for (const name in value) {\n        arr.push(name);\n    }\n    return arr;\n}\nexport function toValue(value: any) {\n    const type = typeof value;\n    if (type === \"object\") {\n        if (Array.isArray(value)) {\n            return `[${value.join(\", \")}]`;\n        }\n        return `{${keys(value).map(k => `${k}: ${toValue(value[k])}`).join(\", \")}}`;\n    }\n    return value;\n}\nexport function flatObject(obj: IObject<any>, newObj: IObject<any> = {}) {\n\n    for (const name in obj) {\n        const value = obj[name];\n\n        if (isObject(value)) {\n            const nextObj = flatObject(isFrame(value) ? value.get() : value);\n\n            for (const nextName in nextObj) {\n                newObj[`${name}///${nextName}`] = nextObj[nextName];\n            }\n        } else {\n            newObj[name] = value;\n        }\n    }\n    return newObj;\n}\nexport function getTimelineInfo(scene: Scene) {\n  const timelineInfo = {};\n  scene.forEach((item: SceneItem) => {\n    const delay = item.getDelay();\n    const times = item.times;\n\n    times.forEach(time => {\n      const frame = item.getFrame(time);\n      (function forEach(...objs: any[]) {\n        const length = objs.length;\n        const lastObj = objs[length - 1];\n        const properties = objs.slice(0, -1);\n\n        const name = properties.join(\"///\");\n\n        if (name) {\n            if (!timelineInfo[name]) {\n                timelineInfo[name] = [];\n            }\n            const info = timelineInfo[name];\n\n            info.push([delay + time, lastObj]);\n        }\n\n        if (typeof lastObj === \"object\") {\n            Object.keys(lastObj).forEach(name2 => {\n                forEach(...properties, name2, lastObj[name2]);\n            });\n        }\n      })(item.getId(), frame.get());\n    });\n  });\n  return timelineInfo;\n}\n\nexport function getTarget(target: HTMLElement, conditionCallback: (el: Element) => boolean): HTMLElement {\n    let parentTarget = target;\n\n    while (parentTarget && parentTarget !== document.body) {\n        if (conditionCallback(parentTarget)) {\n            return parentTarget;\n        }\n        parentTarget = parentTarget.parentNode as HTMLElement;\n    }\n    return null;\n}\n\nexport function hasClass(target: Element, className: string) {\n    return hasClass2(target, `${PREFIX}${className}`);\n}\nexport function addClass(target: Element, className: string) {\n    return addClass2(target, `${PREFIX}${className}`);\n}\nexport function removeClass(target: Element, className: string) {\n    return removeClass2(target, `${PREFIX}${className}`);\n}\n\nexport function makeStructure<T, U>(\n    structure: ElementStructure,\n    parentEl?: Element,\n    obj: {\n        structures: IObject<any>,\n        elements: IObject<any>,\n        element: Element,\n    } = {structures: {}, elements: {}, element: null},\n): {structures: T, elements: U, element: Element} {\n    const {id, memberof, children} = structure;\n    const el = createElement(structure);\n    const structures = obj.structures;\n    const elements = obj.elements;\n\n    if (id) {\n        [].concat(id).forEach(nextId => {\n            const isArrayId = nextId.indexOf(\"[]\") > -1;\n            const isDoubleArrayId = isArrayId && nextId.indexOf(\"[][]\") > -1;\n\n            if (isArrayId) {\n                const objId = nextId.replace(/\\[\\]/g, \"\");\n\n                if (!structures[objId]) {\n                    structures[objId] = [];\n                    elements[objId] = [];\n                }\n                if (isDoubleArrayId) {\n                    structures[objId].push([]);\n                    elements[objId].push([]);\n                } else {\n                    structures[objId].push(structure);\n                    elements[objId].push(el);\n                }\n            } else {\n                structures[nextId] = structure;\n                elements[nextId] = el;\n            }\n        });\n    }\n    if (memberof) {\n        if (!structures[memberof]) {\n            structures[memberof] = [[]];\n            elements[memberof] = [[]];\n        }\n        structures[memberof][structures[memberof].length - 1].push(structure);\n        elements[memberof][elements[memberof].length - 1].push(el);\n    }\n\n    if (children) {\n        ([] as Array<string | ElementStructure>).concat(children).filter(child => child).forEach(child => {\n            if (isString(child)) {\n                makeStructure({ selector: child }, el, obj);\n            } else {\n                makeStructure(child, el, obj);\n            }\n        });\n    }\n    parentEl && parentEl.appendChild(el);\n\n    structure.element = el;\n    obj.element = el;\n    return (obj as any);\n}\nexport function compare(\n    prevArr: any,\n    nextArr: any,\n    callback: any,\n    syncCallback: any,\n) {\n    const prevKeys: Array<number | string> = prevArr.map(callback);\n    const nextKeys: Array<number | string> = nextArr.map(callback);\n    const prevKeysObject: IObject<number> = {};\n    const nextKeysObject = {};\n    const added = [];\n    const removed = [];\n\n    prevKeys.forEach((key, i) => {\n        prevKeysObject[key] = i;\n    });\n    nextKeys.forEach((key, i) => {\n        if (!(key in prevKeysObject)) {\n            added.push(i);\n        } else {\n            syncCallback(prevArr[prevKeysObject[key]], nextArr[i]);\n        }\n        nextKeysObject[key] = i;\n    });\n    prevKeys.forEach((key, i) => {\n        if (!(key in nextKeysObject)) {\n            removed.push(i);\n        }\n    });\n\n    return {added, removed};\n}\nexport function makeCompareStructure(\n    prevStructures: any,\n    nextStructures: any,\n    parentStructure: any,\n    callback: any,\n    syncCallback?: any,\n) {\n    const parentElement = parentStructure.element;\n\n    const {added, removed} = compare(\n        prevStructures,\n        nextStructures,\n        callback,\n        (prev, next) => {\n            next.element = prev.element;\n            syncCallback && syncCallback(prev, next);\n        },\n    );\n    removed.reverse().forEach(index => {\n        parentElement.removeChild(prevStructures[index].element);\n    });\n    added.forEach(index => {\n        const {element} = makeStructure(\n            nextStructures[index],\n        );\n        parentElement.insertBefore(\n            element,\n            nextStructures[index + 1] && nextStructures[index + 1].element,\n        );\n    });\n\n    parentStructure.children = nextStructures;\n}\nexport function isScene(value: any): value is Scene {\n    return value.constructor.name === \"Scene\";\n}\nexport function isSceneItem(value: any): value is SceneItem {\n    return value.constructor.name === \"SceneItem\";\n}\nexport function isFrame(value: any): value is Frame {\n    return value.constructor.name === \"Frame\";\n}\nexport function splitProperty(scene: Scene, property: string) {\n    const names = property.split(\"///\");\n    const length = names.length;\n    let item: Scene | SceneItem = scene;\n    let i;\n\n    for (i = 0; i < length; ++i) {\n        if (isSceneItem(item)) {\n            break;\n        }\n        item = scene.getItem(names[i]);\n    }\n    return {\n        item: item as SceneItem,\n        names: names.slice(0, i),\n        properties: names.slice(i),\n    };\n}\nexport function getSceneItem(scene: Scene, names: string[]): SceneItem {\n    return names.reduce<any>(\n        (nextScene, name) => nextScene.getItem(name),\n        scene,\n    );\n}\n\nexport function findElementIndexByPosition(elements: HTMLElement[], pos: number): number {\n    const length = elements.length;\n\n    for (let index = 0; index < length; ++index) {\n        const el = elements[index];\n        const box = el.getBoundingClientRect();\n        const top = box.top;\n        const bottom = top + box.height;\n\n        if (top <= pos && pos < bottom) {\n            return index;\n        }\n    }\n    return -1;\n}\n","import { toValue } from \"./utils\";\nimport { ElementStructure } from \"./types\";\n\nexport function updateKeyframesStructure(keyframes: ElementStructure[], maxTime) {\n    keyframes.forEach(keyframe => {\n        const {selector, dataset, style} = keyframe;\n        if (selector === \".keyframe\") {\n            style.left = `${dataset.time / maxTime * 100}%`;\n        } else {\n            style.left = `${dataset.from / maxTime * 100}%`,\n            style.width = `${(dataset.to - dataset.from) / maxTime * 100}%`;\n        }\n    });\n}\nexport function getKeyframesStructure(times, maxTime) {\n    const keyframeLines = [];\n\n    const keyframes = times.map(([time, value], i) => {\n        const valueText = toValue(value);\n\n        if (times[i + 1]) {\n            const [nextTime, nextValue] = times[i + 1];\n            const nextValueText = toValue(nextValue);\n\n            if (valueText === nextValueText) {\n                keyframeLines.push({\n                    selector: \".keyframe_line\",\n                    dataset: {\n                        time: `${time},${nextTime}`,\n                        from: time,\n                        to: nextTime,\n                    },\n                    style: {\n                        left: `${time / maxTime * 100}%`,\n                        width: `${(nextTime - time) / maxTime * 100}%`,\n                    },\n                });\n            }\n        }\n\n        return {\n            memberof: \"keyframesInfoList\",\n            selector: \".keyframe\",\n            dataset: {\n                time,\n                value: valueText,\n            },\n            style: {\n                left: `${time / maxTime * 100}%`,\n            },\n            html: `${time} ${valueText}`,\n        };\n    });\n\n    return [...keyframes, ...keyframeLines];\n}\n","import { now } from \"@daybrush/utils\";\n\nlet prevTime = 0;\nlet prevX = -1;\nlet prevY = -1;\n\nexport function dblCheck(isDrag, e, clientX, clientY, callback) {\n    const currentTime = now();\n\n    if (!isDrag) {\n        if (\n            prevX === clientX &&\n            prevY === clientY &&\n            currentTime - prevTime <= 500\n        ) {\n            callback(e, clientX, clientY);\n        }\n        prevX = clientX;\n        prevY = clientY;\n        prevTime = currentTime;\n    }\n}\n","export function getKeytimesStructure(maxTime) {\n    const keytimes = [];\n\n    for (let time = 0; time <= maxTime; ++time) {\n        keytimes.push({\n            dataset: {\n                time,\n            },\n            selector: \".keytime\",\n            style: {\n                width: `${100 / maxTime}%`,\n            },\n            children: [\n                {\n                    selector: \"span\",\n                    html: `${time}`,\n                },\n                {selector: \".graduation.start\"},\n                {selector: \".graduation.quarter\"},\n                {selector: \".graduation.half\"},\n                {selector: \".graduation.quarter3\"},\n            ],\n        });\n    }\n    return keytimes;\n}\nexport function getLinesStructure(maxTime: number) {\n    const lines = [];\n\n    for (let time = 0; time <= maxTime; ++time) {\n        lines.push({\n            selector: \".division_line\",\n            style: {\n                left: `${100 / maxTime * time}%`,\n            },\n        });\n    }\n    return lines;\n}\n","import Scene, { SceneItem } from \"scenejs\";\nimport {\n    getTimelineInfo, toValue, getTarget,\n    hasClass, removeClass, addClass, makeStructure, flatObject,\n    makeCompareStructure, splitProperty, getSceneItem, findElementIndexByPosition, applyStyle\n} from \"./utils\";\nimport { drag } from \"@daybrush/drag\";\nimport { CSS } from \"./consts\";\nimport { isObject, IObject, now } from \"@daybrush/utils\";\nimport Axes, { PinchInput } from \"@egjs/axes\";\nimport { ElementStructure, Ids } from \"./types\";\nimport { getKeyframesStructure, updateKeyframesStructure } from \"./KeyframesStructure\";\nimport { dblCheck } from \"./dblcheck\";\nimport { getKeytimesStructure, getLinesStructure } from \"./KeytimesStructure\";\n\nlet isExportCSS = false;\n\nexport default class Timeline {\n    private scene: Scene;\n    private structures: Ids<ElementStructure>;\n    private elements: Ids<HTMLElement>;\n    private propertiesNames: string[] = [];\n    private maxTime: number = 0;\n    private axes: Axes;\n    private selectedIndex: number = -1;\n    constructor(scene: Scene, parentEl: HTMLElement) {\n        scene.finish();\n\n        this.scene = scene;\n        this.initElement(scene, parentEl);\n        this.editor();\n    }\n    public getElement() {\n        return this.elements.timeline;\n    }\n    private initElement(scene: Scene, parentEl: HTMLElement) {\n        const duration = scene.getDuration();\n        const timelineInfo = getTimelineInfo(scene);\n        const maxDuration = Math.ceil(duration);\n        const maxTime = maxDuration + 5;\n        const propertiesNames = this.propertiesNames;\n        const properties: ElementStructure[] = [];\n        const values: ElementStructure[] = [];\n        const keyframesList: ElementStructure[] = [];\n        let timelineCSS: ElementStructure;\n\n        this.maxTime = maxTime;\n        if (!isExportCSS) {\n            timelineCSS = {\n                selector: \"style.style\",\n                html: CSS,\n            };\n            isExportCSS = true;\n        }\n\n        for (const property in timelineInfo) {\n            const propertyNames = property.split(\"///\");\n            const length = propertyNames.length;\n            const times = timelineInfo[property];\n            const id = propertyNames[length - 1];\n\n            propertiesNames.push(property);\n            properties.push({\n                id: \"properties[]\",\n                selector: \".property\",\n                dataset: {\n                    id,\n                    property,\n                    parent: propertyNames[length - 2] || \"\",\n                    object: \"0\",\n                    item: propertyNames[0],\n                },\n                style: {\n                    paddingLeft: `${10 + (length - 1) * 20}px`,\n                },\n                children: [\n                    { selector: \".arrow\"},\n                    {\n                        selector: \"span\",\n                        html: id,\n                    },\n                ],\n            });\n            const isHasObject = times[0] && isObject(times[0][1]);\n            values.push({\n                id: \"values[]\",\n                selector: \".value\",\n                dataset: {\n                    property,\n                    object: isHasObject ? \"1\" : \"0\",\n                },\n                children: {\n                    id: \"inputs[]\",\n                    selector: \"input\",\n                    attr: {\n                        value: times[0] ? times[0][1] : \"\",\n                    },\n                },\n            });\n            const parentProperty = propertyNames.slice(0, -1).join(\"///\");\n            properties.forEach(({dataset}) => {\n                if (dataset.property === parentProperty) {\n                    dataset.object = \"1\";\n                }\n            });\n            const keyframes = getKeyframesStructure(times, maxTime);\n            keyframesList.push({\n                id: [\n                    \"keyframesList[]\",\n                    \"keyframesInfoList[][]\",\n                ],\n                selector: \".keyframes\",\n                dataset: {\n                    property,\n                },\n                children: {\n                    id: \"keyframesContainers[]\",\n                    selector: \".keyframes_container\",\n                    children: keyframes,\n                },\n            });\n        }\n        const structure: ElementStructure = {\n            selector: \".timeline\",\n            id: \"timeline\",\n            children: [\n                timelineCSS,\n                {\n                    selector: \".header_area.control_area\",\n                    children: [\n                        {\n                            selector: \".properties_area\",\n                            children: {\n                                selector: \".property\",\n                            },\n                        },\n                        {\n                            selector: \".values_area\",\n                            children: {\n                                selector: \".value\",\n                            },\n                        },\n                        {\n                            selector: \".keyframes_area\",\n                            children: {\n                                selector: \".keyframes\",\n                                children: [\n                                    {\n                                        selector: \".time_area\",\n                                        id: \"timeArea\",\n                                        html: \"0\",\n                                    },\n                                    {\n                                        selector: \".play_control_area\",\n                                        id: \"playControlArea\",\n                                        children: [\n                                            {\n                                                selector: \".control.prev\",\n                                                html: \"prev\",\n                                            },\n                                            {\n                                                selector: \".control.play\",\n                                                html: \"play\",\n                                            },\n                                            {\n                                                selector: \".control.next\",\n                                                html: \"next\",\n                                            },\n                                        ],\n                                    },\n                                ],\n                            },\n                        },\n                    ],\n                },\n                {\n                    selector: \".header_area\",\n                    children: [\n                        {\n                            id: [\n                                \"propertiesAreas[]\",\n                            ],\n                            selector: \".properties_area\",\n                            children: [\n                                {\n                                    selector: \".property\",\n                                    html: \"Name\",\n                                },\n                            ],\n                        },\n                        {\n                            selector: \".values_area\",\n                            children: {\n                                selector: \".value\",\n                                html: \"+\",\n                            },\n                        },\n                        {\n                            id: \"keyframesAreas[]\",\n                            selector: \".keyframes_area\",\n                            children: {\n                                style: {\n                                    minWidth: `${50 * maxTime}px`,\n                                    width: `${(maxDuration ? maxTime / maxDuration : 1) * 100}%`,\n                                },\n                                id: \"keyframesScrollAreas[]\",\n                                selector: \".keyframes_scroll_area\",\n                                children: {\n                                    selector: \".keyframes\",\n                                    children: [\n                                        {\n                                            id: \"keytimesContainer\",\n                                            selector: \".keyframes_container\",\n                                            children: getKeytimesStructure(maxTime),\n                                        },\n                                        {\n                                            selector: \".keyframe_cursor\",\n                                            id: \"cursors[]\",\n                                        },\n                                    ],\n                                },\n                            },\n                        },\n                    ],\n                },\n                {\n                    id: \"scrollArea\",\n                    selector: \".scroll_area\",\n                    children: [\n                        {\n                            id: \"propertiesAreas[]\",\n                            selector: \".properties_area\",\n                            children: [\n                                {\n                                    selector: \".properties_scroll_area\",\n                                    children: properties,\n                                },\n                            ],\n                        },\n                        {\n                            id: \"valuesArea\",\n                            selector: \".values_area\",\n                            children: values,\n                        },\n                        {\n                            id: \"keyframesAreas[]\",\n                            selector: \".keyframes_area\",\n                            children: {\n                                style: {\n                                    minWidth: `${50 * maxTime}px`,\n                                    width: `${(maxDuration ? maxTime / maxDuration : 1) * 100}%`,\n                                },\n                                id: \"keyframesScrollAreas[]\",\n                                selector: \".keyframes_scroll_area\",\n                                children: [\n                                    ...keyframesList,\n                                    {\n                                        selector: \".keyframe_cursor\",\n                                        id: \"cursors[]\",\n                                    },\n                                    {\n                                        id: \"lineArea\",\n                                        selector: \".line_area\",\n                                        children: getLinesStructure(maxTime),\n                                    },\n                                ],\n                            },\n                        },\n                    ],\n                },\n            ],\n        };\n\n        const {structures, elements} = makeStructure(structure, parentEl);\n\n        this.structures = structures;\n        this.elements = elements;\n        this.syncScroll();\n        this.wheelZoom();\n        this.dragKeyframes();\n        this.clickProperty();\n    }\n    private syncScroll() {\n        const {\n            keyframesAreas,\n        } = this.elements;\n        let isScrollKeyframe = false;\n\n        keyframesAreas[0].addEventListener(\"scroll\", () => {\n            if (isScrollKeyframe) {\n                isScrollKeyframe = false;\n            } else {\n                isScrollKeyframe = true;\n                keyframesAreas[1].scrollLeft = keyframesAreas[0].scrollLeft;\n            }\n        });\n        keyframesAreas[1].addEventListener(\"scroll\", () => {\n            if (isScrollKeyframe) {\n                isScrollKeyframe = false;\n            } else {\n                isScrollKeyframe = true;\n                keyframesAreas[0].scrollLeft = keyframesAreas[1].scrollLeft;\n            }\n        });\n    }\n    private wheelZoom() {\n        const { keyframesScrollAreas } = this.elements;\n        const originalWidth = parseFloat(keyframesScrollAreas[0].style.width);\n\n        const axes = new Axes({\n            zoom: {\n                range: [100, Infinity],\n            },\n        }, {}, {\n                zoom: originalWidth,\n            });\n        axes.connect(\"zoom\", new PinchInput(keyframesScrollAreas[1], {\n            scale: 0.7,\n            hammerManagerOptions: {\n                touchAction: \"auto\",\n            },\n        }));\n        axes.on(\"hold\", e => {\n            console.log(\"hold\");\n            if (e.inputEvent) {\n                e.inputEvent.preventDefault();\n            }\n        });\n        axes.on(\"change\", e => {\n            const width = e.pos.zoom;\n\n            keyframesScrollAreas.forEach(el => {\n                el.style.width = `${width}%`;\n            });\n\n            if (e.inputEvent) {\n                e.inputEvent.preventDefault();\n            }\n        });\n\n        this.axes = axes;\n        keyframesScrollAreas[0].addEventListener(\"wheel\", e => {\n            const delta = e.deltaY;\n\n            axes.setBy({ zoom: delta / originalWidth * 5 });\n            !e.deltaX && e.preventDefault();\n        });\n    }\n    private select(index: number) {\n        const prevSelectedIndex = this.selectedIndex;\n        const values = this.structures.values;\n        const properties = this.structures.properties;\n        const keyframesList = this.structures.keyframesList;\n\n        this.selectedIndex = index;\n\n        if (prevSelectedIndex > -1) {\n            removeClass(properties[prevSelectedIndex].element, \"select\");\n            removeClass(values[prevSelectedIndex].element, \"select\");\n            removeClass(keyframesList[prevSelectedIndex].element, \"select\");\n        }\n\n        if (index > -1) {\n            addClass(properties[index].element, \"select\");\n            addClass(values[index].element, \"select\");\n            addClass(keyframesList[index].element, \"select\");\n        }\n    }\n    private clickProperty() {\n        const {\n            keyframesList,\n            values,\n            propertiesAreas,\n        } = this.elements;\n\n        propertiesAreas[1].addEventListener(\"click\", e => {\n            const properties = this.elements.properties;\n            const length = properties.length;\n            const arrow = getTarget(e.target as HTMLElement, el => hasClass(el, \"arrow\"));\n            const target = getTarget(e.target as HTMLElement, el => hasClass(el, \"property\"));\n\n            if (!target) {\n                return;\n            }\n            let index = properties.indexOf(target);\n\n            if (index === -1) {\n                return;\n            }\n            // select\n            if (!arrow) {\n                this.select(index);\n                return;\n            }\n\n            // fold\n            if (target.getAttribute(\"data-object\") === \"0\") {\n                return;\n            }\n            const isFold = target.getAttribute(\"data-fold\") === \"1\";\n\n            function fold(isPrevFold) {\n                const nextTarget = properties[index];\n                const nextProperty = nextTarget.getAttribute(\"data-property\");\n                const isNextFold = nextTarget.getAttribute(\"data-fold\") === \"1\";\n                const isNextObject = nextTarget.getAttribute(\"data-object\") === \"1\";\n\n                if (target !== nextTarget) {\n                    if (isFold) {\n                        if (!isPrevFold)  {\n                            removeClass(keyframesList[index], \"fold\");\n                            removeClass(values[index], \"fold\");\n                            removeClass(nextTarget, \"fold\");\n                        }\n                    } else {\n                        addClass(keyframesList[index], \"fold\");\n                        addClass(values[index], \"fold\");\n                        addClass(nextTarget, \"fold\");\n                    }\n                }\n                if (!isNextObject) {\n                    return;\n                }\n\n                for (++index; index < length; ++index) {\n                    const el = properties[index];\n\n                    if (\n                        // itemProperties\n                        el.getAttribute(\"data-property\").indexOf(nextProperty) > -1\n                    ) {\n                        // isChild\n                        fold(!isPrevFold && isNextFold);\n                    } else {\n                        --index;\n                        // not child\n                        break;\n                    }\n                }\n            }\n\n            fold(isFold);\n            target.setAttribute(\"data-fold\", isFold ? \"0\" : \"1\");\n        });\n    }\n    private setInputs(obj: IObject<any>) {\n        const valuesArea = this.elements.valuesArea;\n        for (const name in obj) {\n            valuesArea.querySelector<HTMLInputElement>(`[data-property=\"${name}\"] input`).value = obj[name];\n        }\n    }\n    private moveCursor(time: number) {\n        const {cursors} = this.elements;\n        const maxTime = this.maxTime;\n        const px = 15 - 30 * time / maxTime;\n        const percent = 100 * time / maxTime;\n        const left = `calc(${percent}% + ${px}px)`;\n\n        cursors.forEach(cursor => {\n            cursor.style.left = left;\n        });\n    }\n    private dragKeyframes() {\n        const structures = this.structures;\n        const {\n            scrollArea,\n            timeArea,\n            cursors,\n            keyframesAreas,\n            keyframesScrollAreas,\n        } = this.elements;\n        const scene = this.scene;\n\n        scene.on(\"animate\", e => {\n            const time = e.time;\n            this.moveCursor(time);\n\n            this.setInputs(flatObject(e.frames));\n            timeArea.innerHTML = `${time}`;\n        });\n        const getTime = (clientX: number) => {\n            const rect = keyframesScrollAreas[1].getBoundingClientRect();\n            const scrollAreaWidth = rect.width - 30;\n            const scrollAreaX = rect.left + 15;\n            const x = Math.min(scrollAreaWidth, Math.max(clientX - scrollAreaX, 0));\n            const percentage = x / scrollAreaWidth;\n            let time = this.maxTime * percentage;\n\n            time = Math.round(time * 20) / 20;\n\n            return time;\n        };\n        const move = (clientX: number) => {\n            scene.setTime(getTime(clientX));\n        };\n        const click = (e, clientX, clientY) => {\n            const target = getTarget(e.target as HTMLElement, el => hasClass(el, \"keyframe\"));\n\n            if (target) {\n                scene.setTime(target.getAttribute(\"data-time\"));\n            } else if (!hasClass(e.target as Element, \"keyframe_cursor\")) {\n                move(clientX);\n            }\n            const list = structures.keyframesList;\n            const index = findElementIndexByPosition(\n                list.map(({element}) => element),\n                clientY,\n            );\n\n            this.select(index);\n            e.preventDefault();\n        };\n        const dblclick = (e, clientX, clientY) => {\n            const list = this.structures.keyframesList;\n            const index = findElementIndexByPosition(\n                list.map(({element}) => element),\n                clientY,\n            );\n\n            if (index === -1) {\n                return;\n            }\n            const time = getTime(clientX);\n            const {item, properties} = splitProperty(scene, list[index].dataset.property);\n\n            this.editKeyframe(time, item.getNowValue(time, properties), index, true);\n            this.updateKeytimes();\n        };\n        drag(cursors[0], {\n            dragstart: ({inputEvent}) => {\n                inputEvent.stopPropagation();\n            },\n            drag: ({ clientX }) => {\n                move(clientX);\n            },\n            container: window,\n        });\n        keyframesScrollAreas.forEach(el => {\n            drag(el, {\n                container: window,\n                drag: ({ deltaX, deltaY, inputEvent }) => {\n                    keyframesAreas[1].scrollLeft -= deltaX;\n                    scrollArea.scrollTop -= deltaY;\n                    inputEvent.preventDefault();\n                },\n                dragend: ({ isDrag, clientX, clientY, inputEvent }) => {\n                    !isDrag && click(inputEvent, clientX, clientY);\n                    dblCheck(isDrag, inputEvent, clientX, clientY, dblclick);\n                },\n            });\n        });\n    }\n    private updateKeytimes() {\n        const maxTime = this.scene.getDuration() + 5;\n        const currentMaxTime = this.maxTime;\n\n        if (maxTime === currentMaxTime) {\n            return;\n        }\n\n        this.maxTime = maxTime;\n        const keytimesContainer = this.structures.keytimesContainer;\n        const lineArea = this.structures.lineArea;\n        const keytimes = keytimesContainer.children as ElementStructure[];\n        const lines = lineArea.children as ElementStructure[];\n        const nextKeytimes = getKeytimesStructure(maxTime);\n        const nextLines = getLinesStructure(maxTime);\n\n        makeCompareStructure(\n            keytimes,\n            nextKeytimes,\n            keytimesContainer,\n            ({dataset}) => (dataset.time),\n            (prev, cur) => {\n                applyStyle(cur.element, cur.style);\n            },\n        );\n        makeCompareStructure(\n            lines,\n            nextLines,\n            lineArea,\n            (_, i) => i,\n            (prev, cur) => {\n                applyStyle(cur.element, cur.style);\n            },\n        );\n        const keyframesContainers = this.structures.keyframesContainers;\n\n        keyframesContainers.forEach(keyframesContainer => {\n            const children = keyframesContainer.children as ElementStructure[];\n            updateKeyframesStructure(children, maxTime);\n\n            children.forEach(structure => {\n                applyStyle(structure.element, structure.style);\n            });\n        });\n\n        this.moveCursor(this.scene.getTime());\n\n        if (currentMaxTime && currentMaxTime < maxTime) {\n            this.axes.setTo({\n                zoom: this.axes.get([\"zoom\"]).zoom * maxTime / currentMaxTime,\n            });\n        }\n    }\n    private updateKeyframes(names: string[], properties: string[], index: number) {\n        const keyframesContainer = this.structures.keyframesContainers[index];\n        const keyframes = keyframesContainer.children as ElementStructure[];\n        const length = properties.length;\n        const scene = this.scene;\n        const item: SceneItem = getSceneItem(scene, names);\n        const times = item.times.filter(time =>\n            length ?\n            item.getFrame(time).has(...properties) :\n            true,\n        );\n        const delay = item.getDelay();\n        const nextKeyframes = getKeyframesStructure(\n            times.map(time => [delay + time, item.getFrame(time).get(...properties)]),\n            this.maxTime,\n        );\n\n        makeCompareStructure(\n            keyframes,\n            nextKeyframes,\n            keyframesContainer,\n            ({dataset}) => (dataset.time),\n        );\n\n        if (length) {\n            const nextProperties = properties.slice(0, -1);\n            const nextProperty = [...names, ...nextProperties].join(\"///\");\n            const nextIndex = this.propertiesNames.indexOf(nextProperty);\n\n            if (nextIndex !== -1) {\n                this.updateKeyframes(names, nextProperties, nextIndex);\n                return;\n            }\n        }\n        scene.setTime(scene.getTime());\n    }\n    private editKeyframe(time: number, value: any, index: number, isForce?: boolean) {\n        const valuesStructure = this.structures.values;\n        const isObjectData = this.structures.properties[index].dataset.object === \"1\";\n\n        if (isObjectData) {\n            return;\n        }\n        const property = valuesStructure[index].dataset.property as string;\n        const scene = this.scene;\n        const {\n            names,\n            properties,\n            item,\n        } = splitProperty(scene, property);\n\n        if (!isForce) {\n            const prevValue = (item as SceneItem).getNowValue(time, properties);\n\n            if (`${prevValue}` === value) {\n                return;\n            }\n        }\n        item.set(time, ...properties, value);\n\n        scene.setTime(time);\n        this.updateKeyframes(names, properties, index);\n    }\n    private edit(target: HTMLInputElement, value: any, isForce?: boolean) {\n        const parentEl = getTarget(target, el => hasClass(el, \"value\"));\n\n        if (!parentEl) {\n            return;\n        }\n        const values = this.elements.values;\n        const index = values.indexOf(parentEl);\n\n        if (index === -1) {\n            return;\n        }\n        this.editKeyframe(this.scene.getTime(), value, index, isForce);\n    }\n    private editor() {\n        const valuesArea = this.elements.valuesArea;\n\n        valuesArea.addEventListener(\"keyup\", e => {\n            if (e.keyCode !== 13) {\n                return;\n            }\n            const target = e.target as HTMLInputElement;\n\n            this.edit(target, target.value, true);\n        });\n        valuesArea.addEventListener(\"focusout\", e => {\n            const target = e.target as HTMLInputElement;\n\n            this.edit(target, target.value);\n        });\n    }\n}\n"],"names":["PREFIX","CSS","replace","applyStyle","el","style","name","createElement","structure","parentEl","selector","dataset","attr","html","classNames","match","tag","id","document","className","map","join","setAttribute","innerHTML","appendChild","keys","value","arr","push","toValue","type","Array","isArray","k","flatObject","obj","newObj","isObject","nextObj","isFrame","get","nextName","getTimelineInfo","scene","timelineInfo","forEach","item","delay","getDelay","times","time","frame","getFrame","_i","objs","length","lastObj","properties","slice","info","Object","name2","getId","getTarget","target","conditionCallback","parentTarget","body","parentNode","hasClass","hasClass2","addClass","addClass2","removeClass","removeClass2","makeStructure","structures","elements","element","memberof","children","concat","nextId","isArrayId","indexOf","isDoubleArrayId","objId","filter","child","isString","compare","prevArr","nextArr","callback","syncCallback","prevKeys","nextKeys","prevKeysObject","nextKeysObject","added","removed","key","i","makeCompareStructure","prevStructures","nextStructures","parentStructure","parentElement","_a","reverse","index","removeChild","insertBefore","isSceneItem","constructor","splitProperty","property","names","split","getItem","getSceneItem","reduce","nextScene","findElementIndexByPosition","pos","box","getBoundingClientRect","top","bottom","height","updateKeyframesStructure","keyframes","maxTime","keyframe","left","from","width","to","getKeyframesStructure","keyframeLines","valueText","_b","nextTime","nextValue","nextValueText","prevTime","prevX","prevY","dblCheck","isDrag","e","clientX","clientY","currentTime","now","getKeytimesStructure","keytimes","getLinesStructure","lines","isExportCSS","finish","initElement","editor","timeline","duration","getDuration","maxDuration","Math","ceil","propertiesNames","values","keyframesList","timelineCSS","propertyNames","parent","object","paddingLeft","isHasObject","parentProperty","minWidth","syncScroll","wheelZoom","dragKeyframes","clickProperty","keyframesAreas","isScrollKeyframe","addEventListener","scrollLeft","keyframesScrollAreas","originalWidth","parseFloat","axes","Axes","zoom","range","Infinity","connect","PinchInput","scale","hammerManagerOptions","touchAction","on","console","log","inputEvent","preventDefault","delta","deltaY","setBy","deltaX","prevSelectedIndex","selectedIndex","propertiesAreas","_this","arrow","select","getAttribute","isFold","fold","isPrevFold","nextTarget","nextProperty","isNextFold","isNextObject","valuesArea","querySelector","cursors","px","percent","cursor","scrollArea","timeArea","moveCursor","setInputs","frames","getTime","rect","scrollAreaWidth","scrollAreaX","x","min","max","percentage","round","move","setTime","click","list","dblclick","editKeyframe","getNowValue","updateKeytimes","drag","dragstart","stopPropagation","container","window","scrollTop","dragend","currentMaxTime","keytimesContainer","lineArea","nextKeytimes","nextLines","prev","cur","_","keyframesContainers","keyframesContainer","setTo","has","nextKeyframes","nextProperties","nextIndex","updateKeyframes","isForce","valuesStructure","isObjectData","prevValue","set","keyCode","edit"],"mappings":"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"}