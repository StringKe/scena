{"version":3,"file":"timeline.min.js","sources":["../src/consts.ts","../src/utils.ts","../src/KeyframesStructure.ts","../src/dblcheck.ts","../src/KeytimesStructure.ts","../src/Timeline.ts"],"sourcesContent":["export const PREFIX = `scenejs_timeline_`;\n\nexport const CSS = `\n.timeline {\n  position: relative;\n  font-size: 0;\n  background: #000;\n  display: flex;\n  flex-direction: column;\n}\n.header_area, .scroll_area {\n   width: 100%;\n   position: relative;\n  display: flex;\n  -webkit-align-items: flex-start;\n  align-items: flex-start;\n}\n.header_area {\n  position: relative;\n  z-index: 10;\n  top: 0;\n  height: 30px;\n  min-height: 30px;\n}\n.header_area .keyframes {\n  padding: 0px;\n}\n.header_area .properties_area,\n.header_area .keyframes_area,\n.header_area .values_area,\n.header_area .keyframes_scroll_area {\n    height: 100%;\n}\n.header_area .property, .header_area .value, .header_area .keyframes {\n  height: 100%;\n}\n.header_area .property {\n    line-height: 30px;\n}\n.header_area .value {\n    text-align: center;\n    color: #fff;\n    line-height: 30px;\n    font-weight: bold;\n    font-size: 20px;\n}\n.header_area .keyframes_area::-webkit-scrollbar {\n    display: none; // Safari and Chrome\n}\n.header_area .keyframe_cursor {\n    position: absolute;\n    border-top: 10px solid #f55;\n    border-left: 5px solid transparent;\n    border-right: 5px solid transparent;\n    width: 0;\n    height: 0;\n    bottom: 0;\n    top: auto;\n    background: none;\n    cursor: pointer;\n}\n.control_area .keyframes {\n    padding-left: 10px;\n}\n.play_control_area {\n    position: absolute;\n    top: 0;\n    left: 50%;\n    transform: translate(-50%);\n}\n.play_control_area .control {\n    display: inline-block;\n    color: white;\n    margin: 0px 10px;\n}\n.keytime {\n  position: relative;\n  display: inline-block;\n  height: 100%;\n  font-size: 13px;\n  font-weight: bold;\n  color: #777;\n}\n.keytime:last-child {\n  max-width: 0px;\n}\n.keytime span {\n  position: absolute;\n  top: 2px;\n  left: 0;\n  display: inline-block;\n  transform: translate(-50%);\n  color: #eee;\n}\n.keytime .graduation {\n  position: absolute;\n  bottom: 0;\n  width: 1px;\n  height: 10px;\n  background: #777;\n  transform: translate(-50%);\n}\n.keytime .graduation.half {\n  left: 50%;\n  height: 7px;\n}\n.keytime .graduation.quarter {\n  left: 25%;\n  height: 5px;\n}\n.keytime .graduation.quarter3 {\n  left: 75%;\n  height: 5px;\n}\n.scroll_area {\n  position: relative;\n  width: 100%;\n  height: calc(100% - 60px);\n  overflow: auto;\n}\n.properties_area, .keyframes_area, .values_area {\n  display: inline-block;\n  position: relative;\n  font-size: 16px;\n  overflow: auto;\n}\n\n.properties_area::-webkit-scrollbar, .keyframes_area::-webkit-scrollbar {\n    display: none; // Safari and Chrome\n}\n.properties_area {\n  width: 30%;\n  max-width: 200px;\n  box-sizing: border-box;\n}\n.values_area {\n    width: 50px;\n    min-width: 50px;\n    display: inline-block;\n    border-right: 1px solid #999;\n    box-sizing: border-box;\n}\n.value input {\n    appearance: none;\n    -webkit-appearance: none;\n    outline: none;\n    position: relative;\n    display: block;\n    width: 100%;\n    height: 100%;\n    background: transparent;\n    color: #fe5;\n    font-weight: bold;\n    background: none;\n    border: 0;\n    box-sizing: border-box;\n    text-align: center;\n}\n.value[data-object=\"1\"] input {\n    display: none;\n}\n.properties_scroll_area {\n  display: inline-block;\n  min-width: 100%;\n}\n.keyframes_area {\n  flex: 1;\n}\n.keyframes_scroll_area {\n  position: relative;\n  min-width: 300px;\n}\n.keyframes, .property, .value {\n  position: relative;\n  height: 25px;\n  border-bottom: 1px solid #777;\n  box-sizing: border-box;\n  white-space: nowrap;\n  background: rgba(90, 90, 90, 0.7);\n  z-index: 1;\n}\n\n.property {\n  line-height: 25px;\n  padding-left: 10px;\n  box-sizing: border-box;\n  font-size: 13px;\n  font-weight: bold;\n  color: #eee;\n}\n.time_area {\n    font-size: 13px;\n    color: #fe5;\n    line-height: 30px;\n    font-weight: bold;\n}\n.time_area:after {\n    content: \"s\";\n}\n.property .arrow {\n    position: relative;\n    display: inline-block;\n    margin-right: 5px;\n    width: 0;\n    vertical-align: middle;\n    cursor: pointer;\n    border-top: 6px solid #eee;\n    border-left: 4px solid transparent;\n    border-right: 4px solid transparent;\n}\n.property[data-fold=\"1\"] .arrow {\n    border-top: 4px solid transparent;\n    border-bottom: 4px solid transparent;\n    border-right: 0;\n    border-left: 6px solid #eee;\n    margin-left: 2px;\n}\n.property[data-object=\"0\"] .arrow {\n    display: none;\n}\n.property.fold, .keyframes.fold, .value.fold {\n    display: none;\n}\n.property.select, .value.select, .keyframes.select {\n    background: rgba(120, 120, 120, 0.7);\n}\n.keyframes {\n\n}\n.keyframe_line {\n  position: absolute;\n  height: 8px;\n  top: 0;\n  bottom: 0;\n  margin: auto;\n  background: #aaa;\n  z-index: 0;\n}\n.keyframe {\n  position: absolute;\n  font-size: 0px;\n  width: 12px;\n  height: 12px;\n  top: 0px;\n  bottom: 0px;\n  margin: auto;\n  background: #fff;\n  border: 2px solid #383838;\n  border-radius: 2px;\n  box-sizing: border-box;\n  transform: translate(-50%) rotate(45deg);\n  z-index: 1;\n  cursor: pointer;\n}\n.select .keyframe {\n    border-color: #4d4d4d;\n}\n.keyframes_container, .line_area {\n  position: relative;\n  width: calc(100% - 30px);\n  left: 15px;\n  height: 100%;\n}\n.line_area {\n  position: absolute;\n  top: 0;\n  z-index: 0;\n}\n.keyframe_cursor {\n  position: absolute;\n  top: 0;\n  z-index: 1;\n  background: #f55;\n  width: 1px;\n  height: 100%;\n  left: 15px;\n  transform: translate(-50%);\n}\n.division_line {\n  position: absolute;\n  background: #333;\n  width: 1px;\n  height: 100%;\n  transform: translate(-50%);\n}\n`.replace(/\\.([^{,\\s\\d.]+)/g, `.${PREFIX}$1`);\n","import { PREFIX } from \"./consts\";\nimport Scene, { SceneItem, Frame } from \"scenejs\";\nimport {\n    hasClass as hasClass2,\n    addClass as addClass2,\n    removeClass as removeClass2,\n    isString,\n    IObject,\n    isObject,\n    isArray,\n} from \"@daybrush/utils\";\nimport { ElementStructure } from \"./types\";\nimport { sync } from \"resolve\";\n\nexport function applyStyle(el: HTMLElement, style: IObject<any>) {\n    for (const name in style) {\n        el.style[name] = style[name];\n    }\n}\nexport function createElement(structure: ElementStructure, parentEl?: Element) {\n    const {selector, dataset, attr, style, html} = structure;\n\n    const classNames = selector.match(/\\.([^.#\\s])+/g) || [];\n    const tag = (selector.match(/^[^.#\\s]+/g) || [])[0] || \"div\";\n    const id = (selector.match(/#[^.#\\s]+/g) || [])[0] || \"\";\n    const el = document.createElement(tag);\n\n    id && (el.id = id.replace(/^#/g, \"\"));\n    el.className = classNames.map(name => `${PREFIX}${name.replace(/^\\./g, \"\")}`).join(\" \");\n\n    if (dataset) {\n        for (const name in dataset) {\n            el.setAttribute(`data-${name}`, dataset[name]);\n        }\n    }\n    if (attr) {\n        for (const name in attr) {\n            el.setAttribute(name, attr[name]);\n        }\n    }\n    if (style) {\n        applyStyle(el, style);\n    }\n    if (html) {\n        el.innerHTML = html;\n    }\n    parentEl && parentEl.appendChild(el);\n    return el;\n}\nexport function keys(value: object) {\n    const arr = [];\n    for (const name in value) {\n        arr.push(name);\n    }\n    return arr;\n}\nexport function toValue(value: any) {\n    const type = typeof value;\n    if (type === \"object\") {\n        if (Array.isArray(value)) {\n            return `[${value.join(\", \")}]`;\n        }\n        return `{${keys(value).map(k => `${k}: ${toValue(value[k])}`).join(\", \")}}`;\n    }\n    return value;\n}\nexport function flatObject(obj: IObject<any>, newObj: IObject<any> = {}) {\n\n    for (const name in obj) {\n        const value = obj[name];\n\n        if (isObject(value)) {\n            const nextObj = flatObject(isFrame(value) ? value.get() : value);\n\n            for (const nextName in nextObj) {\n                newObj[`${name}///${nextName}`] = nextObj[nextName];\n            }\n        } else {\n            newObj[name] = value;\n        }\n    }\n    return newObj;\n}\nexport function getTimelineInfo(scene: Scene) {\n  const timelineInfo = {};\n  scene.forEach((item: SceneItem) => {\n    const delay = item.getDelay();\n    const times = item.times;\n\n    times.forEach(time => {\n      const frame = item.getFrame(time);\n      (function forEach(...objs: any[]) {\n        const length = objs.length;\n        const lastObj = objs[length - 1];\n        const properties = objs.slice(0, -1);\n\n        const name = properties.join(\"///\");\n\n        if (name) {\n            if (!timelineInfo[name]) {\n                timelineInfo[name] = [];\n            }\n            const info = timelineInfo[name];\n\n            info.push([delay + time, lastObj]);\n        }\n\n        if (typeof lastObj === \"object\") {\n            Object.keys(lastObj).forEach(name2 => {\n                forEach(...properties, name2, lastObj[name2]);\n            });\n        }\n      })(item.getId(), frame.get());\n    });\n  });\n  return timelineInfo;\n}\n\nexport function getTarget(target: HTMLElement, conditionCallback: (el: Element) => boolean): HTMLElement {\n    let parentTarget = target;\n\n    while (parentTarget && parentTarget !== document.body) {\n        if (conditionCallback(parentTarget)) {\n            return parentTarget;\n        }\n        parentTarget = parentTarget.parentNode as HTMLElement;\n    }\n    return null;\n}\n\nexport function hasClass(target: Element, className: string) {\n    return hasClass2(target, `${PREFIX}${className}`);\n}\nexport function addClass(target: Element, className: string) {\n    return addClass2(target, `${PREFIX}${className}`);\n}\nexport function removeClass(target: Element, className: string) {\n    return removeClass2(target, `${PREFIX}${className}`);\n}\n\nexport function makeStructure<T, U>(\n    structure: ElementStructure,\n    parentEl?: Element,\n    obj: {\n        structures: IObject<any>,\n        elements: IObject<any>,\n        element: Element,\n    } = {structures: {}, elements: {}, element: null},\n): {structures: T, elements: U, element: Element} {\n    const {id, memberof, children} = structure;\n    const el = createElement(structure);\n    const structures = obj.structures;\n    const elements = obj.elements;\n\n    if (id) {\n        [].concat(id).forEach(nextId => {\n            const isArrayId = nextId.indexOf(\"[]\") > -1;\n            const isDoubleArrayId = isArrayId && nextId.indexOf(\"[][]\") > -1;\n\n            if (isArrayId) {\n                const objId = nextId.replace(/\\[\\]/g, \"\");\n\n                if (!structures[objId]) {\n                    structures[objId] = [];\n                    elements[objId] = [];\n                }\n                if (isDoubleArrayId) {\n                    structures[objId].push([]);\n                    elements[objId].push([]);\n                } else {\n                    structures[objId].push(structure);\n                    elements[objId].push(el);\n                }\n            } else {\n                structures[nextId] = structure;\n                elements[nextId] = el;\n            }\n        });\n    }\n    if (memberof) {\n        if (!structures[memberof]) {\n            structures[memberof] = [[]];\n            elements[memberof] = [[]];\n        }\n        structures[memberof][structures[memberof].length - 1].push(structure);\n        elements[memberof][elements[memberof].length - 1].push(el);\n    }\n\n    if (children) {\n        ([] as Array<string | ElementStructure>).concat(children).filter(child => child).forEach(child => {\n            if (isString(child)) {\n                makeStructure({ selector: child }, el, obj);\n            } else {\n                makeStructure(child, el, obj);\n            }\n        });\n    }\n    parentEl && parentEl.appendChild(el);\n\n    structure.element = el;\n    obj.element = el;\n    return (obj as any);\n}\nexport function compare(\n    prevArr: any,\n    nextArr: any,\n    callback: any,\n    syncCallback: any,\n) {\n    const prevKeys: Array<number | string> = prevArr.map(callback);\n    const nextKeys: Array<number | string> = nextArr.map(callback);\n    const prevKeysObject: IObject<number> = {};\n    const nextKeysObject = {};\n    const added = [];\n    const removed = [];\n\n    prevKeys.forEach((key, i) => {\n        prevKeysObject[key] = i;\n    });\n    nextKeys.forEach((key, i) => {\n        if (!(key in prevKeysObject)) {\n            added.push(i);\n        } else {\n            syncCallback(prevArr[prevKeysObject[key]], nextArr[i]);\n        }\n        nextKeysObject[key] = i;\n    });\n    prevKeys.forEach((key, i) => {\n        if (!(key in nextKeysObject)) {\n            removed.push(i);\n        }\n    });\n\n    return {added, removed};\n}\nexport function makeCompareStructure(\n    prevStructures: any,\n    nextStructures: any,\n    parentStructure: any,\n    callback: any,\n    syncCallback?: any,\n) {\n    const parentElement = parentStructure.element;\n\n    const {added, removed} = compare(\n        prevStructures,\n        nextStructures,\n        callback,\n        (prev, next) => {\n            next.element = prev.element;\n            syncCallback && syncCallback(prev, next);\n        },\n    );\n    removed.reverse().forEach(index => {\n        parentElement.removeChild(prevStructures[index].element);\n    });\n    added.forEach(index => {\n        const {element} = makeStructure(\n            nextStructures[index],\n        );\n        parentElement.insertBefore(\n            element,\n            nextStructures[index + 1] && nextStructures[index + 1].element,\n        );\n    });\n\n    parentStructure.children = nextStructures;\n}\nexport function isScene(value: any): value is Scene {\n    return value.constructor.name === \"Scene\";\n}\nexport function isSceneItem(value: any): value is SceneItem {\n    return value.constructor.name === \"SceneItem\";\n}\nexport function isFrame(value: any): value is Frame {\n    return value.constructor.name === \"Frame\";\n}\nexport function splitProperty(scene: Scene, property: string) {\n    const names = property.split(\"///\");\n    const length = names.length;\n    let item: Scene | SceneItem = scene;\n    let i;\n\n    for (i = 0; i < length; ++i) {\n        if (isSceneItem(item)) {\n            break;\n        }\n        item = scene.getItem(names[i]);\n    }\n    return {\n        item: item as SceneItem,\n        names: names.slice(0, i),\n        properties: names.slice(i),\n    };\n}\nexport function getSceneItem(scene: Scene, names: string[]): SceneItem {\n    return names.reduce<any>(\n        (nextScene, name) => nextScene.getItem(name),\n        scene,\n    );\n}\n\nexport function findElementIndexByPosition(elements: HTMLElement[], pos: number): number {\n    const length = elements.length;\n\n    for (let index = 0; index < length; ++index) {\n        const el = elements[index];\n        const box = el.getBoundingClientRect();\n        const top = box.top;\n        const bottom = top + box.height;\n\n        if (top <= pos && pos < bottom) {\n            return index;\n        }\n    }\n    return -1;\n}\n","import { toValue } from \"./utils\";\nimport { ElementStructure } from \"./types\";\n\nexport function updateKeyframesStructure(keyframes: ElementStructure[], maxTime) {\n    keyframes.forEach(keyframe => {\n        const {selector, dataset, style} = keyframe;\n        if (selector === \".keyframe\") {\n            style.left = `${dataset.time / maxTime * 100}%`;\n        } else {\n            style.left = `${dataset.from / maxTime * 100}%`,\n            style.width = `${(dataset.to - dataset.from) / maxTime * 100}%`;\n        }\n    });\n}\nexport function getKeyframesStructure(times, maxTime) {\n    const keyframeLines = [];\n\n    const keyframes = times.map(([time, value], i) => {\n        const valueText = toValue(value);\n\n        if (times[i + 1]) {\n            const [nextTime, nextValue] = times[i + 1];\n            const nextValueText = toValue(nextValue);\n\n            if (valueText === nextValueText) {\n                keyframeLines.push({\n                    selector: \".keyframe_line\",\n                    dataset: {\n                        time: `${time},${nextTime}`,\n                        from: time,\n                        to: nextTime,\n                    },\n                    style: {\n                        left: `${time / maxTime * 100}%`,\n                        width: `${(nextTime - time) / maxTime * 100}%`,\n                    },\n                });\n            }\n        }\n\n        return {\n            memberof: \"keyframesInfoList\",\n            selector: \".keyframe\",\n            dataset: {\n                time,\n                value: valueText,\n            },\n            style: {\n                left: `${time / maxTime * 100}%`,\n            },\n            html: `${time} ${valueText}`,\n        };\n    });\n\n    return [...keyframes, ...keyframeLines];\n}\n","import { now } from \"@daybrush/utils\";\n\nlet prevTime = 0;\nlet prevX = -1;\nlet prevY = -1;\n\nexport function dblCheck(isDrag, e, clientX, clientY, callback) {\n    const currentTime = now();\n\n    if (!isDrag) {\n        if (\n            prevX === clientX &&\n            prevY === clientY &&\n            currentTime - prevTime <= 500\n        ) {\n            callback(e, clientX, clientY);\n        }\n        prevX = clientX;\n        prevY = clientY;\n        prevTime = currentTime;\n    }\n}\n","export function getKeytimesStructure(maxTime) {\n    const keytimes = [];\n\n    for (let time = 0; time <= maxTime; ++time) {\n        keytimes.push({\n            dataset: {\n                time,\n            },\n            selector: \".keytime\",\n            style: {\n                width: `${100 / maxTime}%`,\n            },\n            children: [\n                {\n                    selector: \"span\",\n                    html: `${time}`,\n                },\n                {selector: \".graduation.start\"},\n                {selector: \".graduation.quarter\"},\n                {selector: \".graduation.half\"},\n                {selector: \".graduation.quarter3\"},\n            ],\n        });\n    }\n    return keytimes;\n}\nexport function getLinesStructure(maxTime: number) {\n    const lines = [];\n\n    for (let time = 0; time <= maxTime; ++time) {\n        lines.push({\n            selector: \".division_line\",\n            style: {\n                left: `${100 / maxTime * time}%`,\n            },\n        });\n    }\n    return lines;\n}\n","import Scene, { SceneItem } from \"scenejs\";\nimport {\n    getTimelineInfo, toValue, getTarget,\n    hasClass, removeClass, addClass, makeStructure, flatObject,\n    makeCompareStructure, splitProperty, getSceneItem, findElementIndexByPosition, applyStyle\n} from \"./utils\";\nimport { drag } from \"@daybrush/drag\";\nimport { CSS } from \"./consts\";\nimport { isObject, IObject, now } from \"@daybrush/utils\";\nimport Axes, { PinchInput } from \"@egjs/axes\";\nimport { ElementStructure, Ids } from \"./types\";\nimport { getKeyframesStructure, updateKeyframesStructure } from \"./KeyframesStructure\";\nimport { dblCheck } from \"./dblcheck\";\nimport { getKeytimesStructure, getLinesStructure } from \"./KeytimesStructure\";\n\nlet isExportCSS = false;\n\nexport default class Timeline {\n    private scene: Scene;\n    private structures: Ids<ElementStructure>;\n    private elements: Ids<HTMLElement>;\n    private propertiesNames: string[] = [];\n    private maxTime: number = 0;\n    private axes: Axes;\n    private selectedIndex: number = -1;\n    constructor(scene: Scene, parentEl: HTMLElement) {\n        scene.finish();\n\n        this.scene = scene;\n        this.initElement(scene, parentEl);\n        this.editor();\n    }\n    public getElement() {\n        return this.elements.timeline;\n    }\n    private initElement(scene: Scene, parentEl: HTMLElement) {\n        const duration = scene.getDuration();\n        const timelineInfo = getTimelineInfo(scene);\n        const maxDuration = Math.ceil(duration);\n        const maxTime = maxDuration + 5;\n        const propertiesNames = this.propertiesNames;\n        const properties: ElementStructure[] = [];\n        const values: ElementStructure[] = [];\n        const keyframesList: ElementStructure[] = [];\n        let timelineCSS: ElementStructure;\n\n        this.maxTime = maxTime;\n        if (!isExportCSS) {\n            timelineCSS = {\n                selector: \"style.style\",\n                html: CSS,\n            };\n            isExportCSS = true;\n        }\n\n        for (const property in timelineInfo) {\n            const propertyNames = property.split(\"///\");\n            const length = propertyNames.length;\n            const times = timelineInfo[property];\n            const id = propertyNames[length - 1];\n\n            propertiesNames.push(property);\n            properties.push({\n                id: \"properties[]\",\n                selector: \".property\",\n                dataset: {\n                    id,\n                    property,\n                    parent: propertyNames[length - 2] || \"\",\n                    object: \"0\",\n                    item: propertyNames[0],\n                },\n                style: {\n                    paddingLeft: `${10 + (length - 1) * 20}px`,\n                },\n                children: [\n                    { selector: \".arrow\"},\n                    {\n                        selector: \"span\",\n                        html: id,\n                    },\n                ],\n            });\n            const isHasObject = times[0] && isObject(times[0][1]);\n            values.push({\n                id: \"values[]\",\n                selector: \".value\",\n                dataset: {\n                    property,\n                    object: isHasObject ? \"1\" : \"0\",\n                },\n                children: {\n                    id: \"inputs[]\",\n                    selector: \"input\",\n                    attr: {\n                        value: times[0] ? times[0][1] : \"\",\n                    },\n                },\n            });\n            const parentProperty = propertyNames.slice(0, -1).join(\"///\");\n            properties.forEach(({dataset}) => {\n                if (dataset.property === parentProperty) {\n                    dataset.object = \"1\";\n                }\n            });\n            const keyframes = getKeyframesStructure(times, maxTime);\n            keyframesList.push({\n                id: [\n                    \"keyframesList[]\",\n                    \"keyframesInfoList[][]\",\n                ],\n                selector: \".keyframes\",\n                dataset: {\n                    property,\n                },\n                children: {\n                    id: \"keyframesContainers[]\",\n                    selector: \".keyframes_container\",\n                    children: keyframes,\n                },\n            });\n        }\n        const structure: ElementStructure = {\n            selector: \".timeline\",\n            id: \"timeline\",\n            children: [\n                timelineCSS,\n                {\n                    selector: \".header_area.control_area\",\n                    children: [\n                        {\n                            selector: \".properties_area\",\n                            children: {\n                                selector: \".property\",\n                            },\n                        },\n                        {\n                            selector: \".values_area\",\n                            children: {\n                                selector: \".value\",\n                            },\n                        },\n                        {\n                            selector: \".keyframes_area\",\n                            children: {\n                                selector: \".keyframes\",\n                                children: [\n                                    {\n                                        selector: \".time_area\",\n                                        id: \"timeArea\",\n                                        html: \"0\",\n                                    },\n                                    {\n                                        selector: \".play_control_area\",\n                                        id: \"playControlArea\",\n                                        children: [\n                                            {\n                                                selector: \".control.prev\",\n                                                html: \"prev\",\n                                            },\n                                            {\n                                                selector: \".control.play\",\n                                                html: \"play\",\n                                            },\n                                            {\n                                                selector: \".control.next\",\n                                                html: \"next\",\n                                            },\n                                        ],\n                                    },\n                                ],\n                            },\n                        },\n                    ],\n                },\n                {\n                    selector: \".header_area\",\n                    children: [\n                        {\n                            id: [\n                                \"propertiesAreas[]\",\n                            ],\n                            selector: \".properties_area\",\n                            children: [\n                                {\n                                    selector: \".property\",\n                                    html: \"Name\",\n                                },\n                            ],\n                        },\n                        {\n                            selector: \".values_area\",\n                            children: {\n                                selector: \".value\",\n                                html: \"+\",\n                            },\n                        },\n                        {\n                            id: \"keyframesAreas[]\",\n                            selector: \".keyframes_area\",\n                            children: {\n                                style: {\n                                    minWidth: `${50 * maxTime}px`,\n                                    width: `${(maxDuration ? maxTime / maxDuration : 1) * 100}%`,\n                                },\n                                id: \"keyframesScrollAreas[]\",\n                                selector: \".keyframes_scroll_area\",\n                                children: {\n                                    selector: \".keyframes\",\n                                    children: [\n                                        {\n                                            id: \"keytimesContainer\",\n                                            selector: \".keyframes_container\",\n                                            children: getKeytimesStructure(maxTime),\n                                        },\n                                        {\n                                            selector: \".keyframe_cursor\",\n                                            id: \"cursors[]\",\n                                        },\n                                    ],\n                                },\n                            },\n                        },\n                    ],\n                },\n                {\n                    id: \"scrollArea\",\n                    selector: \".scroll_area\",\n                    children: [\n                        {\n                            id: \"propertiesAreas[]\",\n                            selector: \".properties_area\",\n                            children: [\n                                {\n                                    selector: \".properties_scroll_area\",\n                                    children: properties,\n                                },\n                            ],\n                        },\n                        {\n                            id: \"valuesArea\",\n                            selector: \".values_area\",\n                            children: values,\n                        },\n                        {\n                            id: \"keyframesAreas[]\",\n                            selector: \".keyframes_area\",\n                            children: {\n                                style: {\n                                    minWidth: `${50 * maxTime}px`,\n                                    width: `${(maxDuration ? maxTime / maxDuration : 1) * 100}%`,\n                                },\n                                id: \"keyframesScrollAreas[]\",\n                                selector: \".keyframes_scroll_area\",\n                                children: [\n                                    ...keyframesList,\n                                    {\n                                        selector: \".keyframe_cursor\",\n                                        id: \"cursors[]\",\n                                    },\n                                    {\n                                        id: \"lineArea\",\n                                        selector: \".line_area\",\n                                        children: getLinesStructure(maxTime),\n                                    },\n                                ],\n                            },\n                        },\n                    ],\n                },\n            ],\n        };\n\n        const {structures, elements} = makeStructure(structure, parentEl);\n\n        this.structures = structures;\n        this.elements = elements;\n        this.syncScroll();\n        this.wheelZoom();\n        this.dragKeyframes();\n        this.clickProperty();\n    }\n    private syncScroll() {\n        const {\n            keyframesAreas,\n        } = this.elements;\n        let isScrollKeyframe = false;\n\n        keyframesAreas[0].addEventListener(\"scroll\", () => {\n            if (isScrollKeyframe) {\n                isScrollKeyframe = false;\n            } else {\n                isScrollKeyframe = true;\n                keyframesAreas[1].scrollLeft = keyframesAreas[0].scrollLeft;\n            }\n        });\n        keyframesAreas[1].addEventListener(\"scroll\", () => {\n            if (isScrollKeyframe) {\n                isScrollKeyframe = false;\n            } else {\n                isScrollKeyframe = true;\n                keyframesAreas[0].scrollLeft = keyframesAreas[1].scrollLeft;\n            }\n        });\n    }\n    private wheelZoom() {\n        const { keyframesScrollAreas } = this.elements;\n        const originalWidth = parseFloat(keyframesScrollAreas[0].style.width);\n\n        const axes = new Axes({\n            zoom: {\n                range: [100, Infinity],\n            },\n        }, {}, {\n                zoom: originalWidth,\n            });\n        axes.connect(\"zoom\", new PinchInput(keyframesScrollAreas[1], {\n            scale: 0.7,\n            hammerManagerOptions: {\n                touchAction: \"auto\",\n            },\n        }));\n        axes.on(\"hold\", e => {\n            console.log(\"hold\");\n            if (e.inputEvent) {\n                e.inputEvent.preventDefault();\n            }\n        });\n        axes.on(\"change\", e => {\n            const width = e.pos.zoom;\n\n            keyframesScrollAreas.forEach(el => {\n                el.style.width = `${width}%`;\n            });\n\n            if (e.inputEvent) {\n                e.inputEvent.preventDefault();\n            }\n        });\n\n        this.axes = axes;\n        keyframesScrollAreas[0].addEventListener(\"wheel\", e => {\n            const delta = e.deltaY;\n\n            axes.setBy({ zoom: delta / originalWidth * 5 });\n            !e.deltaX && e.preventDefault();\n        });\n    }\n    private select(index: number) {\n        const prevSelectedIndex = this.selectedIndex;\n        const values = this.structures.values;\n        const properties = this.structures.properties;\n        const keyframesList = this.structures.keyframesList;\n\n        this.selectedIndex = index;\n\n        if (prevSelectedIndex > -1) {\n            removeClass(properties[prevSelectedIndex].element, \"select\");\n            removeClass(values[prevSelectedIndex].element, \"select\");\n            removeClass(keyframesList[prevSelectedIndex].element, \"select\");\n        }\n\n        if (index > -1) {\n            addClass(properties[index].element, \"select\");\n            addClass(values[index].element, \"select\");\n            addClass(keyframesList[index].element, \"select\");\n        }\n    }\n    private clickProperty() {\n        const {\n            keyframesList,\n            values,\n            propertiesAreas,\n        } = this.elements;\n\n        propertiesAreas[1].addEventListener(\"click\", e => {\n            const properties = this.elements.properties;\n            const length = properties.length;\n            const arrow = getTarget(e.target as HTMLElement, el => hasClass(el, \"arrow\"));\n            const target = getTarget(e.target as HTMLElement, el => hasClass(el, \"property\"));\n\n            if (!target) {\n                return;\n            }\n            let index = properties.indexOf(target);\n\n            if (index === -1) {\n                return;\n            }\n            // select\n            if (!arrow) {\n                this.select(index);\n                return;\n            }\n\n            // fold\n            if (target.getAttribute(\"data-object\") === \"0\") {\n                return;\n            }\n            const isFold = target.getAttribute(\"data-fold\") === \"1\";\n\n            function fold(isPrevFold) {\n                const nextTarget = properties[index];\n                const nextProperty = nextTarget.getAttribute(\"data-property\");\n                const isNextFold = nextTarget.getAttribute(\"data-fold\") === \"1\";\n                const isNextObject = nextTarget.getAttribute(\"data-object\") === \"1\";\n\n                if (target !== nextTarget) {\n                    if (isFold) {\n                        if (!isPrevFold)  {\n                            removeClass(keyframesList[index], \"fold\");\n                            removeClass(values[index], \"fold\");\n                            removeClass(nextTarget, \"fold\");\n                        }\n                    } else {\n                        addClass(keyframesList[index], \"fold\");\n                        addClass(values[index], \"fold\");\n                        addClass(nextTarget, \"fold\");\n                    }\n                }\n                if (!isNextObject) {\n                    return;\n                }\n\n                for (++index; index < length; ++index) {\n                    const el = properties[index];\n\n                    if (\n                        // itemProperties\n                        el.getAttribute(\"data-property\").indexOf(nextProperty) > -1\n                    ) {\n                        // isChild\n                        fold(!isPrevFold && isNextFold);\n                    } else {\n                        --index;\n                        // not child\n                        break;\n                    }\n                }\n            }\n\n            fold(isFold);\n            target.setAttribute(\"data-fold\", isFold ? \"0\" : \"1\");\n        });\n    }\n    private setInputs(obj: IObject<any>) {\n        const valuesArea = this.elements.valuesArea;\n        for (const name in obj) {\n            valuesArea.querySelector<HTMLInputElement>(`[data-property=\"${name}\"] input`).value = obj[name];\n        }\n    }\n    private moveCursor(time: number) {\n        const {cursors} = this.elements;\n        const maxTime = this.maxTime;\n        const px = 15 - 30 * time / maxTime;\n        const percent = 100 * time / maxTime;\n        const left = `calc(${percent}% + ${px}px)`;\n\n        cursors.forEach(cursor => {\n            cursor.style.left = left;\n        });\n    }\n    private dragKeyframes() {\n        const structures = this.structures;\n        const {\n            scrollArea,\n            timeArea,\n            cursors,\n            keyframesAreas,\n            keyframesScrollAreas,\n        } = this.elements;\n        const scene = this.scene;\n\n        scene.on(\"animate\", e => {\n            const time = e.time;\n            this.moveCursor(time);\n\n            this.setInputs(flatObject(e.frames));\n            timeArea.innerHTML = `${time}`;\n        });\n        const getTime = (clientX: number) => {\n            const rect = keyframesScrollAreas[1].getBoundingClientRect();\n            const scrollAreaWidth = rect.width - 30;\n            const scrollAreaX = rect.left + 15;\n            const x = Math.min(scrollAreaWidth, Math.max(clientX - scrollAreaX, 0));\n            const percentage = x / scrollAreaWidth;\n            let time = this.maxTime * percentage;\n\n            time = Math.round(time * 20) / 20;\n\n            return time;\n        };\n        const move = (clientX: number) => {\n            scene.setTime(getTime(clientX));\n        };\n        const click = (e, clientX, clientY) => {\n            const target = getTarget(e.target as HTMLElement, el => hasClass(el, \"keyframe\"));\n\n            if (target) {\n                scene.setTime(target.getAttribute(\"data-time\"));\n            } else if (!hasClass(e.target as Element, \"keyframe_cursor\")) {\n                move(clientX);\n            }\n            const list = structures.keyframesList;\n            const index = findElementIndexByPosition(\n                list.map(({element}) => element),\n                clientY,\n            );\n\n            this.select(index);\n            e.preventDefault();\n        };\n        const dblclick = (e, clientX, clientY) => {\n            const list = this.structures.keyframesList;\n            const index = findElementIndexByPosition(\n                list.map(({element}) => element),\n                clientY,\n            );\n\n            if (index === -1) {\n                return;\n            }\n            const time = getTime(clientX);\n            const {item, properties} = splitProperty(scene, list[index].dataset.property);\n\n            this.editKeyframe(time, item.getNowValue(time, properties), index, true);\n            this.updateKeytimes();\n        };\n        drag(cursors[0], {\n            dragstart: ({inputEvent}) => {\n                inputEvent.stopPropagation();\n            },\n            drag: ({ clientX }) => {\n                move(clientX);\n            },\n            container: window,\n        });\n        keyframesScrollAreas.forEach(el => {\n            drag(el, {\n                container: window,\n                drag: ({ deltaX, deltaY, inputEvent }) => {\n                    keyframesAreas[1].scrollLeft -= deltaX;\n                    scrollArea.scrollTop -= deltaY;\n                    inputEvent.preventDefault();\n                },\n                dragend: ({ isDrag, clientX, clientY, inputEvent }) => {\n                    !isDrag && click(inputEvent, clientX, clientY);\n                    dblCheck(isDrag, inputEvent, clientX, clientY, dblclick);\n                },\n            });\n        });\n    }\n    private updateKeytimes() {\n        const maxTime = this.scene.getDuration() + 5;\n        const currentMaxTime = this.maxTime;\n\n        if (maxTime === currentMaxTime) {\n            return;\n        }\n\n        this.maxTime = maxTime;\n        const keytimesContainer = this.structures.keytimesContainer;\n        const lineArea = this.structures.lineArea;\n        const keytimes = keytimesContainer.children as ElementStructure[];\n        const lines = lineArea.children as ElementStructure[];\n        const nextKeytimes = getKeytimesStructure(maxTime);\n        const nextLines = getLinesStructure(maxTime);\n\n        makeCompareStructure(\n            keytimes,\n            nextKeytimes,\n            keytimesContainer,\n            ({dataset}) => (dataset.time),\n            (prev, cur) => {\n                applyStyle(cur.element, cur.style);\n            },\n        );\n        makeCompareStructure(\n            lines,\n            nextLines,\n            lineArea,\n            (_, i) => i,\n            (prev, cur) => {\n                applyStyle(cur.element, cur.style);\n            },\n        );\n        const keyframesContainers = this.structures.keyframesContainers;\n\n        keyframesContainers.forEach(keyframesContainer => {\n            const children = keyframesContainer.children as ElementStructure[];\n            updateKeyframesStructure(children, maxTime);\n\n            children.forEach(structure => {\n                applyStyle(structure.element, structure.style);\n            });\n        });\n\n        this.moveCursor(this.scene.getTime());\n\n        if (currentMaxTime && currentMaxTime < maxTime) {\n            this.axes.setTo({\n                zoom: this.axes.get([\"zoom\"]).zoom * maxTime / currentMaxTime,\n            });\n        }\n    }\n    private updateKeyframes(names: string[], properties: string[], index: number) {\n        const keyframesContainer = this.structures.keyframesContainers[index];\n        const keyframes = keyframesContainer.children as ElementStructure[];\n        const length = properties.length;\n        const scene = this.scene;\n        const item: SceneItem = getSceneItem(scene, names);\n        const times = item.times.filter(time =>\n            length ?\n            item.getFrame(time).has(...properties) :\n            true,\n        );\n        const delay = item.getDelay();\n        const nextKeyframes = getKeyframesStructure(\n            times.map(time => [delay + time, item.getFrame(time).get(...properties)]),\n            this.maxTime,\n        );\n\n        makeCompareStructure(\n            keyframes,\n            nextKeyframes,\n            keyframesContainer,\n            ({dataset}) => (dataset.time),\n        );\n\n        if (length) {\n            const nextProperties = properties.slice(0, -1);\n            const nextProperty = [...names, ...nextProperties].join(\"///\");\n            const nextIndex = this.propertiesNames.indexOf(nextProperty);\n\n            if (nextIndex !== -1) {\n                this.updateKeyframes(names, nextProperties, nextIndex);\n                return;\n            }\n        }\n        scene.setTime(scene.getTime());\n    }\n    private editKeyframe(time: number, value: any, index: number, isForce?: boolean) {\n        const valuesStructure = this.structures.values;\n        const isObjectData = this.structures.properties[index].dataset.object === \"1\";\n\n        if (isObjectData) {\n            return;\n        }\n        const property = valuesStructure[index].dataset.property as string;\n        const scene = this.scene;\n        const {\n            names,\n            properties,\n            item,\n        } = splitProperty(scene, property);\n\n        if (!isForce) {\n            const prevValue = (item as SceneItem).getNowValue(time, properties);\n\n            if (`${prevValue}` === value) {\n                return;\n            }\n        }\n        item.set(time, ...properties, value);\n\n        scene.setTime(time);\n        this.updateKeyframes(names, properties, index);\n    }\n    private edit(target: HTMLInputElement, value: any, isForce?: boolean) {\n        const parentEl = getTarget(target, el => hasClass(el, \"value\"));\n\n        if (!parentEl) {\n            return;\n        }\n        const values = this.elements.values;\n        const index = values.indexOf(parentEl);\n\n        if (index === -1) {\n            return;\n        }\n        this.editKeyframe(this.scene.getTime(), value, index, isForce);\n    }\n    private editor() {\n        const valuesArea = this.elements.valuesArea;\n\n        valuesArea.addEventListener(\"keyup\", e => {\n            if (e.keyCode !== 13) {\n                return;\n            }\n            const target = e.target as HTMLInputElement;\n\n            this.edit(target, target.value, true);\n        });\n        valuesArea.addEventListener(\"focusout\", e => {\n            const target = e.target as HTMLInputElement;\n\n            this.edit(target, target.value);\n        });\n    }\n}\n"],"names":["PREFIX","CSS","replace","applyStyle","el","style","name","toValue","value","Array","isArray","join","arr","push","keys","map","k","getTarget","target","conditionCallback","parentTarget","document","body","parentNode","hasClass","className","hasClass2","addClass","addClass2","removeClass","removeClass2","makeStructure","structure","parentEl","obj","structures","elements","element","id","memberof","children","selector","dataset","attr","html","classNames","match","tag","createElement","setAttribute","innerHTML","appendChild","concat","forEach","nextId","isArrayId","indexOf","isDoubleArrayId","objId","length","filter","child","isString","makeCompareStructure","prevStructures","nextStructures","parentStructure","callback","syncCallback","parentElement","_a","prevArr","nextArr","prevKeys","nextKeys","prevKeysObject","nextKeysObject","added","removed","key","i","reverse","index","removeChild","insertBefore","splitProperty","scene","property","names","split","item","constructor","getItem","slice","properties","findElementIndexByPosition","pos","box","getBoundingClientRect","top","bottom","height","getKeyframesStructure","times","maxTime","keyframeLines","time","valueText","_b","nextTime","from","to","left","width","prevTime","prevX","prevY","getKeytimesStructure","keytimes","getLinesStructure","lines","isExportCSS","finish","initElement","editor","this","timeline","timelineCSS","duration","getDuration","timelineInfo","delay","getDelay","frame","getFrame","_i","objs","lastObj","Object","name2","getId","get","getTimelineInfo","maxDuration","Math","ceil","propertiesNames","values","keyframesList","propertyNames","parent","object","paddingLeft","isHasObject","isObject","parentProperty","keyframes","minWidth","syncScroll","wheelZoom","dragKeyframes","clickProperty","keyframesAreas","isScrollKeyframe","addEventListener","scrollLeft","keyframesScrollAreas","originalWidth","parseFloat","axes","Axes","zoom","range","Infinity","connect","PinchInput","scale","hammerManagerOptions","touchAction","on","e","console","log","inputEvent","preventDefault","delta","deltaY","setBy","deltaX","prevSelectedIndex","selectedIndex","_this","arrow","getAttribute","isFold","fold","isPrevFold","nextTarget","nextProperty","isNextFold","isNextObject","select","valuesArea","querySelector","cursors","cursor","scrollArea","timeArea","moveCursor","setInputs","flatObject","newObj","nextObj","nextName","frames","getTime","clientX","rect","scrollAreaWidth","scrollAreaX","percentage","min","max","round","move","setTime","dblclick","clientY","list","editKeyframe","getNowValue","updateKeytimes","drag","dragstart","stopPropagation","container","window","scrollTop","dragend","isDrag","click","currentTime","now","dblCheck","currentMaxTime","keytimesContainer","lineArea","nextKeytimes","nextLines","prev","cur","_","keyframesContainers","keyframesContainer","keyframe","updateKeyframesStructure","setTo","reduce","nextScene","getSceneItem","has","nextProperties","nextIndex","updateKeyframes","isForce","valuesStructure","set","keyCode","edit"],"mappings":"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"}