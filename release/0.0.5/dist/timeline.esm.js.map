{"version":3,"file":"timeline.esm.js","sources":["../src/consts.ts","../src/utils.ts","../src/KeyframesStructure.ts","../src/dblcheck.ts","../src/KeytimesStructure.ts","../src/Timeline.ts"],"sourcesContent":["export const PREFIX = `scenejs_timeline_`;\n\nexport const CSS = `\n.timeline {\n  position: relative;\n  font-size: 0;\n  background: #000;\n  display: flex;\n  flex-direction: column;\n}\n.header_area, .scroll_area {\n   width: 100%;\n   position: relative;\n  display: flex;\n  -webkit-align-items: flex-start;\n  align-items: flex-start;\n}\n.header_area {\n  position: relative;\n  z-index: 10;\n  top: 0;\n  height: 30px;\n  min-height: 30px;\n}\n.header_area .keyframes {\n  padding: 0px;\n}\n.header_area .properties_area,\n.header_area .keyframes_area,\n.header_area .values_area,\n.header_area .keyframes_scroll_area {\n    height: 100%;\n}\n.header_area .property, .header_area .value, .header_area .keyframes {\n  height: 100%;\n}\n.header_area .property {\n    line-height: 30px;\n}\n.header_area .value {\n    text-align: center;\n    color: #fff;\n    line-height: 30px;\n    font-weight: bold;\n    font-size: 20px;\n}\n.header_area .keyframes_area::-webkit-scrollbar {\n    display: none; // Safari and Chrome\n}\n.header_area .keyframe_cursor {\n    position: absolute;\n    border-top: 10px solid #f55;\n    border-left: 5px solid transparent;\n    border-right: 5px solid transparent;\n    width: 0;\n    height: 0;\n    bottom: 0;\n    top: auto;\n    background: none;\n    cursor: pointer;\n}\n.control_area .keyframes {\n    padding-left: 10px;\n}\n.play_control_area {\n    position: absolute;\n    top: 0;\n    left: 50%;\n    transform: translate(-50%);\n}\n.play_control_area .control {\n    display: inline-block;\n    color: white;\n    margin: 0px 10px;\n}\n.keytime {\n  position: relative;\n  display: inline-block;\n  height: 100%;\n  font-size: 13px;\n  font-weight: bold;\n  color: #777;\n}\n.keytime:last-child {\n  max-width: 0px;\n}\n.keytime span {\n  position: absolute;\n  top: 2px;\n  left: 0;\n  display: inline-block;\n  transform: translate(-50%);\n  color: #eee;\n}\n.keytime .graduation {\n  position: absolute;\n  bottom: 0;\n  width: 1px;\n  height: 10px;\n  background: #777;\n  transform: translate(-50%);\n}\n.keytime .graduation.half {\n  left: 50%;\n  height: 7px;\n}\n.keytime .graduation.quarter {\n  left: 25%;\n  height: 5px;\n}\n.keytime .graduation.quarter3 {\n  left: 75%;\n  height: 5px;\n}\n.scroll_area {\n  position: relative;\n  width: 100%;\n  height: calc(100% - 60px);\n  overflow: auto;\n}\n.properties_area, .keyframes_area, .values_area {\n  display: inline-block;\n  position: relative;\n  font-size: 16px;\n  overflow: auto;\n}\n\n.properties_area::-webkit-scrollbar, .keyframes_area::-webkit-scrollbar {\n    display: none; // Safari and Chrome\n}\n.properties_area {\n  width: 30%;\n  max-width: 200px;\n  box-sizing: border-box;\n}\n.values_area {\n    width: 50px;\n    min-width: 50px;\n    display: inline-block;\n    border-right: 1px solid #999;\n    box-sizing: border-box;\n}\n.value input {\n    appearance: none;\n    -webkit-appearance: none;\n    outline: none;\n    position: relative;\n    display: block;\n    width: 100%;\n    height: 100%;\n    background: transparent;\n    color: #fe5;\n    font-weight: bold;\n    background: none;\n    border: 0;\n    box-sizing: border-box;\n    text-align: center;\n}\n.value[data-object=\"1\"] input {\n    display: none;\n}\n.properties_scroll_area {\n  display: inline-block;\n  min-width: 100%;\n}\n.keyframes_area {\n  flex: 1;\n}\n.keyframes_scroll_area {\n  position: relative;\n  min-width: 300px;\n}\n.keyframes, .property, .value {\n  position: relative;\n  height: 25px;\n  border-bottom: 1px solid #777;\n  box-sizing: border-box;\n  white-space: nowrap;\n  background: rgba(90, 90, 90, 0.7);\n  z-index: 1;\n}\n\n.property {\n  line-height: 25px;\n  padding-left: 10px;\n  box-sizing: border-box;\n  font-size: 13px;\n  font-weight: bold;\n  color: #eee;\n}\n.time_area {\n    font-size: 13px;\n    color: #fe5;\n    line-height: 30px;\n    font-weight: bold;\n}\n.time_area:after {\n    content: \"s\";\n}\n.property .arrow {\n    position: relative;\n    display: inline-block;\n    margin-right: 5px;\n    width: 0;\n    vertical-align: middle;\n    cursor: pointer;\n    border-top: 6px solid #eee;\n    border-left: 4px solid transparent;\n    border-right: 4px solid transparent;\n}\n.property[data-fold=\"1\"] .arrow {\n    border-top: 4px solid transparent;\n    border-bottom: 4px solid transparent;\n    border-right: 0;\n    border-left: 6px solid #eee;\n    margin-left: 2px;\n}\n.property[data-object=\"0\"] .arrow {\n    display: none;\n}\n.property.fold, .keyframes.fold, .value.fold {\n    display: none;\n}\n.property.select, .value.select, .keyframes.select {\n    background: rgba(120, 120, 120, 0.7);\n}\n.keyframes {\n\n}\n.keyframe_line {\n  position: absolute;\n  height: 8px;\n  top: 0;\n  bottom: 0;\n  margin: auto;\n  background: #aaa;\n  z-index: 0;\n}\n.keyframe {\n  position: absolute;\n  font-size: 0px;\n  width: 12px;\n  height: 12px;\n  top: 0px;\n  bottom: 0px;\n  margin: auto;\n  background: #fff;\n  border: 2px solid #383838;\n  border-radius: 2px;\n  box-sizing: border-box;\n  transform: translate(-50%) rotate(45deg);\n  z-index: 1;\n  cursor: pointer;\n}\n.select .keyframe {\n    border-color: #4d4d4d;\n}\n.keyframes_container, .line_area {\n  position: relative;\n  width: calc(100% - 30px);\n  left: 15px;\n  height: 100%;\n}\n.line_area {\n  position: absolute;\n  top: 0;\n  z-index: 0;\n}\n.keyframe_cursor {\n  position: absolute;\n  top: 0;\n  z-index: 1;\n  background: #f55;\n  width: 1px;\n  height: 100%;\n  left: 15px;\n  transform: translate(-50%);\n}\n.division_line {\n  position: absolute;\n  background: #333;\n  width: 1px;\n  height: 100%;\n  transform: translate(-50%);\n}\n`.replace(/\\.([^{,\\s\\d.]+)/g, `.${PREFIX}$1`);\n","import { PREFIX } from \"./consts\";\nimport Scene, { SceneItem, Frame } from \"scenejs\";\nimport {\n    hasClass as hasClass2,\n    addClass as addClass2,\n    removeClass as removeClass2,\n    isString,\n    IObject,\n    isObject,\n    isArray,\n} from \"@daybrush/utils\";\nimport { ElementStructure } from \"./types\";\nimport { sync } from \"resolve\";\n\nexport function applyStyle(el: HTMLElement, style: IObject<any>) {\n    for (const name in style) {\n        el.style[name] = style[name];\n    }\n}\nexport function createElement(structure: ElementStructure, parentEl?: Element) {\n    const {selector, dataset, attr, style, html} = structure;\n\n    const classNames = selector.match(/\\.([^.#\\s])+/g) || [];\n    const tag = (selector.match(/^[^.#\\s]+/g) || [])[0] || \"div\";\n    const id = (selector.match(/#[^.#\\s]+/g) || [])[0] || \"\";\n    const el = document.createElement(tag);\n\n    id && (el.id = id.replace(/^#/g, \"\"));\n    el.className = classNames.map(name => `${PREFIX}${name.replace(/^\\./g, \"\")}`).join(\" \");\n\n    if (dataset) {\n        for (const name in dataset) {\n            el.setAttribute(`data-${name}`, dataset[name]);\n        }\n    }\n    if (attr) {\n        for (const name in attr) {\n            el.setAttribute(name, attr[name]);\n        }\n    }\n    if (style) {\n        applyStyle(el, style);\n    }\n    if (html) {\n        el.innerHTML = html;\n    }\n    parentEl && parentEl.appendChild(el);\n    return el;\n}\nexport function keys(value: object) {\n    const arr = [];\n    for (const name in value) {\n        arr.push(name);\n    }\n    return arr;\n}\nexport function toValue(value: any) {\n    const type = typeof value;\n    if (type === \"object\") {\n        if (Array.isArray(value)) {\n            return `[${value.join(\", \")}]`;\n        }\n        return `{${keys(value).map(k => `${k}: ${toValue(value[k])}`).join(\", \")}}`;\n    }\n    return value;\n}\nexport function flatObject(obj: IObject<any>, newObj: IObject<any> = {}) {\n\n    for (const name in obj) {\n        const value = obj[name];\n\n        if (isObject(value)) {\n            const nextObj = flatObject(isFrame(value) ? value.get() : value);\n\n            for (const nextName in nextObj) {\n                newObj[`${name}///${nextName}`] = nextObj[nextName];\n            }\n        } else {\n            newObj[name] = value;\n        }\n    }\n    return newObj;\n}\nexport function getTimelineInfo(scene: Scene) {\n  const timelineInfo = {};\n  scene.forEach((item: SceneItem) => {\n    const delay = item.getDelay();\n    const times = item.times;\n\n    times.forEach(time => {\n      const frame = item.getFrame(time);\n      (function forEach(...objs: any[]) {\n        const length = objs.length;\n        const lastObj = objs[length - 1];\n        const properties = objs.slice(0, -1);\n\n        const name = properties.join(\"///\");\n\n        if (name) {\n            if (!timelineInfo[name]) {\n                timelineInfo[name] = [];\n            }\n            const info = timelineInfo[name];\n\n            info.push([delay + time, lastObj]);\n        }\n\n        if (typeof lastObj === \"object\") {\n            Object.keys(lastObj).forEach(name2 => {\n                forEach(...properties, name2, lastObj[name2]);\n            });\n        }\n      })(item.getId(), frame.get());\n    });\n  });\n  return timelineInfo;\n}\n\nexport function getTarget(target: HTMLElement, conditionCallback: (el: Element) => boolean): HTMLElement {\n    let parentTarget = target;\n\n    while (parentTarget && parentTarget !== document.body) {\n        if (conditionCallback(parentTarget)) {\n            return parentTarget;\n        }\n        parentTarget = parentTarget.parentNode as HTMLElement;\n    }\n    return null;\n}\n\nexport function hasClass(target: Element, className: string) {\n    return hasClass2(target, `${PREFIX}${className}`);\n}\nexport function addClass(target: Element, className: string) {\n    return addClass2(target, `${PREFIX}${className}`);\n}\nexport function removeClass(target: Element, className: string) {\n    return removeClass2(target, `${PREFIX}${className}`);\n}\n\nexport function makeStructure<T, U>(\n    structure: ElementStructure,\n    parentEl?: Element,\n    obj: {\n        structures: IObject<any>,\n        elements: IObject<any>,\n        element: Element,\n    } = {structures: {}, elements: {}, element: null},\n): {structures: T, elements: U, element: Element} {\n    const {id, memberof, children} = structure;\n    const el = createElement(structure);\n    const structures = obj.structures;\n    const elements = obj.elements;\n\n    if (id) {\n        [].concat(id).forEach(nextId => {\n            const isArrayId = nextId.indexOf(\"[]\") > -1;\n            const isDoubleArrayId = isArrayId && nextId.indexOf(\"[][]\") > -1;\n\n            if (isArrayId) {\n                const objId = nextId.replace(/\\[\\]/g, \"\");\n\n                if (!structures[objId]) {\n                    structures[objId] = [];\n                    elements[objId] = [];\n                }\n                if (isDoubleArrayId) {\n                    structures[objId].push([]);\n                    elements[objId].push([]);\n                } else {\n                    structures[objId].push(structure);\n                    elements[objId].push(el);\n                }\n            } else {\n                structures[nextId] = structure;\n                elements[nextId] = el;\n            }\n        });\n    }\n    if (memberof) {\n        if (!structures[memberof]) {\n            structures[memberof] = [[]];\n            elements[memberof] = [[]];\n        }\n        structures[memberof][structures[memberof].length - 1].push(structure);\n        elements[memberof][elements[memberof].length - 1].push(el);\n    }\n\n    if (children) {\n        ([] as Array<string | ElementStructure>).concat(children).filter(child => child).forEach(child => {\n            if (isString(child)) {\n                makeStructure({ selector: child }, el, obj);\n            } else {\n                makeStructure(child, el, obj);\n            }\n        });\n    }\n    parentEl && parentEl.appendChild(el);\n\n    structure.element = el;\n    obj.element = el;\n    return (obj as any);\n}\nexport function compare(\n    prevArr: any,\n    nextArr: any,\n    callback: any,\n    syncCallback: any,\n) {\n    const prevKeys: Array<number | string> = prevArr.map(callback);\n    const nextKeys: Array<number | string> = nextArr.map(callback);\n    const prevKeysObject: IObject<number> = {};\n    const nextKeysObject = {};\n    const added = [];\n    const removed = [];\n\n    prevKeys.forEach((key, i) => {\n        prevKeysObject[key] = i;\n    });\n    nextKeys.forEach((key, i) => {\n        if (!(key in prevKeysObject)) {\n            added.push(i);\n        } else {\n            syncCallback(prevArr[prevKeysObject[key]], nextArr[i]);\n        }\n        nextKeysObject[key] = i;\n    });\n    prevKeys.forEach((key, i) => {\n        if (!(key in nextKeysObject)) {\n            removed.push(i);\n        }\n    });\n\n    return {added, removed};\n}\nexport function makeCompareStructure(\n    prevStructures: any,\n    nextStructures: any,\n    parentStructure: any,\n    callback: any,\n    syncCallback?: any,\n) {\n    const parentElement = parentStructure.element;\n\n    const {added, removed} = compare(\n        prevStructures,\n        nextStructures,\n        callback,\n        (prev, next) => {\n            next.element = prev.element;\n            syncCallback && syncCallback(prev, next);\n        },\n    );\n    removed.reverse().forEach(index => {\n        parentElement.removeChild(prevStructures[index].element);\n    });\n    added.forEach(index => {\n        const {element} = makeStructure(\n            nextStructures[index],\n        );\n        parentElement.insertBefore(\n            element,\n            nextStructures[index + 1] && nextStructures[index + 1].element,\n        );\n    });\n\n    parentStructure.children = nextStructures;\n}\nexport function isScene(value: any): value is Scene {\n    return value.constructor.name === \"Scene\";\n}\nexport function isSceneItem(value: any): value is SceneItem {\n    return value.constructor.name === \"SceneItem\";\n}\nexport function isFrame(value: any): value is Frame {\n    return value.constructor.name === \"Frame\";\n}\nexport function splitProperty(scene: Scene, property: string) {\n    const names = property.split(\"///\");\n    const length = names.length;\n    let item: Scene | SceneItem = scene;\n    let i;\n\n    for (i = 0; i < length; ++i) {\n        if (isSceneItem(item)) {\n            break;\n        }\n        item = scene.getItem(names[i]);\n    }\n    return {\n        item: item as SceneItem,\n        names: names.slice(0, i),\n        properties: names.slice(i),\n    };\n}\nexport function getSceneItem(scene: Scene, names: string[]): SceneItem {\n    return names.reduce<any>(\n        (nextScene, name) => nextScene.getItem(name),\n        scene,\n    );\n}\n\nexport function findElementIndexByPosition(elements: HTMLElement[], pos: number): number {\n    const length = elements.length;\n\n    for (let index = 0; index < length; ++index) {\n        const el = elements[index];\n        const box = el.getBoundingClientRect();\n        const top = box.top;\n        const bottom = top + box.height;\n\n        if (top <= pos && pos < bottom) {\n            return index;\n        }\n    }\n    return -1;\n}\n","import { toValue } from \"./utils\";\nimport { ElementStructure } from \"./types\";\n\nexport function updateKeyframesStructure(keyframes: ElementStructure[], maxTime) {\n    keyframes.forEach(keyframe => {\n        const {selector, dataset, style} = keyframe;\n        if (selector === \".keyframe\") {\n            style.left = `${dataset.time / maxTime * 100}%`;\n        } else {\n            style.left = `${dataset.from / maxTime * 100}%`,\n            style.width = `${(dataset.to - dataset.from) / maxTime * 100}%`;\n        }\n    });\n}\nexport function getKeyframesStructure(times, maxTime) {\n    const keyframeLines = [];\n\n    const keyframes = times.map(([time, value], i) => {\n        const valueText = toValue(value);\n\n        if (times[i + 1]) {\n            const [nextTime, nextValue] = times[i + 1];\n            const nextValueText = toValue(nextValue);\n\n            if (valueText === nextValueText) {\n                keyframeLines.push({\n                    selector: \".keyframe_line\",\n                    dataset: {\n                        time: `${time},${nextTime}`,\n                        from: time,\n                        to: nextTime,\n                    },\n                    style: {\n                        left: `${time / maxTime * 100}%`,\n                        width: `${(nextTime - time) / maxTime * 100}%`,\n                    },\n                });\n            }\n        }\n\n        return {\n            memberof: \"keyframesInfoList\",\n            selector: \".keyframe\",\n            dataset: {\n                time,\n                value: valueText,\n            },\n            style: {\n                left: `${time / maxTime * 100}%`,\n            },\n            html: `${time} ${valueText}`,\n        };\n    });\n\n    return [...keyframes, ...keyframeLines];\n}\n","import { now } from \"@daybrush/utils\";\n\nlet prevTime = 0;\nlet prevX = -1;\nlet prevY = -1;\n\nexport function dblCheck(isDrag, e, clientX, clientY, callback) {\n    const currentTime = now();\n\n    if (!isDrag) {\n        if (\n            prevX === clientX &&\n            prevY === clientY &&\n            currentTime - prevTime <= 500\n        ) {\n            callback(e, clientX, clientY);\n        }\n        prevX = clientX;\n        prevY = clientY;\n        prevTime = currentTime;\n    }\n}\n","export function getKeytimesStructure(maxTime) {\n    const keytimes = [];\n\n    for (let time = 0; time <= maxTime; ++time) {\n        keytimes.push({\n            dataset: {\n                time,\n            },\n            selector: \".keytime\",\n            style: {\n                width: `${100 / maxTime}%`,\n            },\n            children: [\n                {\n                    selector: \"span\",\n                    html: `${time}`,\n                },\n                {selector: \".graduation.start\"},\n                {selector: \".graduation.quarter\"},\n                {selector: \".graduation.half\"},\n                {selector: \".graduation.quarter3\"},\n            ],\n        });\n    }\n    return keytimes;\n}\nexport function getLinesStructure(maxTime: number) {\n    const lines = [];\n\n    for (let time = 0; time <= maxTime; ++time) {\n        lines.push({\n            selector: \".division_line\",\n            style: {\n                left: `${100 / maxTime * time}%`,\n            },\n        });\n    }\n    return lines;\n}\n","import Scene, { SceneItem } from \"scenejs\";\nimport {\n    getTimelineInfo, toValue, getTarget,\n    hasClass, removeClass, addClass, makeStructure, flatObject,\n    makeCompareStructure, splitProperty, getSceneItem, findElementIndexByPosition, applyStyle\n} from \"./utils\";\nimport { drag } from \"@daybrush/drag\";\nimport { CSS } from \"./consts\";\nimport { isObject, IObject, now } from \"@daybrush/utils\";\nimport Axes, { PinchInput } from \"@egjs/axes\";\nimport { ElementStructure, Ids } from \"./types\";\nimport { getKeyframesStructure, updateKeyframesStructure } from \"./KeyframesStructure\";\nimport { dblCheck } from \"./dblcheck\";\nimport { getKeytimesStructure, getLinesStructure } from \"./KeytimesStructure\";\n\nlet isExportCSS = false;\n\nexport default class Timeline {\n    private scene: Scene;\n    private structures: Ids<ElementStructure>;\n    private elements: Ids<HTMLElement>;\n    private propertiesNames: string[] = [];\n    private maxTime: number = 0;\n    private axes: Axes;\n    private selectedIndex: number = -1;\n    constructor(scene: Scene, parentEl: HTMLElement) {\n        scene.finish();\n\n        this.scene = scene;\n        this.initElement(scene, parentEl);\n        this.editor();\n    }\n    public getElement() {\n        return this.elements.timeline;\n    }\n    private initElement(scene: Scene, parentEl: HTMLElement) {\n        const duration = scene.getDuration();\n        const timelineInfo = getTimelineInfo(scene);\n        const maxDuration = Math.ceil(duration);\n        const maxTime = maxDuration + 5;\n        const propertiesNames = this.propertiesNames;\n        const properties: ElementStructure[] = [];\n        const values: ElementStructure[] = [];\n        const keyframesList: ElementStructure[] = [];\n        let timelineCSS: ElementStructure;\n\n        this.maxTime = maxTime;\n        if (!isExportCSS) {\n            timelineCSS = {\n                selector: \"style.style\",\n                html: CSS,\n            };\n            isExportCSS = true;\n        }\n\n        for (const property in timelineInfo) {\n            const propertyNames = property.split(\"///\");\n            const length = propertyNames.length;\n            const times = timelineInfo[property];\n            const id = propertyNames[length - 1];\n\n            propertiesNames.push(property);\n            properties.push({\n                id: \"properties[]\",\n                selector: \".property\",\n                dataset: {\n                    id,\n                    property,\n                    parent: propertyNames[length - 2] || \"\",\n                    object: \"0\",\n                    item: propertyNames[0],\n                },\n                style: {\n                    paddingLeft: `${10 + (length - 1) * 20}px`,\n                },\n                children: [\n                    { selector: \".arrow\"},\n                    {\n                        selector: \"span\",\n                        html: id,\n                    },\n                ],\n            });\n            const isHasObject = times[0] && isObject(times[0][1]);\n            values.push({\n                id: \"values[]\",\n                selector: \".value\",\n                dataset: {\n                    property,\n                    object: isHasObject ? \"1\" : \"0\",\n                },\n                children: {\n                    id: \"inputs[]\",\n                    selector: \"input\",\n                    attr: {\n                        value: times[0] ? times[0][1] : \"\",\n                    },\n                },\n            });\n            const parentProperty = propertyNames.slice(0, -1).join(\"///\");\n            properties.forEach(({dataset}) => {\n                if (dataset.property === parentProperty) {\n                    dataset.object = \"1\";\n                }\n            });\n            const keyframes = getKeyframesStructure(times, maxTime);\n            keyframesList.push({\n                id: [\n                    \"keyframesList[]\",\n                    \"keyframesInfoList[][]\",\n                ],\n                selector: \".keyframes\",\n                dataset: {\n                    property,\n                },\n                children: {\n                    id: \"keyframesContainers[]\",\n                    selector: \".keyframes_container\",\n                    children: keyframes,\n                },\n            });\n        }\n        const structure: ElementStructure = {\n            selector: \".timeline\",\n            id: \"timeline\",\n            children: [\n                timelineCSS,\n                {\n                    selector: \".header_area.control_area\",\n                    children: [\n                        {\n                            selector: \".properties_area\",\n                            children: {\n                                selector: \".property\",\n                            },\n                        },\n                        {\n                            selector: \".values_area\",\n                            children: {\n                                selector: \".value\",\n                            },\n                        },\n                        {\n                            selector: \".keyframes_area\",\n                            children: {\n                                selector: \".keyframes\",\n                                children: [\n                                    {\n                                        selector: \".time_area\",\n                                        id: \"timeArea\",\n                                        html: \"0\",\n                                    },\n                                    {\n                                        selector: \".play_control_area\",\n                                        id: \"playControlArea\",\n                                        children: [\n                                            {\n                                                selector: \".control.prev\",\n                                                html: \"prev\",\n                                            },\n                                            {\n                                                selector: \".control.play\",\n                                                html: \"play\",\n                                            },\n                                            {\n                                                selector: \".control.next\",\n                                                html: \"next\",\n                                            },\n                                        ],\n                                    },\n                                ],\n                            },\n                        },\n                    ],\n                },\n                {\n                    selector: \".header_area\",\n                    children: [\n                        {\n                            id: [\n                                \"propertiesAreas[]\",\n                            ],\n                            selector: \".properties_area\",\n                            children: [\n                                {\n                                    selector: \".property\",\n                                    html: \"Name\",\n                                },\n                            ],\n                        },\n                        {\n                            selector: \".values_area\",\n                            children: {\n                                selector: \".value\",\n                                html: \"+\",\n                            },\n                        },\n                        {\n                            id: \"keyframesAreas[]\",\n                            selector: \".keyframes_area\",\n                            children: {\n                                style: {\n                                    minWidth: `${50 * maxTime}px`,\n                                    width: `${(maxDuration ? maxTime / maxDuration : 1) * 100}%`,\n                                },\n                                id: \"keyframesScrollAreas[]\",\n                                selector: \".keyframes_scroll_area\",\n                                children: {\n                                    selector: \".keyframes\",\n                                    children: [\n                                        {\n                                            id: \"keytimesContainer\",\n                                            selector: \".keyframes_container\",\n                                            children: getKeytimesStructure(maxTime),\n                                        },\n                                        {\n                                            selector: \".keyframe_cursor\",\n                                            id: \"cursors[]\",\n                                        },\n                                    ],\n                                },\n                            },\n                        },\n                    ],\n                },\n                {\n                    id: \"scrollArea\",\n                    selector: \".scroll_area\",\n                    children: [\n                        {\n                            id: \"propertiesAreas[]\",\n                            selector: \".properties_area\",\n                            children: [\n                                {\n                                    selector: \".properties_scroll_area\",\n                                    children: properties,\n                                },\n                            ],\n                        },\n                        {\n                            id: \"valuesArea\",\n                            selector: \".values_area\",\n                            children: values,\n                        },\n                        {\n                            id: \"keyframesAreas[]\",\n                            selector: \".keyframes_area\",\n                            children: {\n                                style: {\n                                    minWidth: `${50 * maxTime}px`,\n                                    width: `${(maxDuration ? maxTime / maxDuration : 1) * 100}%`,\n                                },\n                                id: \"keyframesScrollAreas[]\",\n                                selector: \".keyframes_scroll_area\",\n                                children: [\n                                    ...keyframesList,\n                                    {\n                                        selector: \".keyframe_cursor\",\n                                        id: \"cursors[]\",\n                                    },\n                                    {\n                                        id: \"lineArea\",\n                                        selector: \".line_area\",\n                                        children: getLinesStructure(maxTime),\n                                    },\n                                ],\n                            },\n                        },\n                    ],\n                },\n            ],\n        };\n\n        const {structures, elements} = makeStructure(structure, parentEl);\n\n        this.structures = structures;\n        this.elements = elements;\n        this.syncScroll();\n        this.wheelZoom();\n        this.dragKeyframes();\n        this.clickProperty();\n    }\n    private syncScroll() {\n        const {\n            keyframesAreas,\n        } = this.elements;\n        let isScrollKeyframe = false;\n\n        keyframesAreas[0].addEventListener(\"scroll\", () => {\n            if (isScrollKeyframe) {\n                isScrollKeyframe = false;\n            } else {\n                isScrollKeyframe = true;\n                keyframesAreas[1].scrollLeft = keyframesAreas[0].scrollLeft;\n            }\n        });\n        keyframesAreas[1].addEventListener(\"scroll\", () => {\n            if (isScrollKeyframe) {\n                isScrollKeyframe = false;\n            } else {\n                isScrollKeyframe = true;\n                keyframesAreas[0].scrollLeft = keyframesAreas[1].scrollLeft;\n            }\n        });\n    }\n    private wheelZoom() {\n        const { keyframesScrollAreas } = this.elements;\n        const originalWidth = parseFloat(keyframesScrollAreas[0].style.width);\n\n        const axes = new Axes({\n            zoom: {\n                range: [100, Infinity],\n            },\n        }, {}, {\n                zoom: originalWidth,\n            });\n        axes.connect(\"zoom\", new PinchInput(keyframesScrollAreas[1], {\n            scale: 0.7,\n            hammerManagerOptions: {\n                touchAction: \"auto\",\n            },\n        }));\n        axes.on(\"hold\", e => {\n            console.log(\"hold\");\n            if (e.inputEvent) {\n                e.inputEvent.preventDefault();\n            }\n        });\n        axes.on(\"change\", e => {\n            const width = e.pos.zoom;\n\n            keyframesScrollAreas.forEach(el => {\n                el.style.width = `${width}%`;\n            });\n\n            if (e.inputEvent) {\n                e.inputEvent.preventDefault();\n            }\n        });\n\n        this.axes = axes;\n        keyframesScrollAreas[0].addEventListener(\"wheel\", e => {\n            const delta = e.deltaY;\n\n            axes.setBy({ zoom: delta / originalWidth * 5 });\n            !e.deltaX && e.preventDefault();\n        });\n    }\n    private select(index: number) {\n        const prevSelectedIndex = this.selectedIndex;\n        const values = this.structures.values;\n        const properties = this.structures.properties;\n        const keyframesList = this.structures.keyframesList;\n\n        this.selectedIndex = index;\n\n        if (prevSelectedIndex > -1) {\n            removeClass(properties[prevSelectedIndex].element, \"select\");\n            removeClass(values[prevSelectedIndex].element, \"select\");\n            removeClass(keyframesList[prevSelectedIndex].element, \"select\");\n        }\n\n        if (index > -1) {\n            addClass(properties[index].element, \"select\");\n            addClass(values[index].element, \"select\");\n            addClass(keyframesList[index].element, \"select\");\n        }\n    }\n    private clickProperty() {\n        const {\n            keyframesList,\n            values,\n            propertiesAreas,\n        } = this.elements;\n\n        propertiesAreas[1].addEventListener(\"click\", e => {\n            const properties = this.elements.properties;\n            const length = properties.length;\n            const arrow = getTarget(e.target as HTMLElement, el => hasClass(el, \"arrow\"));\n            const target = getTarget(e.target as HTMLElement, el => hasClass(el, \"property\"));\n\n            if (!target) {\n                return;\n            }\n            let index = properties.indexOf(target);\n\n            if (index === -1) {\n                return;\n            }\n            // select\n            if (!arrow) {\n                this.select(index);\n                return;\n            }\n\n            // fold\n            if (target.getAttribute(\"data-object\") === \"0\") {\n                return;\n            }\n            const isFold = target.getAttribute(\"data-fold\") === \"1\";\n\n            function fold(isPrevFold) {\n                const nextTarget = properties[index];\n                const nextProperty = nextTarget.getAttribute(\"data-property\");\n                const isNextFold = nextTarget.getAttribute(\"data-fold\") === \"1\";\n                const isNextObject = nextTarget.getAttribute(\"data-object\") === \"1\";\n\n                if (target !== nextTarget) {\n                    if (isFold) {\n                        if (!isPrevFold)  {\n                            removeClass(keyframesList[index], \"fold\");\n                            removeClass(values[index], \"fold\");\n                            removeClass(nextTarget, \"fold\");\n                        }\n                    } else {\n                        addClass(keyframesList[index], \"fold\");\n                        addClass(values[index], \"fold\");\n                        addClass(nextTarget, \"fold\");\n                    }\n                }\n                if (!isNextObject) {\n                    return;\n                }\n\n                for (++index; index < length; ++index) {\n                    const el = properties[index];\n\n                    if (\n                        // itemProperties\n                        el.getAttribute(\"data-property\").indexOf(nextProperty) > -1\n                    ) {\n                        // isChild\n                        fold(!isPrevFold && isNextFold);\n                    } else {\n                        --index;\n                        // not child\n                        break;\n                    }\n                }\n            }\n\n            fold(isFold);\n            target.setAttribute(\"data-fold\", isFold ? \"0\" : \"1\");\n        });\n    }\n    private setInputs(obj: IObject<any>) {\n        const valuesArea = this.elements.valuesArea;\n        for (const name in obj) {\n            valuesArea.querySelector<HTMLInputElement>(`[data-property=\"${name}\"] input`).value = obj[name];\n        }\n    }\n    private moveCursor(time: number) {\n        const {cursors} = this.elements;\n        const maxTime = this.maxTime;\n        const px = 15 - 30 * time / maxTime;\n        const percent = 100 * time / maxTime;\n        const left = `calc(${percent}% + ${px}px)`;\n\n        cursors.forEach(cursor => {\n            cursor.style.left = left;\n        });\n    }\n    private dragKeyframes() {\n        const structures = this.structures;\n        const {\n            scrollArea,\n            timeArea,\n            cursors,\n            keyframesAreas,\n            keyframesScrollAreas,\n        } = this.elements;\n        const scene = this.scene;\n\n        scene.on(\"animate\", e => {\n            const time = e.time;\n            this.moveCursor(time);\n\n            this.setInputs(flatObject(e.frames));\n            timeArea.innerHTML = `${time}`;\n        });\n        const getTime = (clientX: number) => {\n            const rect = keyframesScrollAreas[1].getBoundingClientRect();\n            const scrollAreaWidth = rect.width - 30;\n            const scrollAreaX = rect.left + 15;\n            const x = Math.min(scrollAreaWidth, Math.max(clientX - scrollAreaX, 0));\n            const percentage = x / scrollAreaWidth;\n            let time = this.maxTime * percentage;\n\n            time = Math.round(time * 20) / 20;\n\n            return time;\n        };\n        const move = (clientX: number) => {\n            scene.setTime(getTime(clientX));\n        };\n        const click = (e, clientX, clientY) => {\n            const target = getTarget(e.target as HTMLElement, el => hasClass(el, \"keyframe\"));\n\n            if (target) {\n                scene.setTime(target.getAttribute(\"data-time\"));\n            } else if (!hasClass(e.target as Element, \"keyframe_cursor\")) {\n                move(clientX);\n            }\n            const list = structures.keyframesList;\n            const index = findElementIndexByPosition(\n                list.map(({element}) => element),\n                clientY,\n            );\n\n            this.select(index);\n            e.preventDefault();\n        };\n        const dblclick = (e, clientX, clientY) => {\n            const list = this.structures.keyframesList;\n            const index = findElementIndexByPosition(\n                list.map(({element}) => element),\n                clientY,\n            );\n\n            if (index === -1) {\n                return;\n            }\n            const time = getTime(clientX);\n            const {item, properties} = splitProperty(scene, list[index].dataset.property);\n\n            this.editKeyframe(time, item.getNowValue(time, properties), index, true);\n            this.updateKeytimes();\n        };\n        drag(cursors[0], {\n            dragstart: ({inputEvent}) => {\n                inputEvent.stopPropagation();\n            },\n            drag: ({ clientX }) => {\n                move(clientX);\n            },\n            container: window,\n        });\n        keyframesScrollAreas.forEach(el => {\n            drag(el, {\n                container: window,\n                drag: ({ deltaX, deltaY, inputEvent }) => {\n                    keyframesAreas[1].scrollLeft -= deltaX;\n                    scrollArea.scrollTop -= deltaY;\n                    inputEvent.preventDefault();\n                },\n                dragend: ({ isDrag, clientX, clientY, inputEvent }) => {\n                    !isDrag && click(inputEvent, clientX, clientY);\n                    dblCheck(isDrag, inputEvent, clientX, clientY, dblclick);\n                },\n            });\n        });\n    }\n    private updateKeytimes() {\n        const maxTime = this.scene.getDuration() + 5;\n        const currentMaxTime = this.maxTime;\n\n        if (maxTime === currentMaxTime) {\n            return;\n        }\n\n        this.maxTime = maxTime;\n        const keytimesContainer = this.structures.keytimesContainer;\n        const lineArea = this.structures.lineArea;\n        const keytimes = keytimesContainer.children as ElementStructure[];\n        const lines = lineArea.children as ElementStructure[];\n        const nextKeytimes = getKeytimesStructure(maxTime);\n        const nextLines = getLinesStructure(maxTime);\n\n        makeCompareStructure(\n            keytimes,\n            nextKeytimes,\n            keytimesContainer,\n            ({dataset}) => (dataset.time),\n            (prev, cur) => {\n                applyStyle(cur.element, cur.style);\n            },\n        );\n        makeCompareStructure(\n            lines,\n            nextLines,\n            lineArea,\n            (_, i) => i,\n            (prev, cur) => {\n                applyStyle(cur.element, cur.style);\n            },\n        );\n        const keyframesContainers = this.structures.keyframesContainers;\n\n        keyframesContainers.forEach(keyframesContainer => {\n            const children = keyframesContainer.children as ElementStructure[];\n            updateKeyframesStructure(children, maxTime);\n\n            children.forEach(structure => {\n                applyStyle(structure.element, structure.style);\n            });\n        });\n\n        this.moveCursor(this.scene.getTime());\n\n        if (currentMaxTime && currentMaxTime < maxTime) {\n            this.axes.setTo({\n                zoom: this.axes.get([\"zoom\"]).zoom * maxTime / currentMaxTime,\n            });\n        }\n    }\n    private updateKeyframes(names: string[], properties: string[], index: number) {\n        const keyframesContainer = this.structures.keyframesContainers[index];\n        const keyframes = keyframesContainer.children as ElementStructure[];\n        const length = properties.length;\n        const scene = this.scene;\n        const item: SceneItem = getSceneItem(scene, names);\n        const times = item.times.filter(time =>\n            length ?\n            item.getFrame(time).has(...properties) :\n            true,\n        );\n        const delay = item.getDelay();\n        const nextKeyframes = getKeyframesStructure(\n            times.map(time => [delay + time, item.getFrame(time).get(...properties)]),\n            this.maxTime,\n        );\n\n        makeCompareStructure(\n            keyframes,\n            nextKeyframes,\n            keyframesContainer,\n            ({dataset}) => (dataset.time),\n        );\n\n        if (length) {\n            const nextProperties = properties.slice(0, -1);\n            const nextProperty = [...names, ...nextProperties].join(\"///\");\n            const nextIndex = this.propertiesNames.indexOf(nextProperty);\n\n            if (nextIndex !== -1) {\n                this.updateKeyframes(names, nextProperties, nextIndex);\n                return;\n            }\n        }\n        scene.setTime(scene.getTime());\n    }\n    private editKeyframe(time: number, value: any, index: number, isForce?: boolean) {\n        const valuesStructure = this.structures.values;\n        const isObjectData = this.structures.properties[index].dataset.object === \"1\";\n\n        if (isObjectData) {\n            return;\n        }\n        const property = valuesStructure[index].dataset.property as string;\n        const scene = this.scene;\n        const {\n            names,\n            properties,\n            item,\n        } = splitProperty(scene, property);\n\n        if (!isForce) {\n            const prevValue = (item as SceneItem).getNowValue(time, properties);\n\n            if (`${prevValue}` === value) {\n                return;\n            }\n        }\n        item.set(time, ...properties, value);\n\n        scene.setTime(time);\n        this.updateKeyframes(names, properties, index);\n    }\n    private edit(target: HTMLInputElement, value: any, isForce?: boolean) {\n        const parentEl = getTarget(target, el => hasClass(el, \"value\"));\n\n        if (!parentEl) {\n            return;\n        }\n        const values = this.elements.values;\n        const index = values.indexOf(parentEl);\n\n        if (index === -1) {\n            return;\n        }\n        this.editKeyframe(this.scene.getTime(), value, index, isForce);\n    }\n    private editor() {\n        const valuesArea = this.elements.valuesArea;\n\n        valuesArea.addEventListener(\"keyup\", e => {\n            if (e.keyCode !== 13) {\n                return;\n            }\n            const target = e.target as HTMLInputElement;\n\n            this.edit(target, target.value, true);\n        });\n        valuesArea.addEventListener(\"focusout\", e => {\n            const target = e.target as HTMLInputElement;\n\n            this.edit(target, target.value);\n        });\n    }\n}\n"],"names":["PREFIX","CSS","replace","applyStyle","el","style","name","createElement","structure","parentEl","selector","dataset","attr","html","classNames","match","tag","id","document","className","map","join","setAttribute","innerHTML","appendChild","keys","value","arr","push","toValue","type","Array","isArray","k","flatObject","obj","newObj","isObject","nextObj","isFrame","get","nextName","getTimelineInfo","scene","timelineInfo","forEach","item","delay","getDelay","times","time","frame","getFrame","_i","objs","length","lastObj","properties","slice","info","Object","name2","getId","getTarget","target","conditionCallback","parentTarget","body","parentNode","hasClass","hasClass2","addClass","addClass2","removeClass","removeClass2","makeStructure","structures","elements","element","memberof","children","concat","nextId","isArrayId","indexOf","isDoubleArrayId","objId","filter","child","isString","compare","prevArr","nextArr","callback","syncCallback","prevKeys","nextKeys","prevKeysObject","nextKeysObject","added","removed","key","i","makeCompareStructure","prevStructures","nextStructures","parentStructure","parentElement","_a","reverse","index","removeChild","insertBefore","isSceneItem","constructor","splitProperty","property","names","split","getItem","getSceneItem","reduce","nextScene","findElementIndexByPosition","pos","box","getBoundingClientRect","top","bottom","height","updateKeyframesStructure","keyframes","maxTime","keyframe","left","from","width","to","getKeyframesStructure","keyframeLines","valueText","_b","nextTime","nextValue","nextValueText","prevTime","prevX","prevY","dblCheck","isDrag","e","clientX","clientY","currentTime","now","getKeytimesStructure","keytimes","getLinesStructure","lines","isExportCSS","finish","initElement","editor","timeline","duration","getDuration","maxDuration","Math","ceil","propertiesNames","values","keyframesList","timelineCSS","propertyNames","parent","object","paddingLeft","isHasObject","parentProperty","minWidth","syncScroll","wheelZoom","dragKeyframes","clickProperty","keyframesAreas","isScrollKeyframe","addEventListener","scrollLeft","keyframesScrollAreas","originalWidth","parseFloat","axes","Axes","zoom","range","Infinity","connect","PinchInput","scale","hammerManagerOptions","touchAction","on","console","log","inputEvent","preventDefault","delta","deltaY","setBy","deltaX","prevSelectedIndex","selectedIndex","propertiesAreas","_this","arrow","select","getAttribute","isFold","fold","isPrevFold","nextTarget","nextProperty","isNextFold","isNextObject","valuesArea","querySelector","cursors","px","percent","cursor","scrollArea","timeArea","moveCursor","setInputs","frames","getTime","rect","scrollAreaWidth","scrollAreaX","x","min","max","percentage","round","move","setTime","click","list","dblclick","editKeyframe","getNowValue","updateKeytimes","drag","dragstart","stopPropagation","container","window","scrollTop","dragend","currentMaxTime","keytimesContainer","lineArea","nextKeytimes","nextLines","prev","cur","_","keyframesContainers","keyframesContainer","setTo","has","nextKeyframes","nextProperties","nextIndex","updateKeyframes","isForce","valuesStructure","isObjectData","prevValue","set","keyCode","edit"],"mappings":"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"}