{"version":3,"sources":["Editor/consts.ts","Editor/utils/utils.ts","Editor/Menu/Icon.tsx","Editor/Menu/MoveToolIcon.tsx","Editor/Menu/TextIcon.tsx","Editor/Menu/OvalIcon.tsx","Editor/Menu/RectIcon.tsx","Editor/Menu/CircleIcon.tsx","Editor/Menu/PolygonIcon.tsx","Editor/Menu/CropIcon.tsx","Editor/Menu/RoundRectIcon.tsx","Editor/KeyManager/KeyManager.ts","Editor/Popup/Popup.tsx","Editor/Menu/KeyboardIcon.tsx","Editor/Menu/Menu.tsx","Editor/Viewport/Viewport.tsx","Editor/Tabs/Tab.tsx","Editor/Inputs/Input.tsx","Editor/Inputs/TextBox.tsx","Editor/Inputs/NumberBox.tsx","Editor/Inputs/TabInputBox.tsx","Editor/Inputs/Anchor.tsx","Editor/Tabs/TransformTab.tsx","Editor/Tabs/Folder/Folder.tsx","Editor/Inputs/LabelBox.tsx","Editor/Tabs/Folder/File.tsx","Editor/Tabs/FrameTab/Property.tsx","Editor/Tabs/FrameTab/FrameTab.tsx","Editor/Tabs/AlignTab/Align.tsx","Editor/Tabs/AlignTab/AlignTab.tsx","Editor/Tabs/LayerTab/Layer.tsx","Editor/Tabs/LayerTab/LayerTab.tsx","Editor/Inputs/ColorPicker.tsx","Editor/Inputs/ColorBox.tsx","Editor/Tabs/ColorTab/ColorTab.tsx","Editor/Inputs/SelectBox.tsx","Editor/Tabs/FontTab/FontTab.tsx","Editor/Tabs/Tabs.tsx","Editor/utils/EventBus.ts","Editor/utils/Memory.ts","Editor/Viewport/MoveableMananger.tsx","Editor/utils/MoveableData.ts","Editor/utils/HistoryManager.ts","Editor/utils/Debugger.ts","Editor/utils/ClipboardManager.tsx","Editor/Editor.tsx","Editor/index.ts","demo/App.tsx","index.tsx"],"names":["EDITOR_PROPERTIES","PREFIX","userAgent","navigator","isMacintosh","indexOf","prefix","classNames","prefixNames","getContentElement","el","contentEditable","parentElement","connectEditorProps","component","prototype","Object","defineProperty","get","this","props","editor","forEach","name","between","val","min","max","Math","getId","getAttribute","getIds","els","map","checkInput","target","tagName","toLowerCase","isContentEditable","getParnetScenaElement","hasAttribute","getScenaAttrs","attributes","length","attrs","i","value","isScenaFunction","isFunction","isScenaElement","isObject","Icon","keys","subContainer","React","onClick","selected","focusSub","onSelect","constructor","id","onSubClick","e","stopPropagation","blur","current","style","display","className","renderIcon","renderSubContainer","subIcons","renderSubIcons","key","ref","IconClass","isSelect","onSubSelect","camelize","keyManager","keydown","ctrlKey","metaKey","maker","makeThen","MoveToolIcon","viewBox","d","fill","strokeLinejoin","strokeWidth","stroke","transformOrigin","transform","TextIcon","memory","tag","contenteditable","color","focus","OvalIcon","cx","cy","rx","ry","RectIcon","CircleIcon","PolygonIcon","CropIcon","frame","moveableData","getSelectedFrames","cropType","clipPath","splitBracket","renderSubIcon","infos","removeProperties","historyManager","addAction","set","eventBus","requestTrigger","forceUpdate","RoundRectIcon","KeyManager","console","keycon","KeyController","keylist","isEnable","callback","description","addCallback","keyup","destroy","type","push","inputEvent","check","log","join","altKey","shiftKey","Popup","overlayElement","popupKeyManager","onClose","children","disable","enable","KeyboardIcon","state","renderPopup","setState","ReactDOM","editorElement","MENUS","Menu","menuRefs","select","renderMenus","MenuClass","filter","m","Viewport","components","jsxs","viewport","jsx","ids","viewportRef","onBlur","renderChildren","getViewportInfos","info","nextChildren","renderedChildren","isString","scenaElementId","scenaAttrs","scenaText","innerText","scenaHTML","innerHTML","jsxChildren","isArray","floor","random","getInfo","parentChildren","scopeId","index","indexes","reduce","getInfoByElement","parentInfo","getIndexes","parentScopeId","makeId","jsxId","elementInfo","registerChildren","componentId","setInfo","appendIndex","jsxInfos","splice","Promise","resolve","registerElement","document","querySelector","setAttribute","added","getElement","isChild","slice","unregisterChildren","targets","removedChildren","getSortedTargets","getIndex","removed","indexesList","Array","sort","a","b","aLength","bLength","getSortedInfos","getSortedIndexesList","getInfoByIndexes","moved","prevInfo","getPrevInfo","lastInfo","getLastChildInfo","move","rootInfo","nextInfos","prevInfos","parnetChildren","moveInfo","sortedInfos","moves","Tab","title","eventList","renderTab","on","moveableManager","getMoveable","off","Input","input","updateValue","setValue","TextBox","inputAttributes","onInput","ev","nativeEvent","isUndefined","data","onChange","onKeyDown","onKeyUp","currentTarget","getKey","keyCode","inputProps","NumberBox","step","pattern","TabInputBox","label","InputType","v","getValue","HORIZONTAL_DIRECTIONS","VERTICAL_DIRECTIONS","Anchor","origin","split","parseFloat","round","h","j","data-anchor-index","TransformTab","xInput","yInput","wInput","hInput","oInput","rInput","onChangeRotate","rotate","request","isInstant","onChangePos","x","y","onChangeOrigin","rect","getRect","ow","offsetWidth","oh","offsetHeight","onChangeSize","width","height","onRender","left","top","rotation","addEvent","getCurrentFile","Folder","moveDragger","folderRef","shadowRef","fold","shadows","onClickFold","multiselect","nextSelected","global","onDragStart","hasClass","getBoundingClientRect","datas","offsetX","clientX","folderRect","folderLine","preventDefault","onDrag","folderElement","clientY","clearPointers","isTop","objMap","flatMap","dragFirst","clickedTarget","fileInfos","updateShadowPosition","elementFromPoint","flatChildren","siblingIndex","findIndex","fullId","targetInfo","nextInfo","targetDepth","depth","nextDepth","depthRange","distX","distDepth","contains","checkMove","setProperty","classList","add","onDragEnd","isDrag","onMove","abs","parentId","undefined","cssText","scope","getFullId","isSelected","data-file-key","renderProperties","renderShadows","isMove","Dragger","container","window","dragstart","drag","dragend","unset","properties","FileComponent","getName","getChildren","nextScope","fileScope","valueChildren","call","querySelectorAll","remove","defaultProps","_","LabelBox","File","Property","FrameTab","renderProperty","setTargets","Align","direction","TYPES","DIRECTIONS","getDirectionPos","size","start","AlignTab","moveable","moveables","pos","getFrame","prev","subRect","subPos","delta","translate","t","next","renderFrames","updateRect","viewportPos","Layer","LayerTab","renderFile","getViewport","getSelectedTargets","setSelectedTargets","AnyChromePicker","ChromePicker","ColorPicker","rgb","r","g","onChangeComplete","ColorBox","colorInput","textInput","onFocus","relatedTarget","backgroundColor","renderPicker","onMouseDown","onTouchStart","ColorTab","onChangeBackgroundColor","onChangeTextColor","frames","backgroundColors","colors","SelectBox","options","FONT_FAMILY_PROPS","TEXT_ALIGN_PROPS","FONT_STYLE_PROPS","FONT_WEIGHT_PROPS","TEXT_DECORATION_PROPS","FontTab","changeProperty","onChangeAlign","onChangeFamily","onChangeStyle","onChangeWeight","onChangeDecoration","getProperties","family","align","weight","decoration","TABS","CurrentTab","Tabs","tabs","onMouseOver","prevSelected","onMouseOut","renderTabs","UserTab","data-target-id","EventBus","eventMap","params","cancelAnimationFrame","requestAnimationFrame","trigger","Component","Memory","Map","clear","restoreRender","prevState","error","result","diff","prevList","removeProperty","render","undoRender","redoRender","undoRenders","redoRenders","MoveableManager","verticalGuidelines","horizontalGuidelines","selectedTargets","selectedMenu","renderViewportMoveable","selecto","elementGuidelines","getTargets","isShift","draggable","resizable","throttleResize","clippable","dragArea","throttleDragRotate","keepRatio","rotatable","snappable","snapCenter","snapGap","roundable","clipArea","onDragGroupStart","onDragGroup","onScaleStart","onScale","onScaleGroupStart","onScaleGroup","onResizeStart","onResize","onResizeGroupStart","onResizeGroup","onRotateStart","onRotate","onRotateGroupStart","onRotateGroup","defaultClipPath","onClip","onDragOriginStart","onDragOrigin","onRound","inputTarget","isDouble","selectMenu","onClickGroup","clickTarget","onRenderStart","prevData","isRender","onRenderEnd","onRenderGroupStart","prevDatas","onRenderGroup","onRenderGroupEnd","registerType","MoveableData","createAuto","names","defaultValues","property","MoveableHelper","HistoryManager","undoStack","redoStack","types","undo","redo","undoAction","pop","redoAction","Debugger","isDebug","args","ClipboardManager","onCut","onCopy","removeElements","clipboardData","SavedScenaData","saveTargets","setData","JSON","stringify","onPaste","read","addEventListener","removeEventListener","execCommand","all","html2canvas","then","images","imageCanvas","parentRect","canvas","createElement","context","getContext","rects","drawImage","toBlob","blob","clipboard","write","ClipboardItem","scenaDatas","parse","getData","loadDatas","readDataTransfter","clipboardItems","hasText","item","hasImage","getType","appendBlob","readText","text","appendJSXs","undoCreateElements","res","removeByIds","getElements","restoreElements","undoSelectTargets","prevs","nexts","redoSelectTargets","undoChangeText","redoChangeText","undoMove","redoMove","Editor","horizontalGuides","verticalGuides","zoom","debug","clipboardManager","infiniteViewer","menu","onMenuChange","resize","onWheel","deltaY","parentTarget","nextText","horizontalSnapGuides","verticalSnapGuides","unit","scrollCenter","snapThreshold","snaps","displayDragPos","dragPosFormat","onChangeGuides","guides","usePinch","pinchThreshold","checkBlur","nodeName","isMoveableElement","some","stop","onAbortPinch","triggerDragStart","onScroll","scroll","scrollLeft","scrollGuides","scrollTop","onPinch","dragContainer","hitRate","selectableTargets","selectByClick","selectFromInside","toggleContinueSelect","scrollOptions","getContainer","threshold","throttleTime","getScrollPosition","getScrollLeft","getScrollTop","contentElement","isTrusted","scrollBy","onSelectEnd","isDragStart","selectEndMaker","dragStart","passive","moveInside","moveOutside","isRestore","every","parnetTarget","promiseState","indexesListLength","appendComplete","registerFrame","createFrame","checkImageLoaded","complete","loaded","frameMap","removeFrame","childInfo","removeFrames","selectedInfo","getNextInfo","removeTargets","selectedTarget","removeTarget","isUpdate","loadData","getJSX","getComponent","saveTarget","url","URL","createObjectURL","appendJSX","src","alt","movedInfos","moveComplete","selectIcon","getSelected","position","deltaX","activeElement","selection","getSelection","removeAllRanges","restoreFrames","Badge","data-scena-element-id","href","scenaComponentId","App","suppressContentEditableWarning","getElementById"],"mappings":"6jBAAaA,EAAoB,CAAC,SAAU,WAAY,aAAc,eAAgB,kBAAmB,iBAAkB,WAC9GC,EAAS,SAGTC,GAAmC,qBAAdC,WAA6BA,WAAc,IAAWD,WAAa,GACxFE,EAAcF,EAAUG,QAAQ,cAAgB,GAAKH,EAAUG,QAAQ,SAAW,GAAKH,EAAUG,QAAQ,WAAa,E,QCE5H,SAASC,IAAiC,IAAD,uBAAtBC,EAAsB,yBAAtBA,EAAsB,gBAC5C,OAAOC,IAAW,WAAX,GAAYP,GAAZ,OAAuBM,IAE3B,SAASE,EAAkBC,GAC9B,MAA2B,YAAvBA,EAAGC,gBACIF,EAAkBC,EAAGE,eAEL,SAAvBF,EAAGC,gBACID,EAEJ,KAGJ,SAASG,EAAmBC,GAC/B,IAAMC,EAAYD,EAAUC,UAC5BC,OAAOC,eAAeF,EAAW,SAAU,CACvCG,IAAK,WACD,OAAOC,KAAKC,MAAMC,UAG1BrB,EAAkBsB,SAAQ,SAAAC,GACtBP,OAAOC,eAAeF,EAAWQ,EAAM,CACnCL,IAAK,WACD,OAAOC,KAAKC,MAAMC,OAAOE,SAKlC,SAASC,EAAQC,EAAaC,EAAaC,GAC9C,OAAOC,KAAKF,IAAIE,KAAKD,IAAID,EAAKD,GAAME,GAGjC,SAASE,EAAMnB,GAClB,OAAOA,EAAGoB,aDtCuB,yBCwC9B,SAASC,EAAOC,GACnB,OAAOA,EAAIC,KAAI,SAAAvB,GAAE,OAAImB,EAAMnB,MAGxB,SAASwB,EAAWC,GACvB,IAAMC,EAAUD,EAAOC,QAAQC,cAE/B,OAAQF,EAAuBG,mBAAiC,UAAZF,GAAmC,aAAZA,EAmBxE,SAASG,EAAsB7B,GAClC,OAAKA,EAGDA,EAAG8B,aDtE0B,yBCuEtB9B,EAEJ6B,EAAsB7B,EAAGE,eALrB,KAcR,SAAS6B,EAAc/B,GAK1B,IAJA,IAAMgC,EAAahC,EAAGgC,WAChBC,EAASD,EAAWC,OACpBC,EAAsB,GAEnBC,EAAI,EAAGA,EAAIF,IAAUE,EAAG,CAAC,IAAD,EACLH,EAAWG,GAA3BtB,EADqB,EACrBA,KAAMuB,EADe,EACfA,MDxFe,0BC0FzBvB,GAA2C,UAATA,IAGtCqB,EAAMrB,GAAQuB,GAGlB,OAAOF,EAGJ,SAASG,EAAgBD,GAC5B,OAAOE,qBAAWF,IAAU,qBAAsBA,EAG/C,SAASG,EAAeH,GAC3B,OAAOI,mBAASJ,KAAWC,EAAgBD,G,iBC3FjBK,EAD7BtC,G,gNASUuC,KAAiB,G,EAEhBC,aAAeC,c,EAuChBC,QAAU,WACT,EAAKnC,MAAMoC,UACX,EAAKC,WAET,IAAMC,EAAW,EAAKtC,MAAMsC,SAExBA,GACAA,EAAU,EAAKC,YAAoBC,K,EAGpCC,WAAa,SAACC,GACjBA,EAAEC,mB,EAcCC,KAAO,WACV,IAAMX,EAAe,EAAKA,aAAaY,QAClCZ,IAILA,EAAaa,MAAMC,QAAU,S,uDApE7B,OACI,uBAAKC,UAAW9D,EAAO,OAAQa,KAAKC,MAAMoC,SAAW,WAAa,IAC9DD,QAASpC,KAAKoC,SACbpC,KAAKkD,aACLlD,KAAKmD,wB,2CAKd,IAAMC,EAAWpD,KAAKqD,iBAEtB,GAAKD,EAAS5B,OAGd,MAAO,CACH,uBAAK8B,IAAK,eAAgBL,UAAW9D,EAAO,kBAC5Ca,KAAKC,MAAMoC,UAAY,uBAAKiB,IAAK,oBAC7BL,UAAW9D,EAAO,qBAAsBoE,IAAKvD,KAAKkC,aAClDE,QAASpC,KAAK0C,YAEbU,M,uCAKT,MAAO,K,oCAEUI,EAAwBf,EAAYgB,GAAoB,IAAD,OACxE,OAAO,uBAAKH,IAAKb,EAAIQ,UAAW9D,EAAO,OAAQ,WAAYsE,EAAW,WAAa,IAAKrB,QAAS,WAC7F,EAAKsB,YAAajB,KAElB,gBAACe,EAAD,CAAWtD,OAAQF,KAAKC,MAAMC,OAAQmC,UAAU,IAChD,uBAAKY,UAAW9D,EAAO,mBAClBwE,YAAS,IAAD,OAAKlB,Q,iCAkBtB,IAAMP,EAAelC,KAAKkC,aAAaY,QAClCZ,IAI8B,UAA/BA,EAAaa,MAAMC,QACnBd,EAAaa,MAAMC,QAAU,OAE7Bd,EAAaa,MAAMC,QAAU,W,kCAWlBP,M,0CACS,IAAD,OACjBR,EAAOjC,KAAKiC,KACdA,EAAKT,QACLxB,KAAK4D,WAAWC,QAAQ5B,GAAM,SAAAU,GAC1B,GAAIA,EAAEmB,SAAWnB,EAAEoB,QACf,OAAO,EAEX,EAAK3B,YACLpC,KAAKwC,YAAoBC,Q,GA3FEN,iB,EAKzBM,Q,IACAuB,W,IACAC,SAAsD,a,SCnBnDC,E,4MAEVjC,KAAO,CAAC,K,2DAEX,OACI,uBAAKkC,QAAQ,aACT,wBACIC,EAAE,8EACFC,KAAK,OAAOC,eAAe,QAC3BC,YAAY,IAAIC,OAAO,OACvBzB,MAAO,CAAE0B,gBAAiB,YAAaC,UAAW,wB,GAV5B1C,GAArBkC,EACHzB,GAAK,W,WCAFkC,E,4MAEV1C,KAAO,CAAC,K,2DAcX,OACI,uBAAKkC,QAAQ,aACT,qBAAGO,UAAU,mDACT,wBAEIN,EAAE,6LACFrB,MAAO,CAAEsB,KAAM,iB,GAtBDrC,GAAjB2C,EACHlC,GAAK,OADFkC,EAGHX,MAAQ,SAACY,GAAD,MAAqB,CACvCC,IAAK,MACLpD,MAAO,CACHqD,iBAAiB,GAErB/B,MAAO,CACHgC,MAAOH,EAAO7E,IAAI,YATT4E,EAYHV,SAAW,SAACjD,GACtBA,EAAOgE,S,ICbMC,E,2KAWb,OACI,uBAAKd,QAAQ,aACT,2BAASE,KAAK,OAAOa,GAAG,OAAOC,GAAG,OAAOC,GAAG,KAAKC,GAAG,KAChDf,eAAe,QAAQC,YAAY,IAAIC,OAAO,c,GAd5BxC,GAAjBiD,EACHxC,GAAK,OADFwC,EAEHjB,MAAQ,SAACY,GAAD,MAAqB,CACvCC,IAAK,MACLpD,MAAO,GACPsB,MAAO,CACH,mBAAoB6B,EAAO7E,IAAI,oBAC/B,gBAAiB,S,ICPRuF,E,2KAUb,OACI,uBAAKnB,QAAQ,aACT,wBAAMC,EAAE,iGACJC,KAAK,OAAOC,eAAe,QAAQC,YAAY,IAAIC,OAAO,c,GAbxCxC,GAAjBsD,EACH7C,GAAK,OADF6C,EAEHtB,MAAQ,SAACY,GAAD,MAAqB,CACvCC,IAAK,MACLpD,MAAO,GACPsB,MAAO,CACH,mBAAoB6B,EAAO7E,IAAI,uB,ICNtBwF,E,2KAWb,OACI,uBAAKpB,QAAQ,aACT,2BAASE,KAAK,OAAOa,GAAG,OAAOC,GAAG,OAAOC,GAAG,KAAKC,GAAG,KAChDf,eAAe,QAAQC,YAAY,IAAIC,OAAO,c,GAd1BxC,GAAnBuD,EACH9C,GAAK,SADF8C,EAEHvB,MAAQ,SAACY,GAAD,MAAqB,CACvCC,IAAK,MACLpD,MAAO,GACPsB,MAAO,CACH,mBAAoB6B,EAAO7E,IAAI,oBAC/B,gBAAiB,S,ICRRyF,E,2KAGb,OACI,uBAAKrB,QAAQ,aACT,wBAAMC,EAAE,sEACJC,KAAK,OAAOC,eAAe,QAAQC,YAAY,IAAIC,OAAO,c,GANrCxC,GAApBwD,EACH/C,GAAK,U,ICIFgD,E,4MAEVxD,KAAO,CAAC,K,2DAEX,OACI,uBAAKkC,QAAQ,aACT,wBAEIC,EAAE,0CACFrB,MAAO,CAAEyB,OAAQ,QAASD,YAAa,EAAGF,KAAM,a,uCAK5D,IAAMqB,EAAQ1F,KAAK2F,aAAaC,oBAAoB,GAChDC,EAAW7F,KAAK4E,OAAO7E,IAAI,SAAW,QAE1C,GAAI2F,EAAO,CACP,IAAMI,EAAWJ,EAAM3F,IAAI,cAAgB2F,EAAM3F,IAAI,QAEjD+F,IACAD,EAAWE,YAAaD,GAAU3G,QAG1C,MAAO,CACHa,KAAKgG,cAAcV,EAAU,QAAsB,UAAbO,GACtC7F,KAAKgG,cAAcV,EAAU,OAAqB,SAAbO,GACrC7F,KAAKgG,cAAcT,EAAY,SAAuB,WAAbM,GACzC7F,KAAKgG,cAAcf,EAAU,UAAwB,YAAbY,GACxC7F,KAAKgG,cAAcR,EAAa,UAAwB,YAAbK,M,kCAGhCpD,GACf,IAAMkD,EAAe3F,KAAK2F,aACpBD,EAAQC,EAAaC,oBAAoB,GAE/C,GAAIF,EAAO,CACP,IAAMI,EAAWJ,EAAM3F,IAAI,cAAgB2F,EAAM3F,IAAI,QAErD,GAAI+F,EAGA,GAAIrD,IAFasD,YAAaD,GAAU3G,OAEnB,CACjB,IAAM8G,EAAQN,EAAaO,iBAAiB,YAAa,QAEzDlG,KAAKmG,eAAeC,UAAU,UAAW,CAAEH,WAKvDjG,KAAK4E,OAAOyB,IAAI,OAAQ5D,GACxBzC,KAAKsG,SAASC,eAAe,UAE7BvG,KAAKwG,kB,GArDyBxE,GAAjByD,EACHhD,GAAK,O,ICLFgE,E,2KAWb,OACI,uBAAKtC,QAAQ,aACT,wBAAMC,EAAE,iHACJC,KAAK,OAAOC,eAAe,QAAQC,YAAY,IAAIC,OAAO,c,GAdnCxC,GAAtByE,EACHhE,GAAK,YADFgE,EAEHzC,MAAQ,SAACY,GAAD,MAAqB,CACvCC,IAAK,MACLpD,MAAO,GACPsB,MAAO,CACH,mBAAoB6B,EAAO7E,IAAI,oBAC/B,gBAAiB,U,mCCER2G,E,WACjB,WAAoBC,GAAoB,yBAApBA,UAAmB,KAChCC,OAAS,IAAIC,IADmB,KAEhCC,QAAqC,GAFL,KAGhCC,UAAW,E,qDAGd/G,KAAK+G,UAAW,I,gCAGhB/G,KAAK+G,UAAW,I,8BAEL9E,EAAgB+E,EAA2BC,GACtDjH,KAAK4G,OAAO/C,QAAQ5B,EAAMjC,KAAKkH,YAAY,UAAWjF,EAAM+E,EAAUC,M,4BAE7DhF,EAAgB+E,EAA2BC,GACpDjH,KAAK4G,OAAOO,MAAMlF,EAAMjC,KAAKkH,YAAY,QAASjF,EAAM+E,EAAUC,M,gCAelEjH,KAAK4G,OAAOQ,Y,kCAEIC,EAAcpF,EAAgB+E,EAA2BC,GAAuB,IAAD,OAO/F,OANIA,GACAjH,KAAK8G,QAAQQ,KAAK,CACdrF,EACAgF,IAGD,SAACtE,GACJ,IAAK,EAAKoE,WAlDtB,SAAepE,GAIX,OAAI5B,EAHe4B,EAAE4E,WACKvG,QAgDKwG,CAAM7E,GACzB,OAAO,GAII,IAFAqE,EAASrE,IAEAsE,GACpB,EAAKN,QAAQc,IAAb,UAAoBJ,EAApB,aAA6BpF,EAAKyF,KAAK,QAAUT,M,6BA5BzD,OAAOjH,KAAK4G,OAAOe,S,+BAGnB,OAAO3H,KAAK4G,OAAOgB,W,8BAGnB,OAAO5H,KAAK4G,OAAO7C,U,8BAGnB,OAAO/D,KAAK4G,OAAO9C,Y,KCjCN+D,EADpBnI,E,8MAKUoI,eAAiB3F,c,EACjB4F,gBAAkB,IAAIrB,EAAW,EAAKC,S,EAmBtCvE,QAAU,SAACO,GACdA,EAAEC,kBACED,EAAE3B,SAAW,EAAK8G,eAAehF,SACjC,EAAK7C,MAAM+H,W,uDApBf,OAAO,uBAAKzE,IAAKvD,KAAK8H,eAAgB7E,UAAW9D,EAAO,WAAYiD,QAASpC,KAAKoC,SAC9E,uBAAKa,UAAW9D,EAAO,UACnB,uBAAK8D,UAAW9D,EAAO,SAAUiD,QAASpC,KAAKC,MAAM+H,UACpDhI,KAAKC,MAAMgI,a,0CAII,IAAD,OACvBjI,KAAK4D,WAAWsE,UAChBlI,KAAK+H,gBAAgBZ,MAAM,CAAC,QAAQ,WAChC,EAAKlH,MAAM+H,e,6CAIfhI,KAAK4D,WAAWuE,SAChBnI,KAAK+H,gBAAgBX,c,GAtBMjF,mB,ECFdiG,E,4MAEVnG,KAAO,CAAC,K,EACRoG,MAAQ,CACXC,aAAa,G,EA+BVlG,QAAU,WACb,EAAKmG,SAAS,CACVD,aAAa,K,EAGdN,QAAU,WACb,EAAKO,SAAS,CACVD,aAAa,K,2DAnCjB,OACI,uBAAKrF,UAAW9D,EAAO,MACnB,uBAAK8D,UAAW9D,EAAO,aACnB,uBAAK8D,UAAW9D,EAAO,SACvB,uBAAK8D,UAAW9D,EAAO,SACvB,uBAAK8D,UAAW9D,EAAO,SACvB,uBAAK8D,UAAW9D,EAAO,SACvB,uBAAK8D,UAAW9D,EAAO,SACvB,uBAAK8D,UAAW9D,EAAO,SACvB,uBAAK8D,UAAW9D,EAAO,SACvB,uBAAK8D,UAAW9D,EAAO,YAE1Ba,KAAKqI,MAAMC,aAAetI,KAAKsI,iB,oCAKxC,OAAOE,eAAsB,gBAAC,EAAD,CAAOtI,OAAQF,KAAKE,OAAQ8H,QAAShI,KAAKgI,SACnE,uCACA,sBAAI/E,UAAW9D,EAAO,aACjBa,KAAK4D,WAAWkD,QAAQhG,KAAI,YAA0B,IAAD,mBAAvBmB,EAAuB,KAAjBgF,EAAiB,KAClD,OAAO,sBAAI3D,IAAKrB,EAAKyF,KAAK,MACtB,qBAAGzE,UAAW9D,EAAO,oBAAqB8H,EAA1C,IAAuD,8BAAShF,EAAKnB,KAAI,SAAAwC,GAAG,OAAI,wBAAMA,IAAKA,GAAMA,cAIvGtD,KAAKE,OAAOuI,cAAc3F,a,GAjCFd,GAArBoG,EACH3F,GAAK,YCMvB,I,QAAMiG,GAA4B,CAC9BxE,EACAS,EACAc,EACAH,EACAmB,EACAxB,GAEiB0D,G,4MAIVN,MAAQ,CACXhG,SAAU,Y,EAEPuG,SAAyC,G,EAwBzCC,OAAS,SAACpG,GACb,EAAK8F,SAAS,CACVlG,SAAUI,IAEd,EAAKxC,MAAMsC,SAASE,I,uDA1BpB,OACI,uBAAKQ,UAAW9D,EAAO,SAClBa,KAAK8I,cACN,uBAAK7F,UAAW9D,EAAO,gBACnB,gBAAC,EAAD,CAAce,OAAQF,KAAKC,MAAMC,a,oCAK3B,IAAD,OACXmC,EAAWrC,KAAKqI,MAAMhG,SACtBuG,EAAW5I,KAAK4I,SAChB1I,EAASF,KAAKC,MAAMC,OAE1B,OAAOwI,GAAM5H,KAAI,SAACiI,EAAWrH,GACzB,IAAMe,EAAKsG,EAAUtG,GAIrB,OAHKmG,EAASlH,KACVkH,EAASlH,GAAKS,eAEX,gBAAC4G,EAAD,CAAWxF,IAAKqF,EAASlH,GAAI4B,IAAKb,EAAIvC,OAAQA,EAAQmC,SAAUA,IAAaI,EAAIF,SAAU,EAAKsG,c,oCAU3G,IAAMxG,EAAWrC,KAAKqI,MAAMhG,SAC5B,OAAOqG,GAAMM,QAAO,SAAAC,GAAC,OAAIA,EAAExG,KAAOJ,KAAU,K,6BAG5CrC,KAAK4I,SAASzI,SAAQ,SAAAoD,GACbA,EAAIT,SAGTS,EAAIT,QAAQD,c,GA9CUV,iB,SCiBb+G,G,4MAIVC,WAAsC,G,EACtCC,KAAiC,G,EACjCC,SAAwB,CAC3BC,IAAK,4BACLlJ,KAAM,WACNqC,GAAI,WACJwF,SAAU,I,EAEPsB,IAA4B,CAC/BF,SAAU,EAAKA,U,EAEZhB,MAAQ,G,EACRmB,YAAcrH,c,uDAEjB,IAAMY,EAAQ/C,KAAKC,MAAM8C,MAEzB,OAAO,uBAAKE,UAAW9D,EAAO,sBAAuBsK,OAAQzJ,KAAKC,MAAMwJ,OAAQ1G,MAAOA,GAClF/C,KAAKC,MAAMgI,SACZ,qCAAKhF,UAAW9D,EAAO,aAAvB,gBf1DyB,wBe0D0C,YAAnE,CAAiFoE,IAAKvD,KAAKwJ,cACtFxJ,KAAK0J,eAAe1J,KAAK2J,wB,0CAKlC3J,KAAKuJ,IAAIF,SAAS9J,GAAKS,KAAKwJ,YAAY1G,U,qCAEtBmF,GAA6C,IAAD,OAC9D,OAAOA,EAASnH,KAAI,SAAA8I,GAChB,IAAMN,EAAMM,EAAKN,IACXO,EAAeD,EAAK3B,SACpB6B,EAAmB,EAAKJ,eAAeG,GACvCpH,EAAKmH,EAAKnH,GACVxC,EAAsB,CACxBqD,IAAKb,GAET,GAAIsH,YAAST,GAET,OADArJ,Ef5EqB,yBe4EUwC,EACxBN,gBAAA,MAAAA,EAAK,CAAemH,EAAKrJ,GAApB,mBAA8B6J,KACvC,GAAIlI,EAAgB0H,GAMvB,OALArJ,EAAM+J,eAAiBvH,EACvBxC,EAAMgK,WAAaL,EAAKnI,OAAS,GACjCxB,EAAMiK,UAAYN,EAAKO,UACvBlK,EAAMmK,UAAYR,EAAKS,UAEhBlI,gBAAoBmH,EAAKrJ,GACzB8J,YAAST,EAAIjC,MACpBpH,EftFqB,yBesFUwC,GAE/BxC,EAAM+J,eAAiBvH,EACvBxC,EAAMgK,WAAaL,EAAKnI,OAAS,GACjCxB,EAAMiK,UAAYN,EAAKO,UACvBlK,EAAMmK,UAAYR,EAAKS,WAE3B,IAAMC,EAAchB,EAAIrJ,MAAMgI,SAC9B,OAAO9F,eAAA,MAAAA,EAAK,CAAcmH,EAAd,2BAAwBA,EAAIrJ,OAAUA,IAAtC,mBACJsK,YAAQD,GAAeA,EAAc,CAACA,IADlC,YAEL,EAAKZ,eAAeG,W,6BAIrBpH,GACV,OAAOzC,KAAKoJ,KAAK3G,K,mCAEDA,GAChB,OAAOzC,KAAKmJ,WAAW1G,K,+BAKvB,IAFyC,IAA/B8G,EAA8B,uDAAVvJ,KAAKuJ,MAEtB,CACT,IAAM9G,EAAE,eAAWhC,KAAK+J,MAAsB,IAAhB/J,KAAKgK,WAEnC,IAAIlB,EAAI9G,GAGR,OAAOA,K,8BAGAA,EAAYmH,GACX5J,KAAKuJ,IAEb9G,GAAMmH,I,8BAECnH,GACX,OAAOzC,KAAKuJ,IAAI9G,K,uCAGIA,GACpB,IACMwF,EADOjI,KAAK0K,QAAQjI,GACJwF,SAEtB,OAAOA,EAASA,EAASzG,OAAS,K,kCAEnBiB,GACf,IAAMmH,EAAO5J,KAAK0K,QAAQjI,GAEpBkI,EADa3K,KAAK0K,QAAQd,EAAKgB,SACH3C,SAC5B4C,EAAQF,EAAezL,QAAQ0K,GAErC,OAAOe,EAAeE,EAAQ,K,kCAEfpI,GACf,IAAMmH,EAAO5J,KAAK0K,QAAQjI,GAEpBkI,EADa3K,KAAK0K,QAAQd,EAAKgB,SACH3C,SAC5B4C,EAAQF,EAAezL,QAAQ0K,GAErC,OAAOe,EAAeE,EAAQ,K,uCAEVtL,GACpB,OAAOS,KAAKuJ,IAAI7I,EAAMnB,M,uCAEFuL,GACpB,OAAOA,EAAQC,QAAO,SAACnB,EAAmBiB,GACtC,OAAOjB,EAAK3B,SAAU4C,KACvB7K,KAAKqJ,Y,iCAEM5G,GACd,IAAMmH,EAAO5J,KAAK0K,QAAQjI,GAE1B,OAAOmH,EAAOA,EAAKrK,GAAK,O,yCAGxB,OAAOS,KAAKqJ,SAASpB,W,iCAEPjH,GACd,IAAM4I,EAAQG,YAAS/I,GAAUhB,KAAK0K,QAAQ1J,GAAUhB,KAAKgL,iBAAiBhK,GAE9E,IAAK4I,EAAKgB,QACN,MAAO,GAEX,IAAMK,EAAajL,KAAK0K,QAAQd,EAAKgB,SAErC,MAAM,GAAN,mBAAW5K,KAAKkL,WAAWtB,EAAKgB,UAAhC,CAA0CK,EAAWhD,SAAU/I,QAAQ0K,O,uCAEnDR,EAAqB+B,GAAyB,IAAD,OACjE,OAAO/B,EAAKtI,KAAI,SAAA8I,GACZ,IAAMnH,EAAKmH,EAAKnH,IAAM,EAAK2I,SACrB9B,EAAMM,EAAKN,IACXrB,EAAW2B,EAAK3B,UAAY,GAC5B2C,EAAUO,GAAiBvB,EAAKgB,SAAW,WAE7CS,EAAQ,GAGRvJ,EAAewH,KACf+B,EAAQ,EAAKD,OAAO,EAAKhC,MAEzB,EAAKA,KAAKiC,GAAS/B,GAKvB,IAAMgC,EAAwB,2BACvB1B,GADuB,IAE1BN,MACArB,SAAU,EAAKsD,iBAAiBtD,EAAUxF,GAC1CmI,UACAY,YAjBc,GAkBdH,QACA3F,MAAOkE,EAAKlE,OAAS,GACrBnG,GAAI,KACJkD,OAGJ,OADA,EAAKgJ,QAAQhJ,EAAI6I,GACVA,O,iCAGGlC,EAAqBsC,EAAqBd,GAAuC,IAAD,OACxFe,EAAW3L,KAAKuL,iBAAiBnC,EAAMwB,GAiB7C,OAfAe,EAASxL,SAAQ,SAACyJ,EAAMlI,GACpB,IACMuG,EADY,EAAKyC,QAAQE,GAAWhB,EAAKgB,SACpB3C,SAEvByD,GAAe,GACfzD,EAAS2D,OAAOF,EAAchK,EAAG,EAAGkI,GACpCA,EAAKiB,MAAQa,EAAchK,Gd1Gf,kBc2GIkI,EAAKiB,MACrB5C,EAAS2D,OAAOhC,EAAKiB,MAAO,EAAGjB,IAE/BA,EAAKiB,MAAQ5C,EAASzG,OACtByG,EAASX,KAAKsC,OAIf,IAAIiC,SAAQ,SAAAC,GACf,EAAKtF,aAAY,WACb,IAAMP,EAAQ0F,EAAS7K,KAAI,SAASiL,EAAgBnC,GAChD,IAAMnH,EAAKmH,EAAKnH,GAEVzB,EAASgL,SAASC,cAAT,WfvOE,wBeuOF,aAAkExJ,EAAlE,OACThB,EAAQmI,EAAKnI,OAAS,GAI5B,IAAK,IAAMrB,KAFXwJ,EAAKrK,GAAKyB,EAESS,EACfT,EAAOkL,aAAa9L,EAAMqB,EAAMrB,IAEpCwJ,EAAKnI,MAAQH,EAAcN,GAC3B,IAAMiH,EAAW2B,EAAK3B,UAAY,GAiBlC,OAfIA,EAASzG,OACTyG,EAAS9H,QAAQ4L,GACVnC,EAAKnI,MAAOqD,gBACf,cAAe8E,EACd5I,EAAuBmJ,UAAYP,EAAKO,WAAa,GAEtDP,EAAKO,UAAanJ,EAAuBmJ,WAAa,GAElDP,EAAK4B,cACT,cAAe5B,EACf5I,EAAOqJ,UAAYT,EAAKS,WAAa,GAErCT,EAAKS,UAAYrJ,EAAOqJ,WAAa,IAGtC,eAAKT,MAEhBkC,EAAQ,CACJK,MAAOlG,Y,+BAKPxD,GACZ,IAAMqI,EAAU9K,KAAKkL,WAAWzI,GAC1BjB,EAASsJ,EAAQtJ,OACvB,OAAOA,EAASsJ,EAAQtJ,EAAS,IAAM,I,kCAExB+H,GAAgB,IAAD,OAC9B,OAAOA,EAAIzI,KAAI,SAAA2B,GAAE,OAAI,EAAK2J,WAAW3J,MAAKuG,QAAO,SAAAzJ,GAAE,OAAIA,O,yCAEjC0I,EAAyBoE,GAAmC,IAAD,OAC3E9C,EAAMvJ,KAAKuJ,IAEjB,OAAOtB,EAASqE,MAAM,GAAGxL,KAAI,SAAA8I,GACzB,IAAM5I,EAAS4I,EAAKrK,GAChB4K,EAAY,GACZE,EAAY,GAQhB,GANIT,EAAKnI,MAAOqD,gBACZqF,EAAanJ,EAAuBmJ,UAEpCE,EAAYrJ,EAAOqJ,WAGlBgC,EAAS,CACV,IAAMpB,EAAa,EAAKP,QAAQd,EAAKgB,SAE/BC,EADiBI,EAAWhD,SACL/I,QAAQ0K,GACrCqB,EAAWhD,SAAU2D,OAAOf,EAAO,GAEvC,IAAMhB,EAAe,EAAK0C,mBAAmB3C,EAAK3B,UAAW,GAK7D,cAHOsB,EAAIK,EAAKnH,WACTmH,EAAKrK,GAEL,2BACAqK,GADP,IAEIO,YACAE,YACA5I,MAAOH,EAAcN,GACrBiH,SAAU4B,S,oCAID2C,GAAiE,IAAD,OAC3EC,EAAkBzM,KAAK0M,iBAAiBF,GAAS1L,KAAI,SAAAE,GACvD,OAAO,EAAKgK,iBAAiBhK,MAC9BgI,QAAO,SAAAY,GAAI,OAAIA,KACZkB,EAAU2B,EAAgB3L,KAAI,SAAA8I,GAAI,OAAI,EAAK+C,SAAS/C,EAAKnH,OACzDmK,EAAU5M,KAAKuM,mBAAmBE,GAKxC,OAHAG,EAAQzM,SAAQ,SAACyJ,EAAMlI,GACnBkI,EAAKiB,MAAQC,EAAQpJ,MAElB,IAAImK,SAAQ,SAAAC,GACf,EAAKtF,aAAY,WACbsF,EAAQ,CACJc,oB,2CAKYJ,GAA+D,IAAD,OAChFK,EAAcL,EAAQ1L,KAAI,SAAAE,GAC5B,OAAI8L,MAAMvC,QAAQvJ,GACPA,EAEJ,EAAKkK,WAAWlK,MAiB3B,OAdA6L,EAAYE,MAAK,SAACC,EAAGC,GAKjB,IAJA,IAAMC,EAAUF,EAAExL,OACZ2L,EAAUF,EAAEzL,OACZA,EAASf,KAAKF,IAAI2M,EAASC,GAExBzL,EAAI,EAAGA,EAAIF,IAAUE,EAC1B,GAAIsL,EAAEtL,KAAOuL,EAAEvL,GAGf,OAAOsL,EAAEtL,GAAKuL,EAAEvL,GAEpB,OAAOwL,EAAUC,KAGdN,I,uCAEaL,GACpB,OAAOxM,KAAKoN,eAAeZ,GAAS1L,KAAI,SAAA8I,GAAI,OAAIA,EAAKrK,Q,qCAEnCiN,GAAoD,IAAD,OAGrE,OAFoBxM,KAAKqN,qBAAqBb,GAE3B1L,KAAI,SAAAgK,GAAO,OAAI,EAAKwC,iBAAiBxC,Q,iCAE1C9J,GACd,IAIIuM,EdhQ2B5L,Ec4PzBiI,EAAOG,YAAS/I,GAAUhB,KAAK0K,QAAQ1J,GAAWhB,KAAKgL,iBAAiBhK,GAExEwM,EAAWxN,KAAKyN,YAAY7D,EAAKnH,IAKnC8K,GADCC,GAAY5L,EAAgB4L,EAASlE,MdjQvCxH,EAD4BH,EckQ0C6L,EAASlE,MdjQtDzH,qBAAWF,EAAM0F,MckQjC,GAEA,CAACuC,GAEb,IAAM8D,EAAWF,GAAYxN,KAAK2N,iBAAiBH,EAAS/K,IAC5D,OAAOzC,KAAK4N,KAAKL,EAAOC,EAAUE,K,kCAEnB1M,GACf,IAAM4I,EAAOG,YAAS/I,GAAUhB,KAAK0K,QAAQ1J,GAAWhB,KAAKgL,iBAAiBhK,GACxEiK,EAAajL,KAAK0K,QAAQd,EAAKgB,SAC/BiD,EAAW7N,KAAK0K,QAAQO,EAAWL,SAEnC2C,EAAQM,EAAW,CAACjE,GAAQ,GAElC,OAAO5J,KAAK4N,KAAKL,EAAOM,EAAU5C,K,4BAEzB6C,GAAiH,IAAD,OACnHC,EAAYD,EAAUhN,KAAI,YAAe,IAAZ8I,EAAW,EAAXA,KAC/B,MAAO,CACHA,OACAqB,WAAY,EAAKP,QAAQd,EAAKgB,SAC9B4C,SAAU,EAAKC,YAAY7D,EAAKnH,QAGxCqL,EAAU3N,SAAQ,YAAqC,IAAlCyJ,EAAiC,EAAjCA,KAAMqB,EAA2B,EAA3BA,WAAYuC,EAAe,EAAfA,SAC7BvF,EAAW,EAAKyC,QAAQd,EAAKgB,SAAU3C,SAE7CA,EAAS2D,OAAO3D,EAAS/I,QAAQ0K,GAAO,GAGxC,IAAMoE,EAAiB/C,EAAWhD,SAClC+F,EAAepC,OAAO4B,EAAWQ,EAAe9O,QAAQsO,GAAY,EAAI,EAAG,EAAG5D,GAE9EA,EAAKgB,QAAUK,EAAWxI,MAG9B,IAAMwD,EAAQ6H,EAAUhN,KAAI,qBAAG8I,QAE/B,OAAO,IAAIiC,SAAQ,SAAAC,GACf,EAAKtF,aAAY,WACbP,EAAM9F,SAAQ,SAAS8N,EAASrE,GAC5B,IAAMnH,EAAKmH,EAAKnH,GACVzB,EAASgL,SAASC,cAAT,WfvZE,wBeuZF,aAAkExJ,EAAlE,OAEfmH,EAAKrK,GAAKyB,EAEV4I,EAAK3B,SAAU9H,QAAQ8N,MAE3BnC,EAAQ,CACJyB,MAAOtH,EACP8H,YACAD,sB,2BAKJ7H,EAAsBgF,EAAyBuC,GACvD,IAAMU,EAAclO,KAAKoN,eAAenH,EAAMnF,KAAI,SAAA8I,GAAI,OAAIA,EAAKrK,OAE/D,OAAOS,KAAKmO,MAAMD,EAAYpN,KAAI,SAAC8I,EAAMlI,GACrC,MAAO,CACHkI,OACAqB,aACAuC,SAAgB,IAAN9L,EAAU8L,EAAWU,EAAYxM,EAAI,Y,GAxYzBS,iBChCRiM,I,OAD7B1O,G,kNAKmB2O,W,IAETC,UAAkC,G,uDAErC,OACI,uBAAKrL,UAAW9D,EAAO,QACnB,0BAAKa,KAAKqO,OACTrO,KAAKuO,e,+BAIFnO,EAAc4G,GAC1BhH,KAAKsO,UAAUhH,KAAK,CAAClH,EAAM4G,IAC3BhH,KAAKsG,SAASkI,GAAGpO,EAAM4G,K,oCAGvB,OAAOhH,KAAKyO,gBAAgB3L,QAAS4L,gB,6CAGrC,IAAMpI,EAAWtG,KAAKsG,SACtBtG,KAAKsO,UAAUnO,SAAQ,YAAuB,IAAD,mBAApBC,EAAoB,KAAd4G,EAAc,KACzCV,EAASqI,IAAIvO,EAAM4G,U,GAzBW7E,iB,GAGxBM,Q,aCLGmM,I,mNAMVC,MAAQ1M,c,2FAICR,M,0CAGZ,IAAM1B,EAAQD,KAAKC,MAEnBA,EAAM6O,aAAe9O,KAAK+O,SAAS9O,EAAM0B,S,2CAGzC,IAAM1B,EAAQD,KAAKC,MAEnBA,EAAM6O,aAAe9O,KAAK+O,SAAS9O,EAAM0B,W,GApBuCQ,kBCEnE6M,G,4MACPC,gBAAgC,G,EAkBhCC,QAAU,SAACvM,GACjB,IAAMwM,EAAKxM,EAAEyM,aAAezM,EAEvB0M,YAAYF,EAAGG,OAIpB,EAAKrP,MAAMsP,SAAS,EAAKV,MAAM/L,QAASnB,Q,EAGlC6N,UAAY,SAAC7M,GACnBA,EAAEC,mB,EAEI6M,QAAU,SAAC9M,GACjB,IAAM3B,EAAS2B,EAAE+M,cAEjB/M,EAAEC,kBACwB,UAAtB+M,YAAOhN,EAAEiN,UACT,EAAK3P,MAAMsP,SAASvO,EAAOW,Q,uDAlC/B,OACI,uCAAO4B,IAAKvD,KAAK6O,MACb5L,UAAW9D,EAAO,UACda,KAAKiP,gBACLjP,KAAKC,MAAM4P,WAHnB,CAIIX,QAASlP,KAAKkP,QACdM,UAAWxP,KAAKwP,UAChBC,QAASzP,KAAKyP,a,iCAItB,OAAOzP,KAAK6O,MAAM/L,QAASnB,Q,+BAEfA,GACZ3B,KAAK6O,MAAM/L,QAASnB,MAApB,UAA+B0N,YAAY1N,GAAS,GAAKA,O,GAjB5BiN,ICJhBkB,G,4MACPb,gBAAkB,CACxB5H,KAAM,SACN9G,IAAK,EACLwP,KAAM,GACNC,QAAS,W,YALsBhB,ICIlBiB,I,mNAUVpB,MAAQ1M,c,uDACE,IAAD,EAURnC,KAAKC,MARLiQ,EAFQ,EAERA,MACA7I,EAHQ,EAGRA,KAHQ,IAIRpH,aAJQ,MAIA,GAJA,MAKR4P,kBALQ,MAKK,GALL,EAMDM,EANC,EAMRtB,MACAU,EAPQ,EAORA,SACA5N,EARQ,EAQRA,MACAmN,EATQ,EASRA,YAGJ,OAAO,uBAAK7L,UAAW9D,EAAO,YAAakI,IACtC6I,GAAS,0BAAKA,GACf,gBAACC,EAAD,eAAW5M,IAAKvD,KAAK6O,MAAOU,SAAUA,GAC9BtP,EADR,CAEI4P,WAAYA,EAAYlO,MAAOA,EAAOmN,YAAaA,Q,+BAG/CsB,GACZpQ,KAAK6O,MAAM/L,QAASiM,SAASqB,K,iCAG7B,OAAOpQ,KAAK6O,MAAM/L,QAASuN,e,GAlCMlO,kBCCnCmO,I,OAAwB,CAAC,IAAK,GAAI,MAClCC,GAAsB,CAAC,IAAK,GAAI,KACjBC,G,4MACPvB,gBAAgC,G,EACnC5G,MAAQ,CACXoI,OAAQ,CAAC,GAAI,K,EA2BVrO,QAAU,SAACO,GACd,IACMmI,EADSnI,EAAE3B,OACML,aAAa,qBAEpC,GAAKmK,EAAL,CAGA,IAAM2F,EAAS3F,EAAQ4F,MAAM,KAAK5P,KAAI,SAAAsP,GAAC,OAAoB,GAAhBO,WAAWP,MACtD,EAAKnQ,MAAMsP,SAASkB,K,uDAhCpB,IAAMA,EAASzQ,KAAKqI,MAAMoI,OAAO3P,KAAI,SAAAsP,GAAC,OAAI3P,KAAKF,IAAI,IAAKE,KAAKD,IAAI,EAAwB,GAArBC,KAAKmQ,MAAMR,EAAI,SACnF,OACI,uBAAKnN,UAAW9D,EAAO,iBACnB,uBAAK8D,UAAW9D,EAAO,2BAA4BiD,QAASpC,KAAKoC,SAC5DmO,GAAoBzP,KAAI,SAACsP,EAAG1O,GACzB,OAAO4O,GAAsBxP,KAAI,SAAC+P,EAAGC,GACjC,IAAM1R,EAAuB,GAU7B,OATIgR,GACAhR,EAAWkI,KAAX,iBAA0B8I,IAE1BS,GACAzR,EAAWkI,KAAX,iBAA0BuJ,IAE1BJ,EAAO,KAAW,GAAJK,GAAUL,EAAO,KAAW,GAAJ/O,GACtCtC,EAAWkI,KAAX,mBAEG,uBAAKhE,IAAG,aAAQuN,EAAR,YAAaT,GACxBnN,UAAW9D,EAAM,WAAN,GAAO,kBAAP,OAA4BC,IAAa2R,oBAAA,UAAsBD,EAAtB,YAA2BpP,e,+BAiB3F0O,GACZpQ,KAAKuI,SAAS,CACVkI,OAAQL,M,iCAIZ,OAAOpQ,KAAKqI,MAAMoI,W,GA9CU7B,ICF9BiB,GAAa,CACfE,KAAM,GAGWiB,G,4MAEV3C,MAAQ,Y,EACR4C,OAAS9O,c,EACT+O,OAAS/O,c,EACTgP,OAAShP,c,EACTiP,OAASjP,c,EACTkP,OAASlP,c,EACTmP,OAASnP,c,EA6BToP,eAAiB,SAACnB,GACrB,IAAMoB,EAASb,WAAWP,GAC1B,EAAK1B,cAAc+C,QAAQ,YAAa,CAAED,SAAQE,WAAW,K,EAE1DC,YAAc,WACjB,IAAMC,EAAIjB,WAAW,EAAKM,OAAOnO,QAASuN,YACpCwB,EAAIlB,WAAW,EAAKO,OAAOpO,QAASuN,YAE1C,EAAK3B,cAAc+C,QAAQ,YAAa,CAAEG,IAAGC,IAAGH,WAAW,K,EAExDI,eAAiB,SAACrB,GACrB,IACMsB,EADW,EAAKrD,cACAsD,UAEhBC,EAAKF,EAAKG,YAAczB,EAAO,GAAK,IACpC0B,EAAKJ,EAAKK,aAAe3B,EAAO,GAAK,IAC3C,EAAK/B,cAAc+C,QAAQ,kBAAmB,CAAEhB,OAAQ,CAACwB,EAAIE,KAAO,I,EAEjEE,aAAe,WAClB,IAAMC,EAAQ3B,WAAW,EAAKQ,OAAOrO,QAASuN,YACxCkC,EAAS5B,WAAW,EAAKS,OAAOtO,QAASuN,YAE/C,EAAK3B,cAAc+C,QAAQ,YAAa,CAAES,YAAaI,EAAOF,aAAcG,EAAQb,WAAW,K,EAE5Fc,SAAW,WACd,IAEMT,EAFW,EAAKrD,cAEAsD,UAEtB,EAAKf,OAAOnO,QAASiM,SAASgD,EAAKU,MACnC,EAAKvB,OAAOpO,QAASiM,SAASgD,EAAKW,KACnC,EAAKvB,OAAOrO,QAASiM,SAASgD,EAAKG,aACnC,EAAKd,OAAOtO,QAASiM,SAASgD,EAAKK,cACnC,EAAKd,OAAOxO,QAASiM,SAAStO,KAAKmQ,MAAMmB,EAAKY,WAE9C,IAAMlC,EAASsB,EAAKtN,gBAEpB,EAAK4M,OAAOvO,QAASiM,SAAS,CAC1B0B,EAAO,GAAKsB,EAAKG,YAAc,IAC/BzB,EAAO,GAAKsB,EAAKK,aAAe,O,0DAjEpC,OAAO,uBAAKnP,UAAW9D,EAAO,kBAC1B,uBAAK8D,UAAW9D,EAAO,aACnB,gBAAC,GAAD,CAAaoE,IAAKvD,KAAKqR,OACnBhK,KAAM,OAAQ6I,MAAM,SAASrB,MAAO2B,GAAQjB,SAAUvP,KAAK8R,iBAC/D,gBAAC,GAAD,CAAavO,IAAKvD,KAAKsR,OACnBjK,KAAM,OAAQ6I,MAAM,WAAWrB,MAAOiB,GAAWP,SAAUvP,KAAKuR,kBAExE,uBAAKtO,UAAW9D,EAAO,aACnB,gBAAC,GAAD,CAAaoE,IAAKvD,KAAKiR,OAAQ5J,KAAM,OAAQ6I,MAAM,IAAIrB,MAAOiB,GAAWP,SAAUvP,KAAK2R,cACxF,gBAAC,GAAD,CAAapO,IAAKvD,KAAKkR,OAAQ7J,KAAM,OAAQ6I,MAAM,IAAIrB,MAAOiB,GAAWP,SAAUvP,KAAK2R,eAE5F,uBAAK1O,UAAW9D,EAAO,aACnB,gBAAC,GAAD,CAAaoE,IAAKvD,KAAKmR,OAAQ9J,KAAM,OACjC6I,MAAM,IAAIrB,MAAOiB,GAAWD,WAAYA,GAAYN,SAAUvP,KAAKqS,eACvE,gBAAC,GAAD,CAAa9O,IAAKvD,KAAKoR,OAAQ/J,KAAM,OACjC6I,MAAM,IAAIrB,MAAOiB,GAAWD,WAAYA,GAAYN,SAAUvP,KAAKqS,mB,0CAK/ErS,KAAK4S,SAAS,SAAU5S,KAAKwS,UAC7BxS,KAAK4S,SAAS,cAAe5S,KAAKwS,UAClCxS,KAAK4S,SAAS,qBAAsB5S,KAAKwS,UAEzCxS,KAAKwS,e,GAnC6BpE,IAArB4C,GACHvO,GAAK,Y,mBCKvB,SAASoQ,GAAe7R,GACpB,KAAOA,IACCA,EAAOK,aAAa,kBAGxBL,EAASA,EAAOvB,cAEpB,OAAOuB,E,IAEU8R,G,4MAyBVC,iB,IACAC,UAAY7Q,c,EACZ8Q,UAAY9Q,c,EACZkG,MAGH,CACI6K,MAAM,EACNC,QAAS,I,EAiHTC,YAAc,SAACzQ,GACnBA,EAAEC,kBACF,EAAK2F,SAAS,CACV2K,MAAO,EAAK7K,MAAM6K,Q,EAGlB9Q,QAAU,YAA6B,IACrCkB,EADoC,EAAzBoM,cACS/O,aAAa,iBADG,EAMtC,EAAKV,MAHLoT,EAHsC,EAGtCA,YACA9Q,EAJsC,EAItCA,SACAF,EALsC,EAKtCA,SAEJ,GAAIgR,EAAa,CACb,IAAIC,GAAgBjR,GAAY,IAAIiK,QAC9BzB,EAAQyI,EAAapU,QAAQoE,GAE/BuD,IAAc0M,OAAO3L,SACjBiD,GAAS,EACTyI,EAAa1H,OAAOf,EAAO,GAE3ByI,EAAahM,KAAKhE,GAGtBgQ,EAAe,CAAChQ,GAEpBf,EAAU+Q,QAEV/Q,EAAU,CAACe,K,EAGXkQ,YAAc,SAAC7Q,GACnB,GAAI8Q,YAAS9Q,EAAE4E,WAAWvG,OAAQ7B,EAAO,cACrC,OAAO,EAEX,IACM4S,EADgB,EAAKiB,UAAUlQ,QACV4Q,wBACrBC,EAAQhR,EAAEgR,MACVC,EAAUjR,EAAEkR,QAAU9B,EAAKU,KAGjCkB,EAAMC,QAAUA,EAChBD,EAAMG,WAAa/B,EACnB4B,EAAMI,WAAahC,EAAKU,KAAOV,EAAKO,MAAQ,GAE5C3P,EAAE4E,WAAWyM,iBACbrR,EAAE4E,WAAW3E,mB,EAGTqR,OAAS,SAACtR,GACd,IAAMuR,EAAgB,EAAKlB,UAAUlQ,QAC7B+Q,EAA4BlR,EAA5BkR,QAASM,EAAmBxR,EAAnBwR,QAASR,EAAUhR,EAAVgR,MAE1B,EAAKS,gBACLT,EAAMnG,SAAW,KACjBmG,EAAMU,OAAQ,EACd,IAAMhS,EAAW,EAAKpC,MAAMoC,SACtBiS,EAAS,EAAKC,UAGpB,IAAKZ,EAAMa,UAAW,CAClBb,EAAMa,WAAY,EAClB,IAAMC,EAA6B5B,GAAelQ,EAAE4E,WAAWvG,QAE/D,GAAIyT,IAAqF,IAApEpS,EAASnD,QAAQuV,EAAc9T,aAAa,kBAE7D,YADA,EAAKyB,QAAQ,CAAEsN,cAAe+E,IAItC,GAAKpS,EAASb,OAAd,CAGA,IAAMkT,EAAYrS,EAASvB,KAAI,SAAA2B,GAAE,OAAI6R,EAAO7R,MAE5C,GAAK,EAAK4F,MAAM8K,QAAQ3R,OAAxB,CASI,EAAKmT,qBAAqBhB,EAAMG,WAAYnR,GAEhD,IAAI3B,EAAS6R,GAAe7G,SAAS4I,iBAAiBjB,EAAMI,WAAYpR,EAAEwR,UAE1E,GAAKnT,EAAL,CAGA,IAAMiF,EAAQ,EAAK4O,eACf9C,EAAO/Q,EAAO0S,wBACdW,EAAQtC,EAAKW,IAAMX,EAAKQ,OAAS,EAAI4B,EAErC7Q,EAAMtC,EAAOL,aAAa,iBAC1BmU,EAAeC,YAAU9O,GAAO,SAAA2D,GAAI,OAAIA,EAAKoL,SAAW1R,KACxD2R,EAAahP,EAAM6O,GACnBtH,EAAWvH,EAAM6O,EAAe,GAEpC,GAAItH,GAAY6G,EAAO,CAOnB,GALAY,EAAahP,IADX6O,GAEFtH,EAAWvH,EAAM6O,EAAe,GAChCxR,EAAM2R,EAAWD,SACjBhU,EAASkT,EAAcjI,cAAd,0BAA4D3I,EAA5D,QAGL,OAEJyO,EAAO/Q,EAAO0S,wBACdW,GAAQ,EAEZ,IAAMa,EAAWjP,EAAM6O,EAAe,GAChCK,EAAcF,EAAWG,MACzBC,EAAYH,EAAWA,EAASE,MAAQ,EACxCE,EAAa,CACf7U,KAAKF,IAAI8U,EAAWF,GAAeA,EACnC1U,KAAKD,IAAI2U,EAAc,EAAGE,GAAaF,GAEvCI,EAAQ1B,EAAU9B,EAAKU,KACrB+C,EAAYnB,EAAQ,EACpBhU,EAAQI,KAAKmQ,OAAO2E,EAAQ,EAAY,GAARA,EAAcA,GAAS,IAAKD,EAAW,GAAIA,EAAW,IAExFJ,IAAab,GAAShS,EAASnD,QAAQgW,EAASF,SAAW,GAAKG,EAAcK,IAAcH,GAG5F,EAAKI,SAASpT,EAAUiB,IAGxBjB,EAASnD,QAAQoE,IAAQ,GAAKkS,GAAa,GAG3CA,EAAY,IAAM,EAAKvV,MAAMyV,UAAWT,KAG5CjU,EAAO+B,MAAM4S,YAAY,kBAAzB,UAA+CH,IAC/CxU,EAAO4U,UAAUC,IAAI1W,EAAOkV,EAAQ,cAAgB,mBAGpDV,EAAMyB,MAAQI,EACd7B,EAAMU,MAAQA,EACdV,EAAMnG,SAAWyH,SAlEb,EAAK1M,SAAS,CACV4K,QAASuB,IACV,WAEC,EAAKC,qBAAqBhB,EAAMG,WAAYnR,Q,EAgEhDmT,UAAY,SAACnT,GAGjB,GAFA,EAAKyR,gBAEAzR,EAAEoT,OAAP,CAMA,IAOI9K,EAPE0I,EAAQhR,EAAEgR,MACVyB,EAAQzB,EAAMyB,MAChB5H,EAAoCmG,EAAMnG,SACxC6G,EAAQV,EAAMU,MACd2B,EAAS,EAAK/V,MAAM+V,OACpB1B,EAAS,EAAKC,UAIpB,GAAI/G,EACA,GAAI4H,GAAS,EAAG,CAGZ,IAFA,IAAM5T,EAASf,KAAKwV,IAAIb,GAEf1T,EAAI,EAAGA,EAAIF,IAAUE,EAC1B8L,EAAW8G,EAAO9G,EAAU0I,UAEhCjL,EAAaqJ,EAAO9G,EAAS0I,eAE7BjL,EAAauC,EACbA,OAAW2I,GAIdlL,GAAcoJ,EACf2B,KACO/K,GAAcuC,IACrBwI,EAAQ/K,EAAYuC,GAExB,EAAKjF,SAAS,CACV4K,QAAS,KACV,WACC,EAAKF,UAAUnQ,QAASC,MAAMqT,QAAU,uBArC5C,CACI,IAAM1G,EAAgBmD,GAAelQ,EAAE4E,WAAWvG,QAElD,EAAKoB,QAAQ,CAAEsN,oB,yDApQLpM,GACd,IAAMjB,EAAWrC,KAAKC,MAAMoC,SAE5B,OAAOA,GAAYA,EAASnD,QAAQoE,IAAQ,I,+BAE/B,IAAD,EAKRtD,KAAKC,MAHLoW,EAFQ,EAERA,MACAjW,EAHQ,EAGRA,KACAkW,EAJQ,EAIRA,UAGEtB,EAASqB,EAAM7U,OAAS8U,EAAWD,EAAMA,EAAM7U,OAAS,GAAI6U,EAAM/J,OAAO,IAAM,GACrF,OAAO,uBAAKrJ,UAAW9D,EAAO,UAAWoE,IAAKvD,KAAKgT,WAC9C5S,GAAQ,uBAAK6C,UAAW9D,EAAO,YAAa,OAAQ,OAAQa,KAAKuW,WAAWvB,GAAU,WAAa,IAChGwB,gBAAexB,EAAQ5S,QAASpC,KAAKoC,SACrC,uBAAKa,UAAW9D,EAAO,YAAaa,KAAKqI,MAAM6K,KAAO,OAAS,IAAK9Q,QAASpC,KAAKoT,cAClF,0BAAMhT,IAEV,uBAAK6C,UAAW9D,EAAO,eAClBa,KAAKyW,oBAETzW,KAAK0W,mB,0CAIV,GAAI1W,KAAKC,MAAM0W,OAAQ,CACnB,IAAMzC,EAAgBlU,KAAKgT,UAAUlQ,QACrC9C,KAAK+S,YAAc,IAAI6D,KAAQ1C,EAAe,CAC1C2C,UAAWC,OACXC,UAAW/W,KAAKwT,YAChBwD,KAAMhX,KAAKiU,OACXgD,QAASjX,KAAK8V,e,6CAKlB9V,KAAK+S,aACL/S,KAAK+S,YAAYmE,U,yCAGG,IAAD,SAanBlX,KAAKC,MAXLoW,EAFmB,EAEnBA,MACAc,EAHmB,EAGnBA,WACA9U,EAJmB,EAInBA,SACAgR,EALmB,EAKnBA,YACA9Q,EANmB,EAMnBA,SACA+T,EAPmB,EAOnBA,UACAc,EARmB,EAQnBA,cACAT,EATmB,EASnBA,OACAjW,EAVmB,EAUnBA,MACA2W,EAXmB,EAWnBA,QACAC,EAZmB,EAYnBA,YAGJ,IAAItX,KAAKqI,MAAM6K,KAKf,OAFarT,OAAOoC,KAAKkV,GAEbrW,KAAI,SAAAwC,GACZ,IAAM3B,EAASwV,EAAmB7T,GAC5BlD,EAAOiX,EAAS1V,EAAO2B,GACvBiU,EAAYlB,EAAM/J,QAClB7J,EAAK/B,EAAOiB,EAAO2B,GACnB0R,EAASsB,EAAW7T,EAAI8U,GAC9BA,EAAUjQ,KAAK7E,GAEf,IAAMwF,EAAWqP,EAAa3V,EAAO2B,GAErC,OAAI2E,IAAasC,YAAQtC,GAAYA,EAASzG,OAASO,YAASkG,IACrD,gBAAC6K,EAAD,CAAWxP,IAAK0R,EACnB5U,KAAMA,EAAMiW,MAAOkB,EAAWJ,WAAYlP,EAC1CoL,YAAaA,EACb3S,MAAOA,EACP2W,QAASA,EACTf,UAAWA,EACXgB,YAAaA,EACbjV,SAAUA,EAAUE,SAAUoU,OAASR,EAAY5T,EAAU6U,cAAeA,IAE7E,uBAAK9T,IAAK0R,EAAQ/R,UAAW9D,EAAO,OAAQ,EAAKoX,WAAWvB,GAAU,WAAa,IACtFwB,gBAAexB,EAAQ5S,QAASuU,OAASR,EAAY,EAAK/T,SAC1D,gBAACgV,EAAD,CAAef,MAAOkB,EAAWnX,KAAMA,EAAMuB,MAAOA,EAAOqT,OAAQA,U,sCAItD,IAAD,EAKhBhV,KAAKC,MAHLmX,EAFgB,EAEhBA,cACAC,EAHgB,EAGhBA,QAGJ,IANoB,EAIhBhB,MAEM7U,OAGV,OAAO,uBAAKyB,UAAW9D,EAAO,WAAYoE,IAAKvD,KAAKiT,WAC/CjT,KAAKqI,MAAM8K,QAAQrS,KAAI,SAAA8I,GAAS,IAElB4N,EAIP5N,EAJAyM,MACA1U,EAGAiI,EAHAjI,MACAqT,EAEApL,EAFAoL,OACAvS,EACAmH,EADAnH,GAEErC,EAAOiX,EAAS1V,EAAOc,GAC7B,OAAO,uBAAKa,IAAK0R,EAAQ/R,UAAW9D,EAAO,OAAQ,WAAY,WAC3D,gBAACiY,EAAD,CAAef,MAAOmB,EAAWpX,KAAMA,EAAMuB,MAAOA,EAAOqT,OAAQA,W,2CA+LtDjD,EAAkBpP,GAC3C,IAAMpD,EAAKS,KAAKiT,UAAUnQ,QAE1B,GAAKvD,GAAOS,KAAKqI,MAAM8K,QAAQ3R,OAA/B,CAGA,IAAMmS,EAAQhR,EAAEgR,MAChBpU,EAAGwD,MAAMqT,QAAT,+CAC8CzT,EAAEkR,QAAU9B,EAAKU,KAAOkB,EAAMC,QAD5E,eAC0FjR,EAAEwR,QAAUpC,EAAKW,IAD3G,2B,+BAGanJ,EAAejG,GAAgD,IAAnCgR,EAAkC,uDAAzBtU,KAAKuU,UACjD3K,EAAO0K,EAAOhR,GACd4S,EAAWtM,EAAKsM,SAEtB,QAAKA,IAGD3M,EAAIrK,QAAQgX,IAAa,GAGtBlW,KAAKyV,SAASlM,EAAK2M,EAAU5B,M,gCAGpC,IAAMrM,EAAWjI,KAAK6U,eAChBP,EAA+B,GAKrC,OAJArM,EAAS9H,SAAQ,SAAAyJ,GACb0K,EAAO1K,EAAKoL,QAAUpL,KAGnB0K,I,qCAOR,IAAD,OAJE6C,EAIF,uDAJenX,KAAKC,MAAMkX,WACxBjB,EAGF,uDAHqB,GACnBG,EAEF,uDAFoB,GAClBpO,EACF,uDAD4B,GAEpBhG,EAAOpC,OAAOoC,KAAKkV,GAD3B,EAMMnX,KAAKC,MAHLqW,EAHN,EAGMA,UACA5V,EAJN,EAIMA,MACA4W,EALN,EAKMA,YAEElC,EAAQiB,EAAM7U,OAuBpB,OAtBAS,EAAK9B,SAAQ,SAAAmD,GACT,IAAM3B,EAASwV,EAAmB7T,GAC5BiU,EAAYlB,EAAM/J,QAClB7J,EAAK/B,EAAOiB,EAAO2B,GACnB0R,EAASsB,EAAW7T,EAAI8U,GAC9BA,EAAUjQ,KAAK7E,GAEf,IAAMgV,EAAgBH,EAAa3V,EAAO2B,GAE1C2E,EAASX,KAAK,CACV7E,KACAuS,SACAkB,WACAd,QACAiB,QACA1U,UAEA8V,IAAkBlN,YAAQkN,GAAiBA,EAAcjW,OAASO,YAAS0V,KAC3E,EAAK5C,aAAa4C,EAAezC,EAAQuC,EAAWtP,MAIrDA,I,sCAGP,GAAGqE,MAAMoL,KAAK1L,SAAS2L,iBAA8B,8CAA8CxX,SAAQ,SAACZ,GACxG,IAAMqW,EAAYrW,EAAGqW,UAErBA,EAAUgC,OAAOzY,EAAO,gBACxByW,EAAUgC,OAAOzY,EAAO,0B,GArZSgD,iBAAxB2Q,GAgBH+E,aAAe,CACzB7B,OAAQ,aACRN,UAAW,kBAAM,GACjBnT,SAAU,aACV+T,UAAW,SAAC7T,EAAY4T,GAAb,MAAiC,sBAAIA,GAAJ,CAAW5T,IAAIiF,KAAK,QAChEhH,MAAO,SAACoX,EAAQrV,EAAS4T,GAAlB,OAAsC5T,GAC7C4U,QAAS,SAACS,EAAQrV,GAAT,OAAqBA,GAC9B6U,YAAa,SAAC3V,GAAD,OAAgBA,I,IC9ChBoW,G,uKAIA,IAAD,EAIR/X,KAAKC,MAFLiQ,EAFQ,EAERA,MACA7I,EAHQ,EAGRA,KAGJ,OAAO,uBAAKpE,UAAW9D,EAAO,YAAakI,IACvC,0BAAK6I,Q,GAXqB/N,iBCAjB6V,G,4HAAqB7V,iBCIrB8V,G,4MAcV1I,SAAW,SAACa,GAAY,IAAD,EAItB,EAAKnQ,OAETsP,EAN0B,EAEtBA,UAFsB,EAGtB8G,MAGYjG,I,uDAjBH,IAAD,EAIRpQ,KAAKC,MAFLG,EAFQ,EAERA,KACAuB,EAHQ,EAGRA,MAEJ,OAAO,gCAAE,gBAAC,GAAD,CAAU0F,KAAM,QAAS6I,MAAO9P,IACrC,gBAAC,GAAD,CAAaiH,KAAM,WAAYwH,MAAOG,GAASrN,MAAOA,EAClDmN,aAAa,EACbS,SAAUvP,KAAKuP,gB,GAXOyI,ICCjBE,I,mNAEV7J,MAAQ,Q,EACRhG,MAEH,CACAhG,SAAU,M,EAqBN8V,eAAiB,YAAoD,IAAjD/X,EAAgD,EAAhDA,KAAM4U,EAA0C,EAA1CA,OAAQqB,EAAkC,EAAlCA,MAAO1U,EAA2B,EAA3BA,MAC7C,OAAO,gBAAC,GAAD,CAAUvB,KAAMA,EAAM4U,OAAQA,EAAQqB,MAAOA,EAAO1U,MAAOA,EAAO4N,SAAU,EAAKA,Y,EAEpFhN,SAAW,SAACF,GAChB,EAAKkG,SAAS,CACVlG,c,EAGAkN,SAAW,SAAC8G,EAAiB1U,GAClB,EAAKgE,aAAaC,oBAErBpE,QAGZ,EAAKtB,OAAOyV,YAAYU,EAAO1U,GAAO,I,EAElC6Q,SAAW,WACf,EAAKhM,e,EAED4R,WAAa,WACH,EAAK/P,MAEbhG,SAAW,KACjB,EAAKmE,e,0DA1CW,IAEZnE,EACArC,KAAKqI,MADLhG,SAGEqD,EAAQ1F,KAAK2F,aAAaC,oBAAoB,GAEpD,GAAKF,EAGL,OAAO,uBAAKzC,UAAW9D,EAAO,cAC1B,gBAAC,GAAD,CAAQiB,KAAK,GAAG+W,WAAYzR,EAAM3F,MAAOsW,MAAO,GAAIhU,SAAUA,EAC1DE,SAAUvC,KAAKuC,SAAU6U,cAAepX,KAAKmY,oB,0CAIrDnY,KAAK4S,SAAS,SAAU5S,KAAKwS,UAC7BxS,KAAK4S,SAAS,qBAAsB5S,KAAKoY,gB,GAzBXhK,KAAjB8J,GACHzV,GAAK,Q,WCNF4V,G,4MAiBVjW,QAAU,WAAO,IAAD,EAKf,EAAKnC,MAHLoH,EAFe,EAEfA,KACAiR,EAHe,EAGfA,WAGJlW,EANmB,EAIfA,SAEIiF,EAAMiR,I,uDAlBD,IAAD,EAIRtY,KAAKC,MAFLoH,EAFQ,EAERA,KACAiR,EAHQ,EAGRA,UAEJ,OAAO,uBAAKrV,UAAW9D,EAAO,QAAD,gBAAmBkI,GAAnB,gBAAoCiR,IAC7DlW,QAASpC,KAAKoC,SACd,uBAAKa,UAAW9D,EAAO,gBACvB,uBAAK8D,UAAW9D,EAAO,oBACvB,uBAAK8D,UAAW9D,EAAO,yB,GAdAgD,iBCI7BoW,GAAQ,CAAC,WAAY,cACrBC,GAAa,CAAC,QAAS,SAAU,OAGvC,SAASC,GACLpR,EAAiCiR,EAAuCvG,GACxE,IAAI2G,EACAC,EAQJ,MAPa,eAATtR,GACAqR,EAAO3G,EAAKQ,OACZoG,EAAQ5G,EAAKW,MAEbgG,EAAO3G,EAAKO,MACZqG,EAAQ5G,EAAKU,MAEC,UAAd6F,EACOK,EAEO,WAAdL,EACOK,EAAQD,EAAO,EAEnBC,EAAQD,E,IAEEE,G,4MAEVvK,MAAQ,Q,EAWRjM,QAAU,SAACiF,EAAiCiR,GAC/C,IAAMO,EAAW,EAAKnK,cAEtB,GAAKmK,EAASA,SAAd,CAGA,IAAMC,EAAaD,EAASA,SAA2BC,UACjD/G,EAAO8G,EAAS7G,UAChB+G,EAAMN,GAAgBpR,EAAMiR,EAAWvG,GAE7C,GAAI+G,EAAW,CAEX,IAAM7S,EAAQ6S,EAAUhY,KAAI,SAAAmI,GACxB,IAAMjI,EAASiI,EAAEZ,MAAMrH,OACjB0E,EAAQ,EAAKC,aAAaqT,SAAShY,GAEzC,GAAI0E,EAAO,CACP,IAAMuT,EAAOvT,EAAM3F,MACbmZ,EAAUjQ,EAAE+I,UACZmH,EAASV,GAAgBpR,EAAMiR,EAAWY,GAC1CE,EAAQL,EAAMI,EAEdE,EAAY3T,EAAM3F,IAAI,YAAa,aAAa2Q,MAAM,KAAK5P,KAAI,SAACsP,GAAD,OAAeO,WAAWP,MAO/F,OAJAiJ,EAAmB,eAAThS,EAAwB,EAAI,IAAM+R,EAE5C1T,EAAMW,IAAI,YAAa,YAAagT,EAAUvY,KAAI,SAACwY,GAAD,gBAAkBA,EAAlB,SAAyB5R,KAAK,OAEzE,CAAEjF,GAAI/B,EAAMM,GAASiY,OAAMM,KAAM7T,EAAM3F,OAElD,OAAO,KACRiJ,QAAO,SAAAhI,GAAM,OAAIA,KAGpB,EAAKmF,eAAeC,UAAU,UAAW,CACrCH,UAEJ,EAAKN,aAAa6T,eAClBX,EAASY,iBACN,CACH,IAMMC,EAAcjB,GAAgBpR,EAAMiR,EANrB,CACjBhG,MAAO,IACPC,OAAQ,IACRE,KAAM,EACNC,IAAK,IAGH0G,EAAQL,EAAMW,EAEpBb,EAASpH,QAAQ,YAAjB,gBAA0C,eAATpK,EAAwB,SAAW,UAAY+R,IAAS,M,0DA5D7E,IAAD,OACf,OAAO,uBAAKnW,UAAW9D,EAAO,cACzBoZ,GAAMzX,KAAI,SAAAuG,GACP,OAAOmR,GAAW1X,KAAI,SAAAwX,GAClB,OAAO,gBAAC,GAAD,CAAOhV,IAAG,UAAK+D,EAAL,YAAaiR,GAC1BjR,KAAMA,EAAMiR,UAAWA,EAAWlW,QAAS,EAAKA,qB,GARlCgM,IAAjBwK,GACHnW,GAAK,Q,IC3BFkX,G,uKACA,IAETvZ,EACAJ,KAAKC,MADLG,KAEJ,OAAO,gCAAE,gBAAC,GAAD,CAAUiH,KAAM,OAAQ6I,MAAO9P,S,GALb4X,ICKd4B,G,4MAEVvL,MAAQ,S,EAqBRwL,WAAa,YAAoD,IAAjDzZ,EAAgD,EAAhDA,KAAM4U,EAA0C,EAA1CA,OAAQqB,EAAkC,EAAlCA,MAAO1U,EAA2B,EAA3BA,MACxC,OAAO,gBAAC,GAAD,CAAOvB,KAAMA,EAAM4U,OAAQA,EAAQqB,MAAOA,EAAO1U,MAAOA,K,EAM3DY,SAAW,SAACF,GAChB,EAAKiE,SAASC,eAAe,eAAgB,CACzClE,c,EAGA2T,OAAS,SAAC/K,EAAoCuC,GAClD,IAAMtN,EAAS,EAAKA,OACdmJ,EAAWnJ,EAAO4Z,cAClBtN,EAAUtM,EAAO6Z,qBACvB,EAAK7Z,OAAOiO,MAAM3B,EAAQ1L,KAAI,SAACE,EAAQU,GAAT,MAAgB,CAC1CkI,KAAMP,EAAS2B,iBAAiBhK,GAChCiK,WAAY5B,EAASqB,QAAQO,EAAaA,EAAW+J,OAAS,YAC9DxH,SAAgB,IAAN9L,EACJ2H,EAASqB,QAAQ8C,EAAWA,EAASwH,OAAS,IAC9C3L,EAAS2B,iBAAiBwB,EAAQ9K,EAAI,U,EAG5CgU,UAAY,SAAClI,GACjB,IAAMlE,EAAMkE,EAAS7L,MAAM2H,IAE3B,OAAI1H,EAAgB0H,KAGbxH,EAAewH,IAAQS,YAAST,EAAIjC,Q,EAEvC2S,mBAAqB,WACzB,EAAKxT,e,0DAnDL,IAAMP,EAAQjG,KAAKE,OAAOyJ,mBACpBtH,EAAWzB,EAAOZ,KAAK2F,aAAaoU,sBAE1C,OAAO,gBAAC,GAAD,CACH1D,MAAO,GACPjW,KAAK,GAAG+W,WAAYlR,EACpBoN,aAAa,EACbsD,QAAQ,EACRjW,MAAO,SAAC0P,GAAD,OAAoBA,EAAE3N,IAC7B6T,UAAW,SAAA7T,GAAE,OAAIA,GACjB4U,QAAS,SAACjH,GAAD,OAAoBA,EAAEhQ,MAC/BkX,YAAa,SAAClH,GAAD,OAAoBA,EAAEnI,UAAY,IAC/C5F,SAAUA,EACVE,SAAUvC,KAAKuC,SACfmT,UAAW1V,KAAK0V,UAChBM,OAAQhW,KAAKgW,OACboB,cAAepX,KAAK6Z,e,0CAMxB7Z,KAAK4S,SAAS,qBAAsB5S,KAAKga,wB,GA3BX5L,IAAjBwL,GACHnX,GAAK,S,ICLjBwX,G,OAAkBC,aAEHC,G,4MACPlL,gBAAgC,G,EACnC5G,MAAQ,CACXtD,MAAO,4B,EAuBHwK,SAAW,SAAC5M,GAAoB,IAAD,EACZA,EAAEyX,IAAjBC,EAD2B,EAC3BA,EAAGC,EADwB,EACxBA,EAAGrN,EADqB,EACrBA,EAAGD,EADkB,EAClBA,EAEjB,EAAKzE,SAAS,CACVxD,MAAM,QAAD,OAAUsV,EAAV,aAAgBC,EAAhB,aAAsBrN,EAAtB,aAA4BD,EAA5B,Q,EAGLuN,iBAAmB,SAAC5X,GAAoB,IAAD,EACpBA,EAAEyX,IAAjBC,EADmC,EACnCA,EAAGC,EADgC,EAChCA,EAAGrN,EAD6B,EAC7BA,EAAGD,EAD0B,EAC1BA,EAEjB,EAAK/M,MAAMsP,SAAX,eAA4B8K,EAA5B,aAAkCC,EAAlC,aAAwCrN,EAAxC,aAA8CD,EAA9C,O,uDA9BA,IAAMjI,EAAQ/E,KAAKqI,MAAMtD,MAEzB,OACI,gBAACkV,GAAD,CACI3H,MAAO,QACPvN,MAAOA,EACPwK,SAAUvP,KAAKuP,SACfgL,iBAAkBva,KAAKua,qB,6EAKnBnK,GACZpQ,KAAKuI,SAAS,CACVxD,MAAOqL,M,iCAIX,OAAOpQ,KAAKqI,MAAMtD,U,GAxBe6J,ICCpB4L,I,mNACPvL,gBAAgC,G,EAChCwL,WAAatY,c,EACbuY,UAAYvY,c,EACfkG,MAAQ,CACXrF,QAAS,OACT+B,MAAO,Q,EAiDJ4V,QAAU,WACb,EAAKpS,SAAS,CACVvF,QAAS,W,EAGVyG,OAAS,SAAC9G,GACb,IAAMiY,EAAgBjY,EAAEyM,YAAYwL,cAEhC,EAAK/L,MAAM/L,QAAS2S,SAASmF,IAGjC,EAAKrS,SAAS,CACVvF,QAAS,U,EAGTuM,SAAW,SAACa,GAChB,EAAKnQ,MAAMsP,SAASa,I,EAEhBoD,YAAc,SAAC7Q,GACM,UAArBA,EAAE3B,OAAOC,SAGb0B,EAAEqR,kB,EAEE5R,QAAU,SAACO,GACf,EAAK+X,UAAU5X,QAAS+L,MAAM/L,QAASkC,S,uDAvEvC,OACI,uBAAK/B,UAAW9D,EAAO,eAAgBoE,IAAKvD,KAAK6O,MAAOpF,OAAQzJ,KAAKyJ,QACjE,uBAAKxG,UAAW9D,EAAO,oBAAqB4D,MAAO,CAC/C8X,gBAAiB7a,KAAKqI,MAAMtD,OAC7B3C,QAASpC,KAAKoC,UACjB,gBAAC,GAAD,CACImB,IAAKvD,KAAK0a,UACVnL,SAAUvP,KAAKuP,SACfM,WAAY,CACR8K,QAAS3a,KAAK2a,WAGrB3a,KAAK8a,kB,qCAIK,IAEf9X,EACAhD,KAAKqI,MADLrF,QAGJ,GAAgB,SAAZA,EAGJ,OAAO,uBAAKC,UAAW9D,EAAO,gBAC1B4b,YAAa/a,KAAKwT,YAAawH,aAAchb,KAAKwT,YAClDzQ,MAAO,CACHC,YAEJ,gBAAC,GAAD,CACIO,IAAKvD,KAAKya,WACVlL,SAAUvP,KAAKuP,c,+BAGXa,GACZpQ,KAAKuI,SAAS,CACVxD,MAAOqL,IAEXpQ,KAAK0a,UAAU5X,QAASiM,SAASqB,GAC7BpQ,KAAKya,WAAW3X,SAChB9C,KAAKya,WAAW3X,QAASiM,SAASqB,K,iCAItC,OAAOpQ,KAAK0a,UAAU5X,QAASuN,e,GArDDzB,KCDjBqM,G,4MAEV5M,MAAQ,S,EAkCR6M,wBAA0B,SAAC9K,GAC9B,EAAKxL,OAAOyB,IAAI,mBAAoB+J,GACpC,EAAKlQ,OAAOyV,YAAY,CAAC,oBAAqBvF,I,EAE3C+K,kBAAoB,SAAC/K,GACxB,EAAKxL,OAAOyB,IAAI,QAAS+J,GACzB,EAAKlQ,OAAOyV,YAAY,CAAC,SAAUvF,I,EAE/BoC,SAAW,WACf,EAAKhM,e,0DAxCL,IAAM4U,EAASpb,KAAK2F,aAAaC,oBAC7BiV,EAAkB7a,KAAK4E,OAAO7E,IAAI,oBAClCgF,EAAQ/E,KAAK4E,OAAO7E,IAAI,SAE5B,GAAIqb,EAAO5Z,OAAQ,CACf,IAAM6Z,EAAmBD,EAAOta,KAAI,SAAA4E,GAAK,OAAIA,EAAM3F,IAAI,uBACjDub,EAASF,EAAOta,KAAI,SAAA4E,GAAK,OAAIA,EAAM3F,IAAI,YAE7C8a,EAAkBQ,EAAiBrS,QAAO,SAAAjE,GAAK,OAAIA,KAAO,IAAM,cAChEA,EAAQuW,EAAOtS,QAAO,SAAAjE,GAAK,OAAIA,KAAO,IAAM,OAGhD,OAAO,uBAAK9B,UAAW9D,EAAO,gBAC1B,gBAAC,GAAD,CAAakI,KAAM,OACf6I,MAAM,mBACNrB,MAAO2L,GACP7Y,MAAOkZ,EACP/L,aAAa,EACbS,SAAUvP,KAAKkb,0BACnB,gBAAC,GAAD,CAAa7T,KAAM,OACf6I,MAAM,aACNrB,MAAO2L,GACP7Y,MAAOoD,EACP+J,aAAa,EACbS,SAAUvP,KAAKmb,uB,0CAIvBnb,KAAK4S,SAAS,SAAU5S,KAAKwS,UAC7BxS,KAAK4S,SAAS,qBAAsB5S,KAAKwS,c,GAlCXpE,IAAjB6M,GACHxY,GAAK,S,WCHF8Y,G,4MAGPtM,gBAAgC,G,EAmBhCC,QAAU,SAACvM,GACjB,IAAMwM,EAAKxM,EAAEyM,aAAezM,EAEvB0M,YAAYF,EAAGG,OAIpB,EAAKrP,MAAMsP,SAAS,EAAKV,MAAM/L,QAASnB,Q,uDAxBxC,IAAM6Z,EAAUxb,KAAKC,MAAMub,SAAW,GACtC,OACI,wCAAQjY,IAAKvD,KAAK6O,MACd5L,UAAW9D,EAAO,WACda,KAAKiP,gBACLjP,KAAKC,MAAM4P,WAHnB,CAIIX,QAASlP,KAAKkP,UACbsM,EAAQ1a,KAAI,SAAAa,GAAK,OAAK,0BAAQ2B,IAAK3B,EAAOA,MAAOA,GAAQA,S,iCAKlE,OAAO3B,KAAK6O,MAAM/L,QAASnB,Q,+BAEfA,GACZ3B,KAAK6O,MAAM/L,QAASnB,MAApB,UAA+B0N,YAAY1N,GAAS,GAAKA,O,GApB1BiN,ICGjC6M,GAAoB,CACtBD,QAAS,CAAC,eAERE,GAAmB,CACrBF,QAAS,CAAC,OAAQ,SAAU,QAAS,YAEnCG,GAAmB,CACrBH,QAAS,CAAC,SAAU,SAAU,WAE5BI,GAAoB,CACtBJ,QAAS,CAAC,MAAO,MAAO,MAAO,SAAU,MAAO,MAAO,OAAQ,QAE7DK,GAAwB,CAC1BL,QAAS,CAAC,OAAQ,YAAa,WAAY,iBAE1BM,G,4MAEVzN,MAAQ,O,EAuDPgE,aAAe,SAACjC,GACpB,EAAK2L,eAAe,YAAa3L,I,EAE7B4L,cAAgB,SAAC5L,GACrB,EAAK2L,eAAe,aAAc3L,I,EAE9B6L,eAAiB,SAAC7L,GACtB,EAAK2L,eAAe,cAAe3L,I,EAE/B8L,cAAgB,SAAC9L,GACrB,EAAK2L,eAAe,aAAc3L,I,EAE9B+L,eAAiB,SAAC/L,GACtB,EAAK2L,eAAe,cAAe3L,I,EAE/BgM,mBAAqB,SAAChM,GAC1B,EAAK2L,eAAe,kBAAmB3L,I,EAEnCoC,SAAW,WACf,EAAKhM,e,EAED4R,WAAa,WACjB,EAAK5R,e,0DA5EW,IAAD,EAQXxG,KAAK2F,aAAa0W,cAAc,CAChC,CAAC,eACD,CAAC,aACD,CAAC,cACD,CAAC,cACD,CAAC,eACD,CAAC,oBACF,CACC,aACA,OACA,OACA,SACA,SACA,SArBW,mBAEXC,EAFW,KAGX5D,EAHW,KAIX6D,EAJW,KAKXxZ,EALW,KAMXyZ,EANW,KAOXC,EAPW,KAwBf,OAAO,uBAAKxZ,UAAW9D,EAAO,aAC1B,gBAAC,GAAD,CAAakI,KAAM,OAAQ6I,MAAM,SAASrB,MAAO0M,GAC7Ctb,MAAOwb,GACP9Z,MAAO2a,EAAQxN,aAAa,EAAMS,SAAUvP,KAAKic,iBACrD,gBAAC,GAAD,CAAa5U,KAAM,OAAQ6I,MAAM,OAAOrB,MAAOG,GAC3CrN,MAAO+W,EACP5J,aAAa,EACbS,SAAUvP,KAAKqS,eACnB,gBAAC,GAAD,CAAahL,KAAM,OAAQ6I,MAAM,QAAQrB,MAAO0M,GAC5Ctb,MAAOyb,GACP/Z,MAAO4a,EAAOzN,aAAa,EAC3BS,SAAUvP,KAAKgc,gBACnB,gBAAC,GAAD,CAAa3U,KAAM,OAAQ6I,MAAM,QAAQrB,MAAO0M,GAC5Ctb,MAAO0b,GACPha,MAAOoB,EAAO+L,aAAa,EAC3BS,SAAUvP,KAAKkc,gBACnB,gBAAC,GAAD,CAAa7U,KAAM,OAAQ6I,MAAM,SAASrB,MAAO0M,GAC7Ctb,MAAO2b,GACPja,MAAO6a,EAAQ1N,aAAa,EAC5BS,SAAUvP,KAAKmc,iBACnB,gBAAC,GAAD,CAAa9U,KAAM,OAAQ6I,MAAM,aAAarB,MAAO0M,GACjDtb,MAAO4b,GACPla,MAAO8a,EAAY3N,aAAa,EAChCS,SAAUvP,KAAKoc,wB,0CAIvBpc,KAAK4S,SAAS,SAAU5S,KAAKwS,UAC7BxS,KAAK4S,SAAS,qBAAsB5S,KAAKoY,c,qCA0BtBhY,EAAcgQ,GACjCpQ,KAAK4E,OAAOyB,IAAIjG,EAAMgQ,GACtBpQ,KAAKE,OAAOyV,YAAY,CAACvV,GAAOgQ,GAAG,O,GAnFNhC,IAAhB0N,GACHrZ,GAAK,OCZvB,I,GAAMia,GAA0B,CAC5BC,GACA/D,GACAkD,GACAlC,GACA5I,GACAkH,IAEiB0E,G,4MAGVC,KAAO1a,c,EACPkG,MAAQ,CACXhG,SAAU,I,EAoBPQ,KAAO,WACV,EAAKga,KAAK/Z,QAAS8S,UAAUgC,OAAO,e,EAEhCxV,QAAU,SAACO,GACf,EAAKma,cACL,IAAM9b,EAAS2B,EAAE3B,OACX+b,EAAe,EAAK1U,MAAMhG,SAC1BA,EAAWrB,EAAOL,aAAa,kBACrC,EAAK4H,SAAS,CACVlG,SAAU0a,IAAiB1a,EAAW,GAAKA,K,EAG3Cya,YAAc,WAClB,EAAKD,KAAK/Z,QAAS8S,UAAUC,IAAI,e,uDA9BjC,OAAO,uBAAK5S,UAAW9D,EAAO,QAASoE,IAAKvD,KAAK6c,KAAMC,YAAa9c,KAAK8c,YAAaE,WAAYhd,KAAK6C,MAClG7C,KAAKid,gB,mCAGO,IAAD,OACV/c,EAASF,KAAKC,MAAMC,OACpBmC,EAAWrC,KAAKqI,MAAMhG,SAC5B,OAAOqa,GAAK5b,KAAI,SAAAoc,GACZ,IAAMza,EAAKya,EAAQza,GACb8T,EAAa9T,IAAOJ,EAC1B,OAAO,uBAAKiB,IAAKb,EAAIQ,UAAW9D,EAAO,WAAYoX,EAAa,WAAa,KACzE,uBAAK4G,iBAAgB1a,EAAIQ,UAAW9D,EAAO,kBAAmBiD,QAAS,EAAKA,SAAS,4BAAO8a,EAAQza,KACnG8T,GAAc,gBAAC2G,EAAD,CAAShd,OAAQA,Y,GApBdiC,iBCNnBib,G,4MAVHC,SAA4B,G,6DACrBjd,GAA0C,IAAD,OAA3Bkd,EAA2B,uDAAJ,GAC1CD,EAAWrd,KAAKqd,SACtBE,qBAAqBF,EAASjd,IAAS,GAEvCid,EAASjd,GAAQod,uBAAsB,WACnC,EAAKC,QAAQrd,EAAMkd,U,SAPRI,GCHFC,G,iDACV7c,IAAM,IAAI8c,I,gDACNta,GACP,OAAOtD,KAAKc,IAAIf,IAAIuD,K,0BAEbA,EAAU3B,GACjB,OAAO3B,KAAKc,IAAIuF,IAAI/C,EAAK3B,K,8BAGzB3B,KAAKc,IAAI+c,Y,uBCDjB,SAASC,GAAcrb,EAAY4F,EAAqB0V,EAAyB7d,GAC7E,IAAMX,EAAKW,EAAOmJ,SAASvG,QAASsJ,WAAW3J,GAE/C,IAAKlD,EAED,OADAoH,QAAQqX,MAAM,eACP,EAEX,IAAMrY,EAAezF,EAAOyF,aACtBD,EAAQC,EAAaqT,SAASzZ,GAEpCmG,EAAMmY,QACNnY,EAAMW,IAAIgC,GAEV,IAAM4V,EAASC,aAAKre,OAAOoC,KAAK8b,GAAYle,OAAOoC,KAAKoG,IAChDuE,EAAsBqR,EAAtBrR,QAASuR,EAAaF,EAAbE,SAMjB,OAJAvR,EAAQzM,SAAQ,SAAA0K,GACZtL,EAAGwD,MAAMqb,eAAeD,EAAStT,OAErClF,EAAa0Y,OAAO9e,IACb,EAEX,SAAS+e,GAAT,EAAsDpe,GAC7C4d,GAD6D,EAAhDrb,GAAgD,EAA5CwW,KAA4C,EAAtCM,KACOrZ,KAGnCA,EAAOuO,gBAAgB3L,QAAS2W,aAChCvZ,EAAOoG,SAASmX,QAAQ,WAE5B,SAASc,GAAT,EAAsDre,GAAiB,IAAjDuC,EAAgD,EAAhDA,GAAIwW,EAA4C,EAA5CA,KACjB6E,GAAcrb,EAD+C,EAAtC8W,KACCN,EAAM/Y,KAGnCA,EAAOuO,gBAAgB3L,QAAS2W,aAChCvZ,EAAOoG,SAASmX,QAAQ,WAE5B,SAASe,GAAT,EAA8Cte,GAAgB,EAAvC+F,MACb9F,SAAQ,YAAuC,IAApCsC,EAAmC,EAAnCA,GAAIwW,EAA+B,EAA/BA,KAA+B,EAAzBM,KACvBuE,GAAcrb,EAAIwW,EAAMA,EAAM/Y,MAElCA,EAAOuO,gBAAgB3L,QAAS2W,aAChCvZ,EAAOoG,SAASmX,QAAQ,UAE5B,SAASgB,GAAT,EAA8Cve,GAAgB,EAAvC+F,MACb9F,SAAQ,YACV2d,GADgD,EAAnCrb,GAAmC,EAA/B8W,KAA+B,EAAzBN,KACO/Y,MAElCA,EAAOuO,gBAAgB3L,QAAS2W,aAChCvZ,EAAOoG,SAASmX,QAAQ,U,IAIPiB,GADpBhf,E,+MAQUmZ,SAAW1W,c,4DAEd,OAAOnC,KAAK6Y,SAAS/V,U,+BAER,IAAD,SAOR9C,KAAKC,MALLC,EAFQ,EAERA,OACAye,EAHQ,EAGRA,mBACAC,EAJQ,EAIRA,qBACAC,EALQ,EAKRA,gBACAC,EANQ,EAMRA,aAIJ,IAAKD,EAAgBrd,OACjB,OAAOxB,KAAK+e,yBAXJ,IAcRpZ,EAKAzF,EALAyF,aACA/B,EAIA1D,EAJA0D,WACA0C,EAGApG,EAHAoG,SACA0Y,EAEA9e,EAFA8e,QACApa,EACA1E,EADA0E,OAEEqa,EAAoB,YAAItZ,EAAauZ,cAAclW,QAAO,SAAAzJ,GAC5D,OAAwC,IAAjCsf,EAAgB3f,QAAQK,MAE7B4f,EAAUvb,EAAWgE,SAE3B,OAAO,gBAAC,KAAD,CACHrE,IAAKvD,KAAK6Y,SACVrM,QAASqS,EACTO,WAAW,EACXC,WAAW,EACXC,eAAgB,EAChBC,UAA4B,SAAjBT,EACXU,SAAUX,EAAgBrd,OAAS,GAAsB,SAAjBsd,EACxC/d,WAA6B,SAAjB+d,EACZW,mBAAoBN,EAAU,GAAK,EACnCO,UAAWP,EACXQ,WAAW,EACXC,WAAW,EACXC,YAAY,EACZC,SAAS,EACTC,WAAW,EACXpB,mBAAoBA,EACpBC,qBAAsBA,EACtBK,kBAAmBA,EACnBe,UAAU,EACVxM,YAAa7N,EAAa6N,YAC1BS,OAAQtO,EAAasO,OACrBgM,iBAAkBta,EAAasa,iBAC/BC,YAAava,EAAaua,YAE1BC,aAAcxa,EAAawa,aAC3BC,QAASza,EAAaya,QACtBC,kBAAmB1a,EAAa0a,kBAChCC,aAAc3a,EAAa2a,aAE3BC,cAAe5a,EAAa4a,cAC5BC,SAAU7a,EAAa6a,SACvBC,mBAAoB9a,EAAa8a,mBACjCC,cAAe/a,EAAa+a,cAE5BC,cAAehb,EAAagb,cAC5BC,SAAUjb,EAAaib,SACvBC,mBAAoBlb,EAAakb,mBACjCC,cAAenb,EAAamb,cAE5BC,gBAAiBnc,EAAO7E,IAAI,SAAW,QACvCihB,OAAQrb,EAAaqb,OAErBC,kBAAmBtb,EAAasb,kBAChCC,aAAc,SAAAve,GACVgD,EAAaub,aAAave,IAG9Bwe,QAASxb,EAAawb,QAEtB/e,QAAS,SAAAO,GACL,IAAM3B,EAAS2B,EAAEye,YACjB,GAAIze,EAAE0e,UAAYrgB,EAAOG,kBAAmB,CACxCjB,EAAOohB,WAAW,QAClB,IAAM/hB,EAAKD,EAAkB0B,GAEzBzB,GACAA,EAAGyF,UAIfuc,aAAc,SAAA5e,GACVqc,EAAQlc,QAAS0e,YAAY7e,EAAE4E,WAAY5E,EAAEye,cAEjDK,cAAe,SAAA9e,GACXA,EAAEgR,MAAM+N,SAAW/b,EAAaqT,SAASrW,EAAE3B,QAAQjB,OAEvDyS,SAAU,SAAA7P,GACNA,EAAEgR,MAAMgO,UAAW,EACnBrb,EAASC,eAAe,WAE5Bqb,YAAa,SAAAjf,GACT2D,EAASC,eAAe,UAEnB5D,EAAEgR,MAAMgO,UAGb,EAAKxb,eAAeC,UAAU,SAAU,CACpC3D,GAAI/B,EAAMiC,EAAE3B,QACZiY,KAAMtW,EAAEgR,MAAM+N,SACdnI,KAAM5T,EAAaqT,SAASrW,EAAE3B,QAAQjB,SAG9C8hB,mBAAoB,SAAAlf,GAChBA,EAAEgR,MAAMmO,UAAYnf,EAAE6J,QAAQ1L,KAAI,SAAAE,GAAM,OAAI2E,EAAaqT,SAAShY,GAAQjB,UAE9EgiB,cAAe,SAAApf,GACX2D,EAASC,eAAe,cAAe5D,GACvCA,EAAEgR,MAAMgO,UAAW,GAEvBK,iBAAkB,SAAArf,GAGd,GAFA2D,EAASC,eAAe,cAAe5D,GAElCA,EAAEgR,MAAMgO,SAAb,CAGA,IAAMG,EAAYnf,EAAEgR,MAAMmO,UACpB7b,EAAQtD,EAAE6J,QAAQ1L,KAAI,SAACE,EAAQU,GACjC,MAAO,CACHe,GAAI/B,EAAMM,GACViY,KAAM6I,EAAUpgB,GAChB6X,KAAM5T,EAAaqT,SAAShY,GAAQjB,UAG5C,EAAKoG,eAAeC,UAAU,UAAW,CACrCH,gB,+CAMZ,IAAMN,EAAe3F,KAAK2F,aACpB0D,EAAWrJ,KAAKE,OAAO4Z,cACvB9Y,EAASqI,EAAWA,EAASG,YAAY1G,QAAW,KAE1D,OAAO,gBAAC,KAAD,CACHS,IAAKvD,KAAK6Y,SACV8G,WAAW,EACX3e,OAAQA,EACRyP,QAAQ,EACRkQ,cAAehb,EAAagb,cAC5BC,SAAUjb,EAAaib,a,0CAGH,IAAD,OACvB5gB,KAAKmG,eAAe8b,aAAa,SAAU3D,GAAYC,IACvDve,KAAKmG,eAAe8b,aAAa,UAAWzD,GAAaC,IACzDze,KAAK4D,WAAWC,QAAQ,CAAC,UAAU,WAC/B,EAAK2C,iBAETxG,KAAK4D,WAAWuD,MAAM,CAAC,UAAU,WAC7B,EAAKX,mB,mCAITxG,KAAK0O,cAAc+K,iB,GA3KkBtX,mB,GCvDxB+f,G,kDAEjB,WAAoBtd,GAAiB,IAAD,8BAChC,cAAM,CACFud,YAAY,KAFAvd,SAAgB,EAD7Bia,gBAAmD,GACtB,E,+DAKVrS,GACtBxM,KAAK6e,gBAAkBrS,I,2CAGvB,OAAOxM,KAAK6e,kB,0CAEqB,IAAD,OAChC,OAAO7e,KAAK+Z,qBAAqBjZ,KAAI,SAAAE,GAAM,OAAI,EAAKgY,SAAShY,Q,qCAE1C,IAAD,OAClBhB,KAAK+Z,qBAAqB5Z,SAAQ,SAACa,GAC/B,EAAKqd,OAAOrd,Q,kCAGDohB,EAAiBzgB,GAAa,IAAD,OAGtCsE,EAFUjG,KAAK+Z,qBAECjZ,KAAI,SAAAE,GACtB,IAAM0E,EAAQ,EAAKsT,SAAShY,GACtBiY,EAAOvT,EAAM3F,MACnB2F,EAAMW,IAAN,MAAAX,EAAK,YAAQ0c,GAAR,QAAezgB,KACpB,IAAM4X,EAAO7T,EAAM3F,MAEnB,MAAO,CAAE0C,GAAI/B,EAAMM,GAASiY,OAAMM,WAKtC,OAFAvZ,KAAKwZ,eAEEvT,I,yCAEiC,IAAC,IAAD,0BAAjBmc,EAAiB,yBAAjBA,EAAiB,gBACxC,OAAOpiB,KAAK+Z,qBAAqBjZ,KAAI,SAAAE,GACjC,IAAM0E,EAAQ,EAAKsT,SAAShY,GACtBiY,EAAOvT,EAAM3F,MAEnBqiB,EAAMjiB,SAAQ,SAAAC,GACVsF,EAAMkS,OAAOxX,GACbY,EAAO+B,MAAMqb,eAAehe,MAEhC,IAAMmZ,EAAO7T,EAAM3F,MAEnB,MAAO,CAAE0C,GAAI/B,EAAMM,GAASiY,OAAMM,a,oCAGrBpC,EAAwBkL,GACzC,IAAMjH,EAASpb,KAAK4F,oBACdhB,EAAS5E,KAAK4E,OAEpB,OAAKwW,EAAO5Z,OAIL2V,EAAWrW,KAAI,SAACwhB,EAAU5gB,GAG7B,OAFoB0Z,EAAOta,KAAI,SAAA4E,GAAK,OAAIA,EAAM3F,IAAN,MAAA2F,EAAK,YAAQ4c,OAElCtZ,QAAO,SAAAjE,GAAK,OAAIA,KAAO,IAAMsd,EAAc3gB,MANvDyV,EAAWrW,KAAI,SAACwhB,EAAU5gB,GAAX,OAAiBkD,EAAO7E,IAAIuiB,EAAS5a,KAAK,SAAW2a,EAAc3gB,U,UAxD3D6gB,GCGrBC,G,WAIjB,WAAoBtiB,GAAiB,yBAAjBA,SAAgB,KAH5BuiB,UAA6B,GAGD,KAF5BC,UAA6B,GAED,KAD5BC,MAAmE,G,yDAEvDtb,EAAcub,EAAuBC,GACrD7iB,KAAK2iB,MAAMtb,GAAQ,CAAEub,OAAMC,U,gCAEdxb,EAAcpH,GAC3BD,KAAKE,OAAOyG,QAAQc,IAApB,eAAwCJ,EAAMpH,GAC9CD,KAAKyiB,UAAUnb,KAAK,CAChBD,OACApH,UAEJD,KAAK0iB,UAAY,K,6BAGjB,IAAMI,EAAa9iB,KAAKyiB,UAAUM,MAE7BD,IAGL9iB,KAAKE,OAAOyG,QAAQc,IAApB,wBAAyCqb,EAAWzb,MAAQyb,EAAW7iB,OACvED,KAAK2iB,MAAMG,EAAWzb,MAAMub,KAAKE,EAAW7iB,MAAOD,KAAKE,QACxDF,KAAK0iB,UAAUpb,KAAKwb,M,6BAGpB,IAAME,EAAahjB,KAAK0iB,UAAUK,MAE7BC,IAGLhjB,KAAKE,OAAOyG,QAAQc,IAApB,wBAAyCub,EAAW3b,MAAQ2b,EAAW/iB,OACvED,KAAK2iB,MAAMK,EAAW3b,MAAMwb,KAAKG,EAAW/iB,MAAOD,KAAKE,QACxDF,KAAKyiB,UAAUnb,KAAK0b,Q,KC1CPC,G,WACjB,WAAoBC,GAAoB,yBAApBA,U,kDACQ,IAAD,EACvB,GAAKljB,KAAKkjB,QAAV,CADuB,2BAAbC,EAAa,yBAAbA,EAAa,iBAIvB,EAAAxc,SAAQc,IAAR,SAAY,qBAAsB,gDAAlC,OAAqF0b,S,uDCGxEC,G,WACjB,WAAoBljB,GAAiB,IAAD,gCAAhBA,SAAgB,KAyD5BmjB,MAAQ,SAAC1gB,GACE,EAAK2gB,OAAO3gB,KAK3B,EAAKzC,OAAOyG,QAAQc,IAAI,kBACxB,EAAKvH,OAAOqjB,eAAe,EAAKrjB,OAAO6Z,wBAhEP,KAmE5BuJ,OAnE4B,yCAmEnB,WAAO3gB,GAAP,sBAAAqK,EAAA,0DACTjM,EAAW4B,EAAE3B,QADJ,0CAEF,GAFE,cAIb2B,EAAEqR,iBAEIwP,EAAiB7gB,EAAU6gB,cAC3B7d,EAAe,EAAKzF,OAAOyF,aAC3B6G,EAAU7G,EAAaoU,qBACvB0J,EAAiB,EAAKvjB,OAAOwjB,YAAYlX,GAE/C,EAAKtM,OAAOyG,QAAQc,IAAI,kBAAmBgc,GAC3CD,EAAcG,Q5CnFW,6B4CmFgBC,KAAKC,UAAUJ,IAZ3C,mBAcN,GAdM,4CAnEmB,2DAmF5BK,QAAU,SAACnhB,GACX5B,EAAW4B,EAAE3B,UAIjB,EAAK+iB,KAAMphB,EAAU6gB,eACrB7gB,EAAEqR,mBAxFFhI,SAASgY,iBAAiB,MAAOhkB,KAAKqjB,OACtCrX,SAASgY,iBAAiB,OAAQhkB,KAAKsjB,QACvCtX,SAASgY,iBAAiB,QAAShkB,KAAK8jB,S,sDAGxC9X,SAASiY,oBAAoB,MAAOjkB,KAAKqjB,OACzCrX,SAASiY,oBAAoB,OAAQjkB,KAAKsjB,QAC1CtX,SAASiY,oBAAoB,QAASjkB,KAAK8jB,W,6BAG3C9X,SAASkY,YAAY,U,4BAGrBlY,SAASkY,YAAY,S,8BAGrBlY,SAASkY,YAAY,W,kCAGrB,IACM1X,EADexM,KAAKE,OAAOyF,aACJoU,qBACvBlB,EAAW7Y,KAAKE,OAAOwO,cACvBlN,EAASgL,EAAQhL,OACjBsX,EAAYtX,EAAS,EAAKqX,EAASA,SAA2BC,UAAY,GAEhF,OAAO,IAAIjN,SAAQ,SAAAC,GACfD,QAAQsY,IAAI3X,EAAQ1L,KAAI,SAAAE,GAAM,OAAIojB,KAAYpjB,OAAyBqjB,MAAK,SAAAC,GACxE,IAAIC,EACJ,GAAI/iB,EAAS,EAAG,CACZ,IAAMgjB,EAAa3L,EAAS7G,UACtByS,EAASzY,SAAS0Y,cAAc,UACtCD,EAAOnS,MAAQkS,EAAWlS,MAC1BmS,EAAOlS,OAASiS,EAAWjS,OAC3B,IAAMoS,EAAUF,EAAOG,WAAW,MAC5BC,EAAQ/L,EAAUhY,KAAI,SAAAmI,GAAC,OAAIA,EAAE+I,aAEnCrL,QAAQc,IAAIod,GACZA,EAAM/jB,KAAI,SAACiR,EAAMrQ,GACbijB,EAAQG,UAAUR,EAAO5iB,GAAIqQ,EAAKU,KAAO+R,EAAW/R,KAAMV,EAAKW,IAAM8R,EAAW9R,QAGpF6R,EAAcE,OAEdF,EAAcD,EAAO,GAEzBC,EAAYQ,QAAO,SAAAC,GACdhmB,UAAUimB,UAAkBC,MAAM,CAC/B,IAAKpO,OAAeqO,cAAc,CAC9B,YAAaH,MAGrBlZ,e,wCAuCUwD,GAItB,GAHcA,EAAKqT,MACIzjB,Q5CjGE,+B4CiG4B,EAEvC,CACV,IAAMkmB,EAAaxB,KAAKyB,MAAM/V,EAAKgW,Q5CpGd,+B4CyGrB,OAHAtlB,KAAKE,OAAOyG,QAAQc,IAAI,mBAAoB2d,GAE5CplB,KAAKE,OAAOqlB,UAAUH,IACf,EAEX,OAAO,I,sEAEQ9V,G,uFACXtP,KAAKwlB,kBAAkBlW,G,0CAChB,G,uBAEoCtQ,UAAUimB,UAAkBlB,O,UAArE0B,E,OAEFC,GAAU,EACED,EAAezc,QAAO,SAAA2c,GAClC,IAAMhD,EAAQgD,EAAKhD,MAEbiD,EAAWjD,EAAMzjB,QAAQ,cAAgB,EAG/C,OAFAwmB,EAAUA,GAAW/C,EAAMzjB,QAAQ,eAAiB,IAEhD0mB,IACAD,EAAKE,QAAQ,aAAaxB,MAAK,SAAAW,GAC3B,EAAK9kB,OAAO4lB,WAAWd,OAEpB,MAGZxjB,OAAS,IAEIkkB,E,kCACO1mB,UAAUimB,UAAUc,W,QAAjCC,E,OAENhmB,KAAKE,OAAO+lB,WAAW,CAAC,CACpB3c,IAAK,uBAAK9J,gBAAgB,SAC1BY,KAAM,SACN+J,UAAW6b,K,+GC1H3B,SAASE,GAAT,EAAmEhmB,GAAiB,IAAtD+F,EAAqD,EAArDA,MAAO8W,EAA8C,EAA9CA,aAC3BoJ,EAAMjmB,EAAOkmB,YAAYngB,EAAMnF,KAAI,SAAC8I,GAAD,OAAuBA,EAAKnH,OAAK,GAEtEsa,GACAoJ,EAAI9B,MAAK,WACLnkB,EAAO8Z,mBAAmB9Z,EAAO4Z,cAAcuM,YAAYtJ,IAAe,MAItF,SAASuJ,GAAT,EAAkDpmB,GAAiB,IAAxC+F,EAAuC,EAAvCA,MACvB/F,EAAO+lB,WAAWhgB,EAAMnF,KAAI,SAAC8I,GAAD,sBACrBA,OACF,GAET,SAAS2c,GAAT,EAA2DrmB,GAAiB,IAA/CsmB,EAA8C,EAA9CA,MAA8C,EAAvCC,MAChCvmB,EAAO8Z,mBAAmB9Z,EAAOmJ,SAASvG,QAASujB,YAAYG,IAAQ,GAE3E,SAASE,GAAT,EAA2DxmB,GAAgB,EAA9CsmB,MAA+C,IAAxCC,EAAuC,EAAvCA,MAChCvmB,EAAO8Z,mBAAmB9Z,EAAOmJ,SAASvG,QAASujB,YAAYI,IAAQ,GAE3E,SAASE,GAAT,EAA0DzmB,GAAiB,IAAjD+Y,EAAgD,EAAhDA,KAAYxW,GAAoC,EAA1C8W,KAA0C,EAApC9W,IAC5BmH,EAAO1J,EAAO4Z,cAAcpP,QAAQjI,GAC1CmH,EAAKO,UAAY8O,EACjBrP,EAAKrK,GAAI4K,UAAY8O,EAEzB,SAAS2N,GAAT,EAA0D1mB,GAAgB,EAAhD+Y,KAAiD,IAA3CM,EAA0C,EAA1CA,KAAM9W,EAAoC,EAApCA,GAC5BmH,EAAO1J,EAAO4Z,cAAcpP,QAAQjI,GAC1CmH,EAAKO,UAAYoP,EACjB3P,EAAKrK,GAAI4K,UAAYoP,EAEzB,SAASsN,GAAT,EAA8C3mB,GAAiB,IAA3C6N,EAA0C,EAA1CA,UAChB7N,EAAOiO,MAAMJ,GAAW,GAE5B,SAAS+Y,GAAT,EAA8C5mB,GAAiB,IAA3C4N,EAA0C,EAA1CA,UAChB5N,EAAOiO,MAAML,GAAW,G,IAEPiZ,G,4MASV1e,MAA0B,CAC7BwW,gBAAiB,GACjBmI,iBAAkB,GAClBC,eAAgB,GAChBC,KAAM,EACNpI,aAAc,Y,EAEX3Y,eAAiB,IAAIqc,GAAJ,gB,EACjB7b,QAAU,IAAIsc,GAAS,EAAKhjB,MAAMknB,O,EAClC7gB,SAAW,IAAI8W,G,EACfxY,OAAS,IAAI+Y,G,EACbhY,aAAe,IAAIuc,GAAa,EAAKtd,Q,EACrChB,WAAa,IAAI8C,EAAW,EAAKC,S,EACjCygB,iBAAmB,IAAIhE,GAAJ,gB,EAEnB4D,iBAAmB7kB,c,EACnB8kB,eAAiB9kB,c,EACjBklB,eAAiBllB,c,EACjB6c,QAAU7c,c,EACVmlB,KAAOnlB,c,EACPsM,gBAAkBtM,c,EAClBkH,SAAWlH,c,EACX0a,KAAO1a,c,EACPsG,cAAgBtG,c,EA0ffolB,aAAe,SAAC9kB,GACpB,EAAK8F,SAAS,CACVuW,aAAcrc,K,EAkDd+d,SAAW,WACf,EAAKwG,iBAAiBlkB,QAAS0kB,SAC/B,EAAKP,eAAenkB,QAAS0kB,U,EAEzBC,QAAU,SAAC9kB,GACX,EAAKiB,WAAW+D,SAChBhF,EAAEqR,iBACF,EAAKzL,SAAS,CACV2e,KAAMzmB,KAAKD,IAAI,GAAK,EAAK6H,MAAM6e,KAAOvkB,EAAE+kB,OAAS,S,EAIrDje,OAAS,SAAC9G,GACd,IAAM3B,EAAS2B,EAAE3B,OAEjB,GAAKD,EAAWC,GAAhB,CAGA,IAAM2mB,EAAevmB,EAAsBJ,GAE3C,GAAK2mB,EAAL,CAGA,IAAM/d,EAAO,EAAKkQ,cAAc9O,iBAAiB2c,GAGjD,GAAK/d,EAAKnI,MAAOqD,gBAAjB,CAGA,IAAM8iB,EAAYD,EAA6Bxd,UAE3CP,EAAKO,YAAcyd,IAGvB,EAAKzhB,eAAeC,UAAU,aAAc,CACxC3D,GAAImH,EAAKnH,GACTwW,KAAMrP,EAAKO,UACXoP,KAAMqO,IAEVhe,EAAKO,UAAYyd,O,uDAnlBJ,IAAD,OAERZ,EASAhnB,KATAgnB,iBACAC,EAQAjnB,KARAinB,eACAI,EAOArnB,KAPAqnB,eACA5Y,EAMAzO,KANAyO,gBACApF,EAKArJ,KALAqJ,SACAie,EAIAtnB,KAJAsnB,KACAzK,EAGA7c,KAHA6c,KACAmC,EAEAhf,KAFAgf,QACA3W,EACArI,KADAqI,MAGAyW,EAGAzW,EAHAyW,aACAD,EAEAxW,EAFAwW,gBACAqI,EACA7e,EADA6e,KAfQ,EAoBRlnB,KAAKC,MAFLqS,EAlBQ,EAkBRA,MACAC,EAnBQ,EAmBRA,OAEEsV,EAAoB,CAAI,EAAGtV,EAAQA,EAAS,GAAxB,mBAA8BlK,EAAM2e,mBACxDc,EAAkB,CAAI,EAAGxV,EAAOA,EAAQ,GAAtB,mBAA4BjK,EAAM4e,iBACtDc,EAAO,GAKX,OAHIb,EAAO,KACPa,EAA8B,GAAvBtnB,KAAK+J,MAAM,EAAI0c,IAGtB,uBAAKjkB,UAAW9D,EAAO,UAAWoE,IAAKvD,KAAKyI,eACxC,gBAAC,GAAD,CAAMlF,IAAKsZ,EAAM3c,OAAQF,OACzB,gBAAC,GAAD,CAAMuD,IAAK+jB,EAAMpnB,OAAQF,KAAMuC,SAAUvC,KAAKunB,eAC9C,uBAAKtkB,UAAW9D,EAAO,SAAUiD,QAAS,SAAAO,GACtC0kB,EAAevkB,QAASklB,kBAE5B,gBAAC,IAAD,CAAQzkB,IAAKyjB,EACT3f,KAAK,aAAapE,UAAW9D,EAAO,SAAU,cAAe4D,MAAO,GACpEklB,cAAe,EACfC,MAAOL,EACPM,gBAAgB,EAChBC,cAAe,SAAAhY,GAAC,gBAAOA,EAAP,OAChB8W,KAAMA,EACNa,KAAMA,EACNM,eAAgB,SAAA1lB,GACZ,EAAK4F,SAAS,CACVye,iBAAkBrkB,EAAE2lB,YAIhC,gBAAC,IAAD,CAAQ/kB,IAAK0jB,EACT5f,KAAK,WAAWpE,UAAW9D,EAAO,SAAU,YAAa4D,MAAO,GAChEklB,cAAe,EACfC,MAAOJ,EACPK,gBAAgB,EAChBC,cAAe,SAAAhY,GAAC,gBAAOA,EAAP,OAChB8W,KAAMA,EACNa,KAAMA,EACNM,eAAgB,SAAA1lB,GACZ,EAAK4F,SAAS,CACV0e,eAAgBtkB,EAAE2lB,YAI9B,gBAAC,IAAD,CAAgB/kB,IAAK8jB,EACjBpkB,UAAW9D,EAAO,UAClBopB,UAAU,EACVC,eAAgB,GAChBtB,KAAMA,EACN1T,YAAa,SAAA7Q,GACT,IAAM3B,EAAS2B,EAAE4E,WAAWvG,OAC5B,EAAKynB,aAGmB,MAApBznB,EAAO0nB,UACJja,EAAgB3L,QAAS4L,cAAcia,kBAAkB3nB,IACzD6d,EAAgB+J,MAAK,SAAAtP,GAAC,OAAIA,IAAMtY,GAAUsY,EAAE7D,SAASzU,QAExD2B,EAAEkmB,QAGV/S,UAAW,SAAAnT,GACFA,EAAEoT,QACHiJ,EAAQlc,QAAS0e,YAAY7e,EAAE4E,aAGvCuhB,aAAc,SAAAnmB,GACVqc,EAAQlc,QAASimB,iBAAiBpmB,EAAE4E,aAExCyhB,SAAU,SAAArmB,GACNqkB,EAAiBlkB,QAASmmB,OAAOtmB,EAAEumB,YACnClC,EAAiBlkB,QAASqmB,aAAaxmB,EAAEymB,WAEzCnC,EAAenkB,QAASmmB,OAAOtmB,EAAEymB,WACjCnC,EAAenkB,QAASqmB,aAAaxmB,EAAEumB,aAE3CG,QAAS,SAAA1mB,GACL,EAAK4F,SAAS,CACV2e,KAAMvkB,EAAEukB,SAIhB,gBAAC,GAAD,CAAU3jB,IAAK8F,EACXI,OAAQzJ,KAAKyJ,OACb1G,MAAO,CACHuP,MAAM,GAAD,OAAKA,EAAL,MACLC,OAAO,GAAD,OAAKA,EAAL,QAEV,gBAAC,GAAD,CACIhP,IAAKkL,EACLoQ,gBAAiBA,EACjBC,aAAcA,EACdH,mBAAoBmJ,EACpBlJ,qBAAsBiJ,EACtB3nB,OAAQF,SAIpB,gBAAC,IAAD,CACIuD,IAAKyb,EACLsK,cAAe,gBACfC,QAAS,EACTC,kBAAmB,CAAC,oBAAD,O7ClNF,wB6CkNE,MACnBC,eAAe,EACfC,kBAAkB,EAClBC,qBAAsB,CAAC,SACvB3V,gBAAgB,EAChB4V,cACIvC,EAAevkB,QAAU,CACrB+T,UAAWwQ,EAAevkB,QAAQ+mB,eAClCC,UAAW,GACXC,aAAc,GACdC,kBAAmB,WACf,IAAMlnB,EAAUukB,EAAevkB,QAC/B,MAAO,CACHA,EAAQmnB,gBACRnnB,EAAQonB,uBAGhB/T,EAER3C,YAAa,SAAA7Q,GACT,IAAM4E,EAAa5E,EAAE4E,WACfvG,EAASuG,EAAWvG,OAG1B,GADA,EAAKynB,YACgB,SAAjB3J,GAA2B9d,EAAOG,kBAAmB,CACrD,IAAMgpB,EAAiB7qB,EAAkB0B,GAErCmpB,GAAkBA,EAAe9oB,a7C7O5B,2B6C8OLsB,EAAEkmB,OACF,EAAK7O,mBAAmB,CAACmQ,MAIR,eAApB5iB,EAAWF,MAAyB1E,EAAEynB,WACpC3b,EAAgB3L,QAAS4L,cAAcia,kBAAkB3nB,IACzDqH,EAAMwW,gBAAgB+J,MAAK,SAAAtP,GAAC,OAAIA,IAAMtY,GAAUsY,EAAE7D,SAASzU,QAE9D2B,EAAEkmB,QAGVG,SAAU,YAAoB,IAAjB1Q,EAAgB,EAAhBA,UACT+O,EAAevkB,QAASunB,SAAwB,GAAf/R,EAAU,GAAwB,GAAfA,EAAU,KAElEgS,YAAa,YAAkD,IAA/CC,EAA8C,EAA9CA,YAAaloB,EAAiC,EAAjCA,SAAUkF,EAAuB,EAAvBA,WAAYwK,EAAW,EAAXA,KAC3CwY,GACAhjB,EAAWyM,iBAEX,EAAKwW,eAAezY,IAGxB,EAAKiI,mBAAmB3X,GAAUgiB,MAAK,WAC9BkG,GAGL9b,EAAgB3L,QAAS4L,cAAc+b,UAAUljB,Y,0CAO7C,IAAD,OAEnB8f,EAGArnB,KAHAqnB,eACAziB,EAEA5E,KAFA4E,OACA0B,EACAtG,KADAsG,SAEJ1B,EAAOyB,IAAI,mBAAoB,QAC/BzB,EAAOyB,IAAI,QAAS,QAEpBmX,uBAAsB,WAClB6J,EAAevkB,QAASklB,kBAE5BlR,OAAOkN,iBAAiB,SAAUhkB,KAAKwgB,UACvC1J,OAAOkN,iBAAiB,QAAShkB,KAAKynB,QAAS,CAC3CiD,SAAS,IAEb,IAAMrhB,EAAWrJ,KAAK8Z,cAGtBxT,EAASkI,GAAG,QAAQ,WAChB,EAAK8Y,KAAKxkB,QAASD,OACnB,EAAKga,KAAK/Z,QAASD,UAEvByD,EAASkI,GAAG,gBAAgB,SAAC7L,GACzB,IAAMN,EAAWM,EAAEN,SAEnB,EAAK2X,mBAAmB3X,EAASvB,KAAI,SAAAwC,GAAG,OAAI+F,EAASqB,QAAQpH,GAAM/D,UAEvE+G,EAASkI,GAAG,UAAU,WAClB,EAAKhI,iBAITxG,KAAK4D,WAAWC,QAAQ,CAAC,SAAS,SAAAlB,GAC9B,EAAKiL,MAAM,GAAI,GACfjL,EAAE4E,WAAWyM,mBACd,aACHhU,KAAK4D,WAAWC,QAAQ,CAAC,OAAO,SAAAlB,GAC5B,EAAKiL,KAAK,GAAI,IACdjL,EAAE4E,WAAWyM,mBACd,WACHhU,KAAK4D,WAAWC,QAAQ,CAAC,UAAU,SAAAlB,GAC/B,EAAKiL,KAAK,GAAI,GACdjL,EAAE4E,WAAWyM,mBACd,cACHhU,KAAK4D,WAAWC,QAAQ,CAAC,SAAS,SAAAlB,GAC9B,EAAKiL,KAAK,EAAG,IACbjL,EAAE4E,WAAWyM,mBACd,aACHhU,KAAK4D,WAAWuD,MAAM,CAAC,cAAc,WACjC,EAAKoc,eAAe,EAAKxJ,wBAC1B,UACH/Z,KAAK4D,WAAWC,QAAQ,CAAC5E,EAAc,OAAS,OAAQ,MAAM,cAAW,OACzEe,KAAK4D,WAAWC,QAAQ,CAAC5E,EAAc,OAAS,OAAQ,MAAM,cAAW,QAKzEe,KAAK4D,WAAWC,QAAQ,CAAC5E,EAAc,OAAS,OAAQ,MAAM,cAAW,SACzEe,KAAK4D,WAAWC,QAAQ,CAAC5E,EAAc,OAAS,OAAQ,MAAM,WAC1D,EAAKkH,eAAeyc,SACrB,QACH5iB,KAAK4D,WAAWC,QAAQ,CAAC5E,EAAc,OAAS,OAAQ,QAAS,MAAM,WACnE,EAAKkH,eAAe0c,SACrB,QACH7iB,KAAK4D,WAAWC,QAAQ,CAAC5E,EAAc,OAAS,OAAQ,MAAM,SAAA0D,GAC1D,EAAKqX,mBAAmB,EAAKrQ,mBAAmB7I,KAAI,SAAA8I,GAAI,OAAIA,EAAKrK,OACjEoD,EAAE4E,WAAWyM,mBACd,QACHhU,KAAK4D,WAAWC,QAAQ,CAAC5E,EAAc,OAAS,OAAQ,MAAO,MAAM,SAAA0D,GACjEA,EAAE4E,WAAWyM,iBACb,EAAK2W,eACN,eACH3qB,KAAK4D,WAAWC,QAAQ,CAAC5E,EAAc,OAAS,OAAQ,QAAS,MAAO,MAAM,SAAA0D,GAC1EA,EAAE4E,WAAWyM,iBACb,EAAK4W,gBACN,gBACH5qB,KAAKmG,eAAe8b,aAAa,iBAAkBiE,GAAoBI,IACvEtmB,KAAKmG,eAAe8b,aAAa,iBAAkBqE,GAAiBJ,IACpElmB,KAAKmG,eAAe8b,aAAa,gBAAiBsE,GAAmBG,IACrE1mB,KAAKmG,eAAe8b,aAAa,aAAc0E,GAAgBC,IAC/D5mB,KAAKmG,eAAe8b,aAAa,OAAQ4E,GAAUC,M,6CAGnD9mB,KAAKsG,SAASqI,MACd3O,KAAK4E,OAAOiZ,QACZ7d,KAAK2F,aAAakY,QAClB7d,KAAK4D,WAAWwD,UAChBpH,KAAKonB,iBAAiBhgB,UACtB0P,OAAOmN,oBAAoB,SAAUjkB,KAAKwgB,UAC1C1J,OAAOmN,oBAAoB,QAASjkB,KAAKynB,W,mCAEzBpf,GAAmC,IAAD,OAClD,OAAO,IAAIwD,SAAQ,SAAAC,GACf,EAAKvD,SAASF,GAAO,WACjByD,Y,2CAKR,OAAO9L,KAAKqI,MAAMwW,kB,yCAEIrS,EAA0Cqe,GAAsB,IAAD,OAOrF,OANAre,EAAUA,EAAQxD,QAAO,SAAAhI,GACrB,OAAOwL,EAAQse,OAAM,SAAAC,GACjB,OAAOA,IAAiB/pB,IAAW+pB,EAAatV,SAASzU,SAI1DhB,KAAKgrB,aAAa,CACrBnM,gBAAiBrS,IAClB6X,MAAK,WACJ,IAAKwG,EAAW,CACZ,IAAMrE,EAAQ5lB,EAAO,EAAK+E,aAAaoU,sBACjC0M,EAAQ7lB,EAAO4L,GAEjBga,EAAMhlB,SAAWilB,EAAMjlB,QAAWglB,EAAMsE,OAAM,SAAC7R,EAAMvX,GAAP,OAAa+kB,EAAM/kB,KAAOuX,MACxE,EAAK9S,eAAeC,UAAU,gBAAiB,CAAEogB,QAAOC,UAMhE,OAHA,EAAKzH,QAAQlc,QAASkX,mBAAmBxN,GACzC,EAAK7G,aAAaqU,mBAAmBxN,GACrC,EAAKlG,SAASmX,QAAQ,sBACfjR,O,gCAGE5C,GACb,OAAO5J,KAAKimB,WAAW,CAACrc,IAAOya,MAAK,SAAA7X,GAAO,OAAIA,EAAQ,Q,iCAGzCpD,EAAqByhB,GAAgE,IAAD,OAC5FxhB,EAAWrJ,KAAK8Z,cAChBjN,EAAcxD,EAASgE,qBAAqBrN,KAAK+Z,sBACjDkR,EAAoBpe,EAAYrL,OAClCkK,GAAe,EACfd,EAAkB,GAEtB,IAAKigB,GAAaI,EAAmB,CACjC,IAAMngB,EAAU+B,EAAYoe,EAAoB,GAKhDrgB,EAFavB,EAASiE,iBAAiBxC,GAExBF,QACfc,EAAcZ,EAAQA,EAAQtJ,OAAS,GAAK,EAKhD,OAFAxB,KAAK2G,QAAQc,IAAI,cAAe2B,EAAMsC,EAAad,GAE5C5K,KAAK8Z,cAAcmM,WAAW7c,EAAMsC,EAAad,GAASyZ,MAAK,YAAgB,IAAblY,EAAY,EAAZA,MACrE,OAAO,EAAK+e,eAAe/e,EAAO0e,Q,qCAGpB5kB,EAAsB4kB,GAAsB,IAAD,QAC5DA,GAAa7qB,KAAKmG,eAAeC,UAAU,iBAAkB,CAC1DH,QACA8W,aAAcnc,EAAOZ,KAAK+Z,wBAE9B,IAAMzK,EAAOtP,KAAK2F,aACZ6G,EAAUvG,EAAMnF,KAAI,SAASqqB,EAAcvhB,GAK7C,OAJA0F,EAAK8b,YAAYxhB,EAAKrK,GAAKqK,EAAKlE,OAChC4J,EAAK+O,OAAOzU,EAAKrK,IAEjBqK,EAAK3B,SAAU9H,QAAQgrB,GAChBvhB,EAAKrK,MACbyJ,QAAO,SAAAzJ,GAAE,OAAIA,KAEhB,OAAOsM,QAAQsY,IAAI3X,EAAQ1L,KAAI,SAAAE,GAAM,O5CrYtC,SAASqqB,EAAiB9rB,GAC7B,MAAiC,QAA7BA,EAAG0B,QAAQC,cACJ2K,QAAQsY,IAAI,GAAG7X,MAAMoL,KAAKnY,EAAGoY,iBAAiB,QAAQ7W,KAAI,SAAAvB,GAAE,OAAI8rB,EAAiB9rB,OAErF,IAAIsM,SAAQ,SAAAC,GACVvM,EAAwB+rB,SACzBxf,IAEAvM,EAAGykB,iBAAiB,QAAQ,SAASuH,IACjCzf,IAEAvM,EAAG0kB,oBAAoB,OAAQsH,S4C0XEF,CAAiBrqB,OAAUqjB,MAAK,WAGrE,OAFA,EAAKrK,mBAAmBxN,GAAS,GAE1BA,O,kCAGIjD,EAAeshB,GAC9B,OAAO7qB,KAAKujB,eAAevjB,KAAK8Z,cAAcuM,YAAY9c,GAAMshB,K,oCAGhE,OAAO7qB,KAAKyO,gBAAgB3L,QAAS4L,gB,mCAErBlC,GAChB,IAAMgf,EAAyB,GACzB7lB,EAAe3F,KAAK2F,aACpB0D,EAAWrJ,KAAK8Z,cAatB,OAXAtN,EAAQrM,SAAQ,SAASsrB,EAAYzqB,GACjC,IAAM4I,EAAOP,EAAS2B,iBAAiBhK,GAEvCwqB,EAAS5hB,EAAKnH,IAAOkD,EAAaqT,SAAShY,GAAQjB,MACnD4F,EAAa8lB,YAAYzqB,GAEzB4I,EAAK3B,SAAU9H,SAAQ,SAAAurB,GACnBD,EAAYC,EAAUnsB,UAIvBisB,I,oCAEUvlB,EAAsBulB,GACvC,IAAMniB,EAAWrJ,KAAK8Z,cAChBnU,EAAe3F,KAAK2F,aAQ1B,IAAK,IAAMlD,KANXwD,EAAM9F,SAAQ,SAASgrB,EAAcvhB,GACjCA,EAAKlE,MAAQ8lB,EAAS5hB,EAAKnH,WACpB+oB,EAAS5hB,EAAKnH,IAErBmH,EAAK3B,SAAU9H,QAAQgrB,MAEVK,EACb7lB,EAAaylB,YAAY/hB,EAASqB,QAAQjI,GAAIlD,GAAKisB,EAAS/oB,M,qCAG9C+J,EAA0Cqe,GAAsB,IAAD,OAC3ExhB,EAAWrJ,KAAK8Z,cAChB0R,EAAWxrB,KAAK2rB,aAAanf,GAC7BK,EAAcxD,EAASgE,qBAAqBb,GAC5Cye,EAAoBpe,EAAYrL,OAClCoJ,EAAU,GACVghB,EAAmC,KAEvC,GAAIX,EAAmB,CACnB,IAAMvd,EAAWrE,EAASiE,iBAAiBT,EAAYoe,EAAoB,IACrE/V,EAAW7L,EAASwiB,YAAYne,EAASjL,IAE/CmI,EAAU8C,EAAS9C,QACnBghB,EAAe1W,EAGnB,OAAO7L,EAASyiB,cAActf,GAAS6X,MAAK,YAAkB,IAAfzX,EAAc,EAAdA,QACvCmf,EAAiBH,GAAgBviB,EAASsE,iBAAiB/C,IAAavB,EAASqB,QAAQE,GAc7F,OAZA,EAAKoP,mBAAmB+R,GAAkBA,EAAexsB,GAAK,CAACwsB,EAAexsB,IAAO,IAAI,GAEzF,EAAKoH,QAAQc,IAAI,gBAAiBmF,IACjCie,GAAa,EAAK1kB,eAAeC,UAAU,iBAAkB,CAC1DH,MAAO2G,EAAQ9L,KAAI,SAASkrB,EAAapiB,GACrC,OAAO,2BACAA,GADP,IAEI3B,SAAU2B,EAAK3B,SAAUnH,IAAIkrB,GAC7BtmB,MAAO8lB,EAAS5hB,EAAKnH,KAAQmH,EAAKlE,aAIvC8G,O,kCAGI6J,EAAiB1U,EAAYsqB,GAC5C,IAAMhmB,EAAQjG,KAAK2F,aAAagQ,YAAYU,EAAO1U,GAEnD3B,KAAKmG,eAAeC,UAAU,UAAW,CAAEH,UAEvCgmB,GACAjsB,KAAKyO,gBAAgB3L,QAAS2W,aAElCzZ,KAAKsG,SAASC,eAAe,Y,iCAEf+gB,GACdtnB,KAAKsnB,KAAKxkB,QAAS+F,OAAOye,K,gCAEb3T,GACb,IAAMtK,EAAWrJ,KAAK8Z,cACtB,OAAO9Z,KAAKimB,WAAWtS,EAAM7S,KAAI,SAASorB,EAAS5c,GAAY,IAGvDhG,EAFIkC,EAAiC8D,EAAjC9D,YAAaH,EAAoBiE,EAApBjE,MAAOpD,EAAaqH,EAAbrH,SAI5B,GAAIoD,EACA/B,EAAMD,EAAS8iB,OAAO9gB,QACnB,GAAIG,EAAa,CACpB,IAAMkS,EAAYrU,EAAS+iB,aAAa5gB,GAExClC,EAAM,gBAACoU,EAAD,WAENpU,EAAMnH,gBAAoBmN,EAAKrO,SAEnC,OAAO,2BACAqO,GADP,IAEIrH,SAAUA,EAASnH,IAAIorB,GACvB5iB,WAELN,QAAO,SAAAY,GAAI,OAAIA,Q,kCAEH4C,GACf,IAAMnD,EAAWrJ,KAAK8Z,cAChBnU,EAAe3F,KAAK2F,aAE1B,OADA3F,KAAK2G,QAAQc,IAAI,eAAgB+E,GAC1BA,EAAQ1L,KAAI,SAAAE,GAAM,OAAIqI,EAAS2B,iBAAiBhK,MAASF,KAAI,SAASurB,EAAWziB,GACpF,IAAM5I,EAAS4I,EAAKrK,GACd4B,EAAoByI,EAAKnI,MAAOqD,gBACtC,MAAO,CACH1E,KAAMwJ,EAAKxJ,KACXqB,MAAOH,EAAcN,GACrBqK,MAAOzB,EAAKyB,OAAS,GACrBG,YAAa5B,EAAK4B,YAClBnB,UAAWlJ,EAAoB,GAAKH,EAAOqJ,UAC3CF,UAAWhJ,EAAqBH,EAAuBmJ,UAAY,GACnElJ,QAASD,EAAOC,QAAQC,cACxBwE,MAAOC,EAAaqT,SAAShY,GAAQjB,MACrCkI,SAAU2B,EAAK3B,SAAUnH,IAAIurB,S,oCAKrC,OAAOrsB,KAAKqJ,SAASvG,U,yCAGrB,OAAO9C,KAAK8Z,cAAcnQ,qB,iCAEZqb,GACd,IAAMsH,EAAMC,IAAIC,gBAAgBxH,GAEhC,OAAOhlB,KAAKysB,UAAU,CAClBnjB,IAAK,uBAAKojB,IAAKJ,EAAKK,IAAI,kBACxBvsB,KAAM,c,4BAGDwsB,EAAyB/B,GAAsB,IAAD,OACjDW,EAAWxrB,KAAK2rB,aAAaiB,EAAW9rB,KAAI,qBAAG8I,KAAgBrK,OAErE,OAAOS,KAAK8Z,cAAc3L,MAAMye,GAAYvI,MAAK,SAAApG,GAAM,OAAI,EAAK4O,aAAa5O,EAAQuN,EAAUX,Q,qCAS5E9Y,GACnB,IAAMsV,EAAiBrnB,KAAKqnB,eAAevkB,QACrCgqB,EAAa9sB,KAAKsnB,KAAKxkB,QAASiqB,cAChCza,EAAQP,EAAKO,MACbC,EAASR,EAAKQ,OAEpB,IAAKua,IAAeA,EAAW9oB,QAAUsO,IAAUC,EAC/C,OAAO,EAEX,IAAMvO,EAAQ8oB,EAAW9oB,MAAMhE,KAAK4E,QAC9BwkB,EAA6C,GAAhC/B,EAAe6C,eAC5BhB,EAA+C,GAAjC7B,EAAe4C,gBAC7BvX,EAAMX,EAAKW,IAAM0W,EACjB3W,EAAOV,EAAKU,KAAOyW,EAGnBnmB,EAAK,aACP2P,IAAI,GAAD,OAAKA,EAAL,MACHD,KAAK,GAAD,OAAKA,EAAL,MACJua,SAAU,WACV1a,MAAM,GAAD,OAAKA,EAAL,MACLC,OAAO,GAAD,OAAKA,EAAL,OACHvO,EAAMjB,OAQb,OANA/C,KAAKysB,UAAU,CACXnjB,IAAKtF,EAAMa,IACXpD,MAAOuC,EAAMvC,MACbrB,KAAK,IAAD,OAAM0sB,EAAWrqB,GAAjB,KACJiD,MAAO3C,IACRshB,KAAKyI,EAAW7oB,WACZ,I,2BAEEgpB,EAAgBvF,GACzB1nB,KAAK0O,cAAc+C,QAAQ,YAAa,CAAEwb,SAAQvF,WAAU,K,kCAG5D,IAAMwF,EAAgBlhB,SAASkhB,cAC3BA,GACCA,EAA8BrqB,OAEnC,IAAMsqB,EAAYnhB,SAASohB,eAEvBD,GACAA,EAAUE,kBAEdrtB,KAAKsG,SAASmX,QAAQ,U,mCA2CJ,IAAD,OACbjR,EAAUxM,KAAK+Z,qBAGnB,GAAe,IADAvN,EAAQhL,OACvB,CAGAgL,EAAU,CAACA,EAAQ,IAGnB,IAAMnD,EAAWrJ,KAAK8Z,cAChB0R,EAAWxrB,KAAK2rB,aAAanf,GAEnC,OAAOnD,EAASshB,WAAWne,EAAQ,IAAI6X,MAAK,SAAApG,GAAM,OAAI,EAAK4O,aAAa5O,EAAQuN,S,oCAE7D,IAAD,OACdhf,EAAUxM,KAAK+Z,qBAGnB,GAAe,IADAvN,EAAQhL,OACvB,CAGAgL,EAAU,CAACA,EAAQ,IAEnB,IAAMgf,EAAWxrB,KAAK2rB,aAAanf,GACnCxM,KAAK8Z,cAAc8Q,YAAYpe,EAAQ,IAAI6X,MAAK,SAAApG,GAAM,OAAI,EAAK4O,aAAa5O,EAAQuN,S,mCAGnEvN,EAAqBuN,EAAwBX,GAC9D7qB,KAAK2G,QAAQc,IAAI,eAAgBwW,GADkD,IAG3E1Q,EAAgC0Q,EAAhC1Q,MAAOQ,EAAyBkQ,EAAzBlQ,UAAWD,EAAcmQ,EAAdnQ,UAc1B,OAbA9N,KAAKstB,cAAc/f,EAAOie,GAEtBje,EAAM/L,SACDqpB,GACD7qB,KAAKmG,eAAeC,UAAU,OAAQ,CAClC2H,YACAD,cAIR9N,KAAKkrB,eAAe3d,GAAO,IAGxB0Q,M,GApqBqB9b,iBAAf4kB,GAKHlP,aAAe,CACzBvF,MAAO,IACPC,OAAQ,KC9DDwU,I7C4E0DpnB,G6C5E1DonB,MCGTwG,K9CyEmE5tB,G8CzEvB,SAAeM,GAC7D,OAAO,qBAAGgD,UAAU,SAASuqB,wBAAuBvtB,EAAM+J,gBACtD,qBAAGyjB,KAAK,yCAAyCzsB,OAAO,UACpD,uBAAK0rB,IAAI,yFAAiGC,IAAI,iBAClH,qBAAGc,KAAK,uCAAuCzsB,OAAO,UAClD,uBAAK0rB,IAAI,8FACb,qBAAGe,KAAK,uCAAuCzsB,OAAO,UAClD,uBAAK0rB,IAAI,iFAEb,2BACA,qBAAGe,KAAK,2EAA2EzsB,OAAO,UAAS,uBAAK2rB,IAAI,QAAQD,IAAI,8FACxH,qBAAGe,KAAK,4EAA4EzsB,OAAO,UAAS,uBAAK2rB,IAAI,SAASD,IAAI,+FAC1H,qBAAGe,KAAK,yEAAyEzsB,OAAO,UAAS,uBAAK2rB,IAAI,UAAUD,IAAI,gGACxH,qBAAGe,KAAK,yCAAyCzsB,OAAO,UAAS,uBAAK2rB,IAAI,MAAMD,IAAI,4FACpF,qBAAGe,KAAK,4EAA4EzsB,OAAO,UAAS,uBAAK2rB,IAAI,SAASD,IAAI,kG9C4DrFgB,iB8C1EJ,Q9C4E9B/tB,I8CoCIguB,G,4MA7FJztB,OAASiC,c,uDAEZ,OAAO,uBAAKc,UAAU,OAClB,gBAAC,GAAD,CACIM,IAAKvD,KAAKE,OACVinB,OAAO,IAEX,uBAAKlkB,UAAU,UACX,qBAAGwqB,KAAK,uCAAuCzsB,OAAO,UAAtD,YACA,qBAAGysB,KAAK,mDAAmDzsB,OAAO,UAAlE,OACA,qBAAGysB,KAAK,0CAA0CzsB,OAAO,UAAzD,iB,0CAIgB,IAAD,OACtB8V,OAAe9J,EAAIhN,KAAKE,OAAO4C,QAChC9C,KAAKE,OAAO4C,QAASmjB,WAAW,CAC5B,CACI3c,IAAK,uBAAKrG,UAAU,WAAWzD,gBAAgB,OAAOouB,gCAAgC,GAAjF,YACLxtB,KAAM,SACNsF,MAAO,CACHsnB,SAAU,WACVva,KAAM,MACNC,IAAK,MACLJ,MAAO,QACPC,OAAQ,QACR,YAAa,OACb,UAAa,4BACbvP,QAAS,OACT,kBAAmB,SACnB,iBAAkB,SAClB,aAAc,SACd,cAAe,MAGvB,CACIsG,IAAK,gBAAC,GAAD,MACLlJ,KAAM,WACNsF,MAAO,CACHsnB,SAAU,WACVva,KAAM,KACNC,IAAK,MACLJ,MAAO,QACP,aAAc,WAGtB,CACIhJ,IAAK,uBAAKrG,UAAU,WAAWzD,gBAAgB,OAAOouB,gCAAgC,GAAjF,8EACLxtB,KAAM,gBACNsF,MAAO,CACHsnB,SAAU,WACVva,KAAM,KACNC,IAAK,MACLJ,MAAO,QACP,YAAa,OACb,aAAc,SACd,cAAe,WAGvB,CACIhJ,IAAK,uBAAKrG,UAAU,YAAf,8EACL7C,KAAM,gBACNsF,MAAO,CACHsnB,SAAU,WACVva,KAAM,KACNC,IAAK,MACLJ,MAAO,QACP,YAAa,OACb,aAAc,SACd,cAAe,UAEnBrK,SAAU,CACN,CACIqB,IAAK,uBAAKrG,UAAU,YAAf,MACL7C,KAAM,SACNsF,MAAO,CACHsnB,SAAU,WACVva,KAAM,KACNC,IAAK,MACLJ,MAAO,QACP,YAAa,OACb,aAAc,SACd,cAAe,eAKhC,GAAM+R,MAAK,SAAA7X,GACV,EAAKtM,OAAO4C,QAASkX,mBAAmB,CAACxN,EAAQ,KAAK,U,GAzFhDrK,aCjBlBqG,IAAS6V,OACL,kBAAC,GAAD,MAEFrS,SAAS6hB,eAAe,U","file":"static/js/main.e7ba04f5.chunk.js","sourcesContent":["export const EDITOR_PROPERTIES = [\"memory\", \"eventBus\", \"keyManager\", \"moveableData\", \"moveableManager\", \"historyManager\", \"console\"];\nexport const PREFIX = \"scena-\";\nexport const DATA_SCENA_ELEMENT_ID = \"data-scena-element-id\";\nexport const DATA_SCENA_ELEMENT = \"data-scena-element\";\nexport const userAgent = ((typeof navigator !== \"undefined\" && navigator) || {} as any).userAgent || \"\";\nexport const isMacintosh = userAgent.indexOf('Macintosh') >= 0 || userAgent.indexOf('iPad') >= 0 || userAgent.indexOf('iPhone') >= 0;\nexport const TYPE_SCENA_LAYERS = \"application/x-scena-layers\";\n","import { prefixNames } from \"framework-utils\";\nimport { PREFIX, DATA_SCENA_ELEMENT_ID } from \"../consts\";\nimport { EDITOR_PROPERTIES } from \"../consts\";\nimport { ScenaFunctionComponent, ScenaProps, ScenaComponent, ScenaJSXElement, ScenaFunctionJSXElement } from \"../types\";\nimport { IObject } from \"@daybrush/utils\";\nimport { isFunction, isObject } from \"util\";\n\nexport function prefix(...classNames: string[]) {\n    return prefixNames(PREFIX, ...classNames);\n}\nexport function getContentElement(el: HTMLElement): HTMLElement | null {\n    if (el.contentEditable === \"inherit\") {\n        return getContentElement(el.parentElement!);\n    }\n    if (el.contentEditable === \"true\")  {\n        return el;\n    }\n    return null;\n}\n\nexport function connectEditorProps(component: any) {\n    const prototype = component.prototype;\n    Object.defineProperty(prototype, \"editor\", {\n        get: function () {\n            return this.props.editor;\n        },\n    });\n    EDITOR_PROPERTIES.forEach(name => {\n        Object.defineProperty(prototype, name, {\n            get: function () {\n                return this.props.editor[name];\n            },\n        });\n    })\n};\nexport function between(val: number, min: number, max: number) {\n    return Math.min(Math.max(min, val), max);\n}\n\nexport function getId(el: HTMLElement | SVGElement) {\n    return el.getAttribute(DATA_SCENA_ELEMENT_ID)!;\n}\nexport function getIds(els: Array<HTMLElement | SVGElement>): string[] {\n    return els.map(el => getId(el));\n}\n\nexport function checkInput(target: HTMLElement | SVGElement) {\n    const tagName = target.tagName.toLowerCase();\n\n    return (target as HTMLElement).isContentEditable || tagName === \"input\" || tagName === \"textarea\";\n}\nexport function checkImageLoaded(el: HTMLElement | SVGElement): Promise<any> {\n    if (el.tagName.toLowerCase() !== \"img\") {\n        return Promise.all([].slice.call(el.querySelectorAll(\"img\")).map(el => checkImageLoaded(el)));\n    }\n    return new Promise(resolve => {\n        if ((el as HTMLImageElement).complete) {\n            resolve();\n        } else {\n            el.addEventListener(\"load\", function loaded() {\n                resolve();\n\n                el.removeEventListener(\"load\", loaded);\n            })\n        }\n    });\n}\n\nexport function getParnetScenaElement(el: HTMLElement | SVGElement): HTMLElement | SVGElement | null {\n    if (!el) {\n        return null;\n    }\n    if (el.hasAttribute(DATA_SCENA_ELEMENT_ID)) {\n        return el;\n    }\n    return getParnetScenaElement(el.parentElement as HTMLElement | SVGElement);\n}\n\nexport function makeScenaFunctionComponent<T = IObject<any>>(id: string, component: (props: ScenaProps & T) => React.ReactElement<any, any>): ScenaFunctionComponent<T> {\n    (component as ScenaFunctionComponent<T>).scenaComponentId = id;\n\n    return component as ScenaFunctionComponent<T>;\n}\n\nexport function getScenaAttrs(el: HTMLElement | SVGElement) {\n    const attributes = el.attributes;\n    const length = attributes.length;\n    const attrs: IObject<any> = {};\n\n    for (let i = 0; i < length; ++i) {\n        const { name, value } = attributes[i];\n\n        if (name === DATA_SCENA_ELEMENT_ID || name === \"style\") {\n            continue;\n        }\n        attrs[name] = value;\n    }\n\n    return attrs;\n}\n\nexport function isScenaFunction(value: any): value is ScenaComponent {\n    return isFunction(value) && \"scenaComponentId\" in value;\n}\n\nexport function isScenaElement(value: any): value is ScenaJSXElement {\n    return isObject(value) && !isScenaFunction(value);\n}\nexport function isScenaFunctionElement(value: any): value is ScenaFunctionJSXElement {\n    return isScenaElement(value) && isFunction(value.type);\n}\n\nexport function isNumber(value: any): value is number {\n    return typeof value === \"number\";\n}\n","import * as React from \"react\";\nimport { prefix, connectEditorProps } from \"../utils/utils\";\nimport { IObject, camelize } from \"@daybrush/utils\";\nimport Memory from \"../utils/Memory\";\nimport Editor from \"../Editor\";\nimport { EditorInterface } from \"../types\";\n\n\nexport interface Maker {\n    tag: string,\n    attrs: IObject<any>,\n    style: IObject<any>,\n}\n\n@connectEditorProps\nexport default abstract class Icon extends React.PureComponent<{\n    editor: Editor,\n    selected?: boolean,\n    onSelect?: (id: string) => any;\n}> {\n    public static id: string;\n    public static maker?: (memory: Memory) => Maker;\n    public static makeThen: (target: HTMLElement | SVGElement) => any = () => { };\n    public keys: string[] = [];\n    public abstract renderIcon(): any;\n    private subContainer = React.createRef<HTMLDivElement>();\n    public render() {\n        return (\n            <div className={prefix(\"icon\", this.props.selected ? \"selected\" : \"\")}\n                onClick={this.onClick}>\n                {this.renderIcon()}\n                {this.renderSubContainer()}\n            </div>\n        );\n    }\n    public renderSubContainer() {\n        const subIcons = this.renderSubIcons();\n\n        if (!subIcons.length) {\n            return;\n        }\n        return [\n            <div key={\"extends-icon\"} className={prefix(\"extends-icon\")}></div>,\n            this.props.selected && <div key={\"extends-container\"}\n                className={prefix(\"extends-container\")} ref={this.subContainer}\n                onClick={this.onSubClick}\n            >\n                {subIcons}\n            </div>,\n        ];\n    }\n    public renderSubIcons(): any[] {\n        return [];\n    }\n    public renderSubIcon(IconClass: typeof Icon, id: string, isSelect: boolean) {\n        return <div key={id} className={prefix(\"icon\", \"sub-icon\", isSelect ? \"selected\" : \"\")} onClick={() => {\n            this.onSubSelect!(id);\n        }}>\n            <IconClass editor={this.props.editor} selected={false} />\n            <div className={prefix(\"sub-icon-label\")}>\n                {camelize(` ${id}`)}\n            </div>\n        </div>;\n    }\n    public onClick = () => {\n        if (this.props.selected) {\n            this.focusSub();\n        }\n        const onSelect = this.props.onSelect;\n\n        if (onSelect) {\n            onSelect((this.constructor as any).id);\n        }\n    }\n    public onSubClick = (e: any) => {\n        e.stopPropagation();\n    }\n    public focusSub() {\n        const subContainer = this.subContainer.current;\n        if (!subContainer) {\n            return;\n        }\n\n        if (subContainer.style.display === \"block\") {\n            subContainer.style.display = \"none\";\n        } else {\n            subContainer.style.display = \"block\";\n        }\n    }\n    public blur = () => {\n        const subContainer = this.subContainer.current;\n        if (!subContainer) {\n            return;\n        }\n\n        subContainer.style.display = \"none\";\n    }\n    public onSubSelect(id: string) { }\n    public componentDidMount() {\n        const keys = this.keys;\n        if (keys.length) {\n            this.keyManager.keydown(keys, e => {\n                if (e.ctrlKey || e.metaKey) {\n                    return false;\n                }\n                this.onClick();\n            }, (this.constructor as any).id);\n        }\n    }\n}\n\nexport default interface Icon extends EditorInterface {}\n","import * as React from \"react\";\nimport Icon from \"./Icon\";\n\nexport default class MoveToolIcon extends Icon {\n    public static id = \"MoveTool\";\n    public keys = [\"v\"];\n    public renderIcon() {\n        return (\n            <svg viewBox=\"0 0 80 80\">\n                <path\n                    d=\"M 21,21 L 35,60 L 40,44 L 54,58 A 3,3 0,0,0, 58,54 L 44,40 L 60,35 L 21,21Z\"\n                    fill=\"#222\" strokeLinejoin=\"round\"\n                    strokeWidth=\"3\" stroke=\"#eee\"\n                    style={{ transformOrigin: \"42px 42px\", transform: \"rotate(10deg)\" }} />\n            </svg>\n        );\n    }\n}\n","import * as React from \"react\";\nimport Icon from \"./Icon\";\nimport Memory from \"../utils/Memory\";\n\nexport default class TextIcon extends Icon {\n    public static id = \"Text\";\n    public keys = [\"t\"];\n    public static maker = (memory: Memory) => ({\n        tag: \"div\",\n        attrs: {\n            contenteditable: true,\n        },\n        style: {\n            color: memory.get(\"color\"),\n        },\n    });\n    public static makeThen = (target: HTMLElement | SVGElement) => {\n        target.focus();\n    };\n    public renderIcon() {\n        return (\n            <svg viewBox=\"0 0 80 80\">\n                <g transform=\"matrix(0.987601,0,0,0.987601,-1.97306,0.554734)\">\n                    <path\n                        // tslint:disable-next-line: max-line-length\n                        d=\"M64.286,17.81L20.714,17.81L20.714,29.56L29.214,23L39.262,23L39.262,55.476L27.77,61.262L27.77,62.071L57.23,62.071L57.23,61.262L45.738,55.476L45.738,23L55.786,23L64.286,29.56L64.286,17.81Z\"\n                        style={{ fill: \"white\" }} />\n                </g>\n            </svg>\n        );\n    }\n}\n","import * as React from \"react\";\nimport Icon from \"./Icon\";\nimport Memory from \"../utils/Memory\";\n\nexport default class OvalIcon extends Icon {\n    public static id = \"Oval\";\n    public static maker = (memory: Memory) => ({\n        tag: \"div\",\n        attrs: {},\n        style: {\n            \"background-color\": memory.get(\"background-color\"),\n            \"border-radius\": \"50%\",\n        },\n    });\n    public renderIcon() {\n        return (\n            <svg viewBox=\"0 0 73 73\">\n                <ellipse fill=\"#555\" cx=\"36.5\" cy=\"36.5\" rx=\"20\" ry=\"15\"\n                    strokeLinejoin=\"round\" strokeWidth=\"3\" stroke=\"#fff\"></ellipse></svg>\n        );\n    }\n}\n","import * as React from \"react\";\nimport Icon from \"./Icon\";\nimport Memory from \"../utils/Memory\";\n\nexport default class RectIcon extends Icon {\n    public static id = \"Rect\";\n    public static maker = (memory: Memory) => ({\n        tag: \"div\",\n        attrs: {},\n        style: {\n            \"background-color\": memory.get(\"background-color\"),\n        },\n    });\n    public renderIcon() {\n        return (\n            <svg viewBox=\"0 0 73 73\">\n                <path d=\"M16.5,21.5 h40 a0,0 0 0 1 0,0 v30 a0,0 0 0 1 -0,0 h-40 a0,0 0 0 1 -0,-0 v-30 a0,0 0 0 1 0,-0 z\"\n                    fill=\"#555\" strokeLinejoin=\"round\" strokeWidth=\"3\" stroke=\"#fff\"></path>\n            </svg>\n        );\n    }\n}\n","import * as React from \"react\";\nimport Icon from \"./Icon\";\nimport Memory from \"../utils/Memory\";\n\nexport default class CircleIcon extends Icon {\n    public static id = \"Circle\";\n    public static maker = (memory: Memory) => ({\n        tag: \"div\",\n        attrs: {},\n        style: {\n            \"background-color\": memory.get(\"background-color\"),\n            \"border-radius\": \"50%\",\n        },\n    });\n    public renderIcon() {\n        return (\n            <svg viewBox=\"0 0 73 73\">\n                <ellipse fill=\"#555\" cx=\"36.5\" cy=\"36.5\" rx=\"15\" ry=\"15\"\n                    strokeLinejoin=\"round\" strokeWidth=\"3\" stroke=\"#fff\"></ellipse></svg>\n        );\n    }\n}\n","import * as React from \"react\";\nimport Icon from \"./Icon\";\n\nexport default class PolygonIcon extends Icon {\n    public static id = \"Polygon\";\n    public renderIcon() {\n        return (\n            <svg viewBox=\"0 0 73 73\">\n                <path d=\"M 20,15 L 10,35 L 20,55 L 35,45 L 40, 50 L 55,31 L 41,15 L 30, 25 Z\"\n                    fill=\"#555\" strokeLinejoin=\"round\" strokeWidth=\"3\" stroke=\"#fff\"></path>\n            </svg>\n        );\n    }\n}\n","import * as React from \"react\";\nimport Icon from \"./Icon\";\nimport { splitBracket } from \"@daybrush/utils\";\nimport OvalIcon from \"./OvalIcon\";\nimport RectIcon from \"./RectIcon\";\nimport CircleIcon from \"./CircleIcon\";\nimport PolygonIcon from \"./PolygonIcon\";\n\nexport default class CropIcon extends Icon {\n    public static id = \"Crop\";\n    public keys = [\"c\"];\n    public renderIcon() {\n        return (\n            <svg viewBox=\"0 0 80 80\">\n                <path\n                    // tslint:disable-next-line: max-line-length\n                    d=\"M25,10L25,50L65,50   M10,25L50,25L50,65\"\n                    style={{ stroke: \"white\", strokeWidth: 5, fill: \"none\" }} />\n            </svg>\n        );\n    }\n    public renderSubIcons() {\n        const frame = this.moveableData.getSelectedFrames()[0];\n        let cropType = this.memory.get(\"crop\") || \"inset\";\n\n        if (frame) {\n            const clipPath = frame.get(\"clip-path\") || frame.get(\"clip\");\n\n            if (clipPath) {\n                cropType = splitBracket(clipPath).prefix!;\n            }\n        }\n        return [\n            this.renderSubIcon(RectIcon, \"inset\", cropType === \"inset\"),\n            this.renderSubIcon(RectIcon, \"rect\", cropType === \"rect\"),\n            this.renderSubIcon(CircleIcon, \"circle\", cropType === \"circle\"),\n            this.renderSubIcon(OvalIcon, \"ellipse\", cropType === \"ellipse\"),\n            this.renderSubIcon(PolygonIcon, \"polygon\", cropType === \"polygon\"),\n        ];\n    }\n    public onSubSelect(id: string) {\n        const moveableData = this.moveableData;\n        const frame = moveableData.getSelectedFrames()[0];\n\n        if (frame) {\n            const clipPath = frame.get(\"clip-path\") || frame.get(\"clip\");\n\n            if (clipPath) {\n                const cropType = splitBracket(clipPath).prefix!;\n\n                if (id !== cropType) {\n                    const infos = moveableData.removeProperties(\"clip-path\", \"clip\");\n\n                    this.historyManager.addAction(\"renders\", { infos });\n                }\n            }\n        }\n\n        this.memory.set(\"crop\", id);\n        this.eventBus.requestTrigger(\"update\");\n\n        this.forceUpdate();\n    }\n}\n","import * as React from \"react\";\nimport Icon from \"./Icon\";\nimport Memory from \"../utils/Memory\";\n\nexport default class RoundRectIcon extends Icon {\n    public static id = \"RoundRect\";\n    public static maker = (memory: Memory) => ({\n        tag: \"div\",\n        attrs: {},\n        style: {\n            \"background-color\": memory.get(\"background-color\"),\n            \"border-radius\": \"10px\",\n        },\n    });\n    public renderIcon() {\n        return (\n            <svg viewBox=\"0 0 73 73\">\n                <path d=\"M26.5,21.5 h20 a10,10 0 0 1 10,10 v10 a10,10 0 0 1 -10,10 h-20 a10,10 0 0 1 -10,-10 v-10 a10,10 0 0 1 10,-10 z\"\n                    fill=\"#555\" strokeLinejoin=\"round\" strokeWidth=\"3\" stroke=\"#fff\"></path>\n            </svg>\n        );\n    }\n}\n","import KeyController from \"keycon\";\nimport Debugger from \"../utils/Debugger\";\nimport { checkInput } from \"../utils/utils\";\n\nfunction check(e: any) {\n    const inputEvent = e.inputEvent;\n    const target = inputEvent.target;\n\n    if (checkInput(target)) {\n        return false;\n    }\n    return true;\n}\nexport default class KeyManager {\n    constructor(private console: Debugger) { }\n    public keycon = new KeyController();\n    public keylist: Array<[string[], string]> = [];\n    public isEnable = true;\n\n    public enable() {\n        this.isEnable = true;\n    }\n    public disable() {\n        this.isEnable = false;\n    }\n    public keydown(keys: string[], callback: (e: any) => any, description?: any) {\n        this.keycon.keydown(keys, this.addCallback(\"keydown\", keys, callback, description));\n    }\n    public keyup(keys: string[], callback: (e: any) => any, description?: any) {\n        this.keycon.keyup(keys, this.addCallback(\"keyup\", keys, callback, description));\n    }\n    get altKey() {\n        return this.keycon.altKey;\n    }\n    get shiftKey() {\n        return this.keycon.shiftKey;\n    }\n    get metaKey() {\n        return this.keycon.metaKey;\n    }\n    get ctrlKey() {\n        return this.keycon.ctrlKey;\n    }\n    public destroy() {\n        this.keycon.destroy();\n    }\n    private addCallback(type: string, keys: string[], callback: (e: any) => any, description?: string) {\n        if (description) {\n            this.keylist.push([\n                keys,\n                description,\n            ]);\n        }\n        return (e: any) => {\n            if (!this.isEnable || !check(e)) {\n                return false;\n            }\n            const result = callback(e);\n\n            if (result !== false && description) {\n                this.console.log(`${type}: ${keys.join(\" + \")}`, description);\n            }\n        };\n    }\n}\n","import * as React from \"react\";\nimport { prefix, connectEditorProps } from \"../utils/utils\";\nimport \"./Popup.css\";\nimport Editor from \"../Editor\";\nimport { EditorInterface } from \"../types\";\nimport KeyManager from \"../KeyManager/KeyManager\";\n\n@connectEditorProps\nexport default class Popup extends React.PureComponent<{\n    editor: Editor,\n    onClose: () => any,\n}> {\n    public overlayElement = React.createRef<HTMLDivElement>();\n    public popupKeyManager = new KeyManager(this.console);\n    public render() {\n        return <div ref={this.overlayElement} className={prefix(\"overlay\")} onClick={this.onClick}>\n            <div className={prefix(\"popup\")}>\n                <div className={prefix(\"close\")} onClick={this.props.onClose}></div>\n                {this.props.children}\n            </div>\n        </div>;\n    }\n    public componentDidMount() {\n        this.keyManager.disable();\n        this.popupKeyManager.keyup([\"esc\"], () => {\n            this.props.onClose();\n        });\n    }\n    public componentWillUnmount() {\n        this.keyManager.enable();\n        this.popupKeyManager.destroy();\n    }\n    public onClick = (e: any) => {\n        e.stopPropagation();\n        if (e.target === this.overlayElement.current) {\n            this.props.onClose();\n        }\n    }\n}\n\n\nexport default interface Popup extends EditorInterface {}\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport Icon from \"./Icon\";\nimport { prefix } from \"../utils/utils\";\nimport Popup from \"../Popup/Popup\";\n\nexport default class KeyboardIcon extends Icon {\n    public static id = \"Shortcuts\";\n    public keys = [\"s\"];\n    public state = {\n        renderPopup: false,\n    }\n    public renderIcon() {\n        return (\n            <div className={prefix(\"i\")}>\n                <div className={prefix(\"keyboard\")}>\n                    <div className={prefix(\"key\")}></div>\n                    <div className={prefix(\"key\")}></div>\n                    <div className={prefix(\"key\")}></div>\n                    <div className={prefix(\"key\")}></div>\n                    <div className={prefix(\"key\")}></div>\n                    <div className={prefix(\"key\")}></div>\n                    <div className={prefix(\"key\")}></div>\n                    <div className={prefix(\"space\")}></div>\n                </div>\n                {this.state.renderPopup && this.renderPopup()}\n            </div>\n        );\n    }\n    public renderPopup() {\n        return ReactDOM.createPortal(<Popup editor={this.editor} onClose={this.onClose}>\n            <h2>Shortcuts</h2>\n            <ul className={prefix(\"key-list\")}>\n                {this.keyManager.keylist.map(([keys, description]) => {\n                    return <li key={keys.join(\"+\")}>\n                        <p className={prefix(\"key-description\")}>{description} <strong>{keys.map(key => <span key={key}>{key}</span>)}</strong></p>\n                    </li>\n                })}\n            </ul>\n        </Popup>, this.editor.editorElement.current!);\n    }\n    public onClick = () => {\n        this.setState({\n            renderPopup: true,\n        })\n    }\n    public onClose = () => {\n        this.setState({\n            renderPopup: false,\n        })\n    }\n}\n","import * as React from \"react\";\nimport { prefix } from \"../utils/utils\";\nimport MoveToolIcon from \"./MoveToolIcon\";\nimport \"./Menu.css\";\nimport TextIcon from \"./TextIcon\";\nimport CropIcon from \"./CropIcon\";\nimport RectIcon from \"./RectIcon\";\nimport OvalIcon from \"./OvalIcon\";\nimport RoundRectIcon from \"./RoundRectIcon\";\nimport Icon from \"./Icon\";\nimport Editor from \"../Editor\";\nimport KeyboardIcon from \"./KeyboardIcon\";\n\nconst MENUS: Array<typeof Icon> = [\n    MoveToolIcon,\n    TextIcon,\n    CropIcon,\n    RectIcon,\n    RoundRectIcon,\n    OvalIcon,\n];\nexport default class Menu extends React.PureComponent<{\n    editor: Editor,\n    onSelect: (id: string) => any\n}> {\n    public state = {\n        selected: \"MoveTool\",\n    };\n    public menuRefs: Array<React.RefObject<Icon>> = [];\n    public render() {\n        return (\n            <div className={prefix(\"menu\")}>\n                {this.renderMenus()}\n                <div className={prefix(\"menu-bottom\")}>\n                    <KeyboardIcon editor={this.props.editor} />\n                </div>\n            </div>\n        );\n    }\n    public renderMenus() {\n        const selected = this.state.selected;\n        const menuRefs = this.menuRefs;\n        const editor = this.props.editor;\n\n        return MENUS.map((MenuClass, i) => {\n            const id = MenuClass.id;\n            if (!menuRefs[i]) {\n                menuRefs[i] = React.createRef();\n            }\n            return <MenuClass ref={menuRefs[i]} key={id} editor={editor} selected={selected === id} onSelect={this.select} />;\n        });\n    }\n    public select = (id: string) => {\n        this.setState({\n            selected: id,\n        });\n        this.props.onSelect(id);\n    }\n    public getSelected(): typeof Icon | undefined {\n        const selected = this.state.selected;\n        return MENUS.filter(m => m.id === selected)[0];\n    }\n    public blur() {\n        this.menuRefs.forEach(ref => {\n            if (!ref.current) {\n                return;\n            }\n            ref.current.blur();\n        });\n    }\n}\n","import * as React from \"react\";\nimport { IObject, isString, isArray } from \"@daybrush/utils\";\nimport { prefix, getId, getScenaAttrs, isScenaFunction, isScenaElement, isNumber, isScenaFunctionElement } from \"../utils/utils\";\nimport { DATA_SCENA_ELEMENT_ID } from \"../consts\";\nimport { ScenaJSXElement, ScenaComponent, ScenaJSXType } from \"../types\";\n\nexport interface AddedInfo {\n    added: ElementInfo[];\n}\nexport interface RemovedInfo {\n    removed: ElementInfo[];\n}\nexport interface MovedInfo {\n    info: ElementInfo;\n    parentInfo: ElementInfo;\n    prevInfo?: ElementInfo;\n}\nexport interface MovedResult {\n    moved: ElementInfo[];\n    prevInfos: MovedInfo[];\n    nextInfos: MovedInfo[];\n}\nexport interface ElementInfo {\n    jsx: ScenaJSXType;\n    name: string;\n    frame?: IObject<any>;\n\n    scopeId?: string;\n    children?: ElementInfo[];\n    attrs?: IObject<any>;\n    componentId?: string;\n    jsxId?: string;\n    el?: HTMLElement | null;\n    id?: string;\n    index?: number;\n    innerText?: string;\n    innerHTML?: string;\n}\nexport default class Viewport extends React.PureComponent<{\n    style: IObject<any>,\n    onBlur: (e: any) => any,\n}> {\n    public components: IObject<ScenaComponent> = {};\n    public jsxs: IObject<ScenaJSXElement> = {};\n    public viewport: ElementInfo = {\n        jsx: <div></div>,\n        name: \"Viewport\",\n        id: \"viewport\",\n        children: [],\n    };\n    public ids: IObject<ElementInfo> = {\n        viewport: this.viewport,\n    };\n    public state = {};\n    public viewportRef = React.createRef<HTMLDivElement>();\n    public render() {\n        const style = this.props.style;\n\n        return <div className={prefix(\"viewport-container\")} onBlur={this.props.onBlur} style={style}>\n            {this.props.children}\n            <div className={prefix(\"viewport\")} {...{ [DATA_SCENA_ELEMENT_ID]: \"viewport\" }} ref={this.viewportRef}>\n                {this.renderChildren(this.getViewportInfos())}\n            </div>\n        </div>;\n    }\n    public componentDidMount() {\n        this.ids.viewport.el = this.viewportRef.current!;\n    }\n    public renderChildren(children: ElementInfo[]): ScenaJSXElement[] {\n        return children.map(info => {\n            const jsx = info.jsx;\n            const nextChildren = info.children!;\n            const renderedChildren = this.renderChildren(nextChildren);\n            const id = info.id!;\n            const props: IObject<any> = {\n                key: id,\n            };\n            if (isString(jsx)) {\n                props[DATA_SCENA_ELEMENT_ID] = id;\n                return React.createElement(jsx, props, ...renderedChildren) as ScenaJSXElement;\n            } else if (isScenaFunction(jsx)) {\n                props.scenaElementId = id;\n                props.scenaAttrs = info.attrs || {};\n                props.scenaText = info.innerText;\n                props.scenaHTML = info.innerHTML;\n\n                return React.createElement(jsx, props) as ScenaJSXElement;\n            } else if (isString(jsx.type)) {\n                props[DATA_SCENA_ELEMENT_ID] = id;\n            } else {\n                props.scenaElementId = id;\n                props.scenaAttrs = info.attrs || {};\n                props.scenaText = info.innerText;\n                props.scenaHTML = info.innerHTML;\n            }\n            const jsxChildren = jsx.props.children;\n            return React.cloneElement(jsx, { ...jsx.props, ...props },\n                ...(isArray(jsxChildren) ? jsxChildren : [jsxChildren]),\n                ...this.renderChildren(nextChildren),\n            ) as ScenaJSXElement;\n        });\n    }\n    public getJSX(id: string) {\n        return this.jsxs[id];\n    }\n    public getComponent(id: string) {\n        return this.components[id];\n    }\n\n    public makeId(ids: IObject<any> = this.ids) {\n\n        while (true) {\n            const id = `scena${Math.floor(Math.random() * 100000000)}`;\n\n            if (ids[id]) {\n                continue;\n            }\n            return id;\n        }\n    }\n    public setInfo(id: string, info: ElementInfo) {\n        const ids = this.ids;\n\n        ids[id] = info;\n    }\n    public getInfo(id: string) {\n        return this.ids[id];\n    }\n\n    public getLastChildInfo(id: string) {\n        const info = this.getInfo(id);\n        const children = info.children!;\n\n        return children[children.length - 1];\n    }\n    public getNextInfo(id: string) {\n        const info = this.getInfo(id);\n        const parentInfo = this.getInfo(info.scopeId!)!;\n        const parentChildren = parentInfo.children!;\n        const index = parentChildren.indexOf(info);\n\n        return parentChildren[index + 1];\n    }\n    public getPrevInfo(id: string) {\n        const info = this.getInfo(id);\n        const parentInfo = this.getInfo(info.scopeId!)!;\n        const parentChildren = parentInfo.children!;\n        const index = parentChildren.indexOf(info);\n\n        return parentChildren[index - 1];\n    }\n    public getInfoByElement(el: HTMLElement | SVGElement) {\n        return this.ids[getId(el)];\n    }\n    public getInfoByIndexes(indexes: number[]) {\n        return indexes.reduce((info: ElementInfo, index: number) => {\n            return info.children![index];\n        }, this.viewport);\n    }\n    public getElement(id: string) {\n        const info = this.getInfo(id);\n\n        return info ? info.el : null;\n    }\n    public getViewportInfos() {\n        return this.viewport.children!;\n    }\n    public getIndexes(target: HTMLElement | SVGElement | string): number[] {\n        const info = (isString(target) ? this.getInfo(target) : this.getInfoByElement(target))!;\n\n        if (!info.scopeId) {\n            return [];\n        }\n        const parentInfo = this.getInfo(info.scopeId)!;\n\n        return [...this.getIndexes(info.scopeId), parentInfo.children!.indexOf(info)];\n    }\n    public registerChildren(jsxs: ElementInfo[], parentScopeId?: string) {\n        return jsxs.map(info => {\n            const id = info.id || this.makeId();\n            const jsx = info.jsx;\n            const children = info.children || [];\n            const scopeId = parentScopeId || info.scopeId || \"viewport\";\n            let componentId = \"\";\n            let jsxId = \"\";\n\n\n            if (isScenaElement(jsx)) {\n                jsxId = this.makeId(this.jsxs);\n\n                this.jsxs[jsxId] = jsx;\n                // const component = jsx.type;\n                // componentId = component.scenaComponentId;\n                // this.components[componentId] = component;\n            }\n            const elementInfo: ElementInfo = {\n                ...info,\n                jsx,\n                children: this.registerChildren(children, id),\n                scopeId,\n                componentId,\n                jsxId,\n                frame: info.frame || {},\n                el: null,\n                id,\n            };\n            this.setInfo(id, elementInfo);\n            return elementInfo;\n        });\n    }\n    public appendJSXs(jsxs: ElementInfo[], appendIndex: number, scopeId?: string): Promise<AddedInfo> {\n        const jsxInfos = this.registerChildren(jsxs, scopeId);\n\n        jsxInfos.forEach((info, i) => {\n            const scopeInfo = this.getInfo(scopeId || info.scopeId!);\n            const children = scopeInfo.children!;\n\n            if (appendIndex > -1) {\n                children.splice(appendIndex + i, 0, info);\n                info.index = appendIndex + i;\n            } else if (isNumber(info.index)) {\n                children.splice(info.index, 0, info);\n            } else {\n                info.index = children.length;\n                children.push(info);\n            }\n        });\n\n        return new Promise(resolve => {\n            this.forceUpdate(() => {\n                const infos = jsxInfos.map(function registerElement(info) {\n                    const id = info.id!;\n\n                    const target = document.querySelector<HTMLElement>(`[${DATA_SCENA_ELEMENT_ID}=\"${id}\"]`)!;\n                    const attrs = info.attrs || {};\n\n                    info.el = target;\n\n                    for (const name in attrs) {\n                        target.setAttribute(name, attrs[name]);\n                    }\n                    info.attrs = getScenaAttrs(target);\n                    const children = info.children || [];\n\n                    if (children.length) {\n                        children.forEach(registerElement);\n                    } else if (info.attrs!.contenteditable) {\n                        if (\"innerText\" in info) {\n                            (target as HTMLElement).innerText = info.innerText || \"\";\n                        } else {\n                            info.innerText = (target as HTMLElement).innerText || \"\";\n                        }\n                    } else if (!info.componentId) {\n                        if (\"innerHTML\" in info) {\n                            target.innerHTML = info.innerHTML || \"\";\n                        } else {\n                            info.innerHTML = target.innerHTML || \"\";\n                        }\n                    }\n                    return { ...info };\n                });\n                resolve({\n                    added: infos,\n                });\n            });\n        });\n    }\n    public getIndex(id: string | HTMLElement) {\n        const indexes = this.getIndexes(id);\n        const length = indexes.length;\n        return length ? indexes[length - 1] : -1;\n    }\n    public getElements(ids: string[]) {\n        return ids.map(id => this.getElement(id)).filter(el => el) as Array<HTMLElement | SVGElement>;\n    }\n    public unregisterChildren(children: ElementInfo[], isChild?: boolean): ElementInfo[] {\n        const ids = this.ids;\n\n        return children.slice(0).map(info => {\n            const target = info.el!;\n            let innerText = \"\";\n            let innerHTML = \"\";\n\n            if (info.attrs!.contenteditable) {\n                innerText = (target as HTMLElement).innerText;\n            } else {\n                innerHTML = target.innerHTML;\n            }\n\n            if (!isChild) {\n                const parentInfo = this.getInfo(info.scopeId!);\n                const parentChildren = parentInfo.children!;\n                const index = parentChildren.indexOf(info);\n                parentInfo.children!.splice(index, 1);\n            }\n            const nextChildren = this.unregisterChildren(info.children!, true);\n\n            delete ids[info.id!];\n            delete info.el;\n\n            return {\n                ...info,\n                innerText,\n                innerHTML,\n                attrs: getScenaAttrs(target),\n                children: nextChildren,\n            };\n        });\n    }\n    public removeTargets(targets: Array<HTMLElement | SVGElement>): Promise<RemovedInfo> {\n        const removedChildren = this.getSortedTargets(targets).map(target => {\n            return this.getInfoByElement(target);\n        }).filter(info => info) as ElementInfo[];\n        const indexes = removedChildren.map(info => this.getIndex(info.id!));\n        const removed = this.unregisterChildren(removedChildren);\n\n        removed.forEach((info, i) => {\n            info.index = indexes[i];\n        })\n        return new Promise(resolve => {\n            this.forceUpdate(() => {\n                resolve({\n                    removed,\n                });\n            })\n        });\n    }\n    public getSortedIndexesList(targets: Array<string | HTMLElement | SVGElement | number[]>) {\n        const indexesList = targets.map(target => {\n            if (Array.isArray(target)) {\n                return target;\n            }\n            return this.getIndexes(target!)\n        });\n\n        indexesList.sort((a, b) => {\n            const aLength = a.length;\n            const bLength = b.length;\n            const length = Math.min(aLength, bLength);\n\n            for (let i = 0; i < length; ++i) {\n                if (a[i] === b[i]) {\n                    continue;\n                }\n                return a[i] - b[i];\n            }\n            return aLength - bLength;\n        });\n\n        return indexesList;\n    }\n    public getSortedTargets(targets: Array<string | HTMLElement | SVGElement>) {\n        return this.getSortedInfos(targets).map(info => info.el!);\n    }\n    public getSortedInfos(targets: Array<string | HTMLElement | SVGElement>) {\n        const indexesList = this.getSortedIndexesList(targets);\n\n        return indexesList.map(indexes => this.getInfoByIndexes(indexes));\n    }\n    public moveInside(target: HTMLElement | SVGElement | string): Promise<MovedResult> {\n        const info = isString(target) ? this.getInfo(target)! : this.getInfoByElement(target)!;\n\n        const prevInfo = this.getPrevInfo(info.id!);\n\n        let moved: ElementInfo[];\n\n        if (!prevInfo || isScenaFunction(prevInfo.jsx) || isScenaFunctionElement(prevInfo.jsx)) {\n            moved = [];\n        } else {\n            moved = [info];\n        }\n        const lastInfo = prevInfo && this.getLastChildInfo(prevInfo.id!);\n        return this.move(moved, prevInfo, lastInfo);\n    }\n    public moveOutside(target: HTMLElement | SVGElement | string): Promise<MovedResult> {\n        const info = isString(target) ? this.getInfo(target)! : this.getInfoByElement(target)!;\n        const parentInfo = this.getInfo(info.scopeId!);\n        const rootInfo = this.getInfo(parentInfo.scopeId!);\n\n        const moved = rootInfo ? [info] : [];\n\n        return this.move(moved, rootInfo, parentInfo);\n    }\n    public moves(nextInfos: Array<{ info: ElementInfo, parentInfo: ElementInfo, prevInfo?: ElementInfo }>): Promise<MovedResult> {\n        const prevInfos = nextInfos.map(({ info }) => {\n            return {\n                info,\n                parentInfo: this.getInfo(info.scopeId!),\n                prevInfo: this.getPrevInfo(info.id!),\n            };\n        });\n        nextInfos.forEach(({ info, parentInfo, prevInfo }) => {\n            const children = this.getInfo(info.scopeId!).children!;\n\n            children.splice(children.indexOf(info), 1);\n\n\n            const parnetChildren = parentInfo.children!;\n            parnetChildren.splice(prevInfo ? parnetChildren.indexOf(prevInfo) + 1 : 0, 0, info);\n\n            info.scopeId = parentInfo.id;\n        });\n\n        const infos = nextInfos.map(({ info }) => info);\n\n        return new Promise(resolve => {\n            this.forceUpdate(() => {\n                infos.forEach(function moveInfo(info) {\n                    const id = info.id!;\n                    const target = document.querySelector<HTMLElement>(`[${DATA_SCENA_ELEMENT_ID}=\"${id}\"]`)!;\n\n                    info.el = target;\n\n                    info.children!.forEach(moveInfo);\n                });\n                resolve({\n                    moved: infos,\n                    prevInfos,\n                    nextInfos,\n                });\n            })\n        });\n    }\n    public move(infos: ElementInfo[], parentInfo: ElementInfo, prevInfo?: ElementInfo): Promise<MovedResult> {\n        const sortedInfos = this.getSortedInfos(infos.map(info => info.el!));\n\n        return this.moves(sortedInfos.map((info, i) => {\n            return {\n                info,\n                parentInfo,\n                prevInfo: i === 0 ? prevInfo : sortedInfos[i - 1],\n            };\n        }));\n    }\n}\n","import * as React from \"react\";\nimport { prefix, connectEditorProps } from \"../utils/utils\";\nimport Editor from \"../Editor\";\nimport { EditorInterface } from \"../types\";\n\n@connectEditorProps\nexport default abstract class Tab extends React.PureComponent<{\n    editor: Editor,\n}> {\n    public static id: string;\n    public abstract title: string;\n    public abstract renderTab(): any;\n    public eventList: Array<[string, any]> = [];\n    public render() {\n        return (\n            <div className={prefix(\"tab\")}>\n                <h2>{this.title}</h2>\n                {this.renderTab()}\n            </div>\n        );\n    }\n    public addEvent(name: string, callback: any) {\n        this.eventList.push([name, callback]);\n        this.eventBus.on(name, callback);\n    }\n    public getMoveable() {\n        return this.moveableManager.current!.getMoveable();\n    }\n    public componentWillUnmount() {\n        const eventBus = this.eventBus;\n        this.eventList.forEach(([name, callback]) => {\n            eventBus.off(name, callback);\n        });\n    }\n}\nexport default interface Tab extends React.PureComponent<{ editor: Editor }>, EditorInterface {};\n","import { IObject } from \"@daybrush/utils\";\nimport * as React from \"react\";\nimport \"./Input.css\";\n\nexport default class Input<T = {}, U = {}, I extends HTMLElement = HTMLElement> extends React.PureComponent<{\n    value?: any;\n    updateValue?: boolean;\n    inputProps?: IObject<any>,\n    onChange: (v: any) => any,\n} & T, U> {\n    public input = React.createRef<I>();\n    public getValue(): any {\n        return;\n    }\n    public setValue(value: any) {\n    }\n    public componentDidMount() {\n        const props = this.props;\n\n        props.updateValue && this.setValue(props.value);\n    }\n    public componentDidUpdate() {\n        const props = this.props;\n\n        props.updateValue && this.setValue(props.value);\n    }\n}\n","import * as React from \"react\";\nimport { getKey } from \"keycon\";\nimport Input from \"./Input\";\nimport { isUndefined, IObject } from \"@daybrush/utils\";\nimport { prefix } from \"../utils/utils\";\n\nexport default class TextBox extends Input<{}, {}, HTMLInputElement> {\n    protected inputAttributes: IObject<any> = {};\n    public render() {\n        return (\n            <input ref={this.input as any}\n                className={prefix(\"input\")}\n                {...this.inputAttributes}\n                {...this.props.inputProps}\n                onInput={this.onInput}\n                onKeyDown={this.onKeyDown}\n                onKeyUp={this.onKeyUp} />\n        );\n    }\n    public getValue(): any {\n        return this.input.current!.value;\n    }\n    public setValue(value: any) {\n        this.input.current!.value = `${isUndefined(value) ? \"\" : value}`;\n    }\n    protected onInput = (e: any) => {\n        const ev = e.nativeEvent || e;\n\n        if (!isUndefined(ev.data)) {\n            return;\n        }\n        // click (up / down)\n        this.props.onChange(this.input.current!.value);\n    }\n\n    protected onKeyDown = (e: any) => {\n        e.stopPropagation();\n    }\n    protected onKeyUp = (e: any) => {\n        const target = e.currentTarget as HTMLInputElement;\n\n        e.stopPropagation();\n        if (getKey(e.keyCode) === \"enter\") {\n            this.props.onChange(target.value);\n        }\n    }\n}\n","import TextBox from \"./TextBox\";\n\nexport default class NumberBox extends TextBox {\n    protected inputAttributes = {\n        type: \"number\",\n        min: 0,\n        step: 0.1,\n        pattern: \"[0-9.]*\",\n    };\n}\n","import * as React from \"react\";\nimport { IObject } from \"@daybrush/utils\";\nimport Input from \"./Input\";\nimport { prefix } from \"../utils/utils\";\nimport \"./TabInputBox.css\";\n\nexport default class TabInputBox extends React.PureComponent<{\n    type: \"half\" | \"full\" | \"third\" | \"twothird\",\n    onChange: (v: any) => any,\n    input: typeof Input,\n    label?: string,\n    props?: IObject<any>,\n    inputProps?: IObject<any>,\n    value?: any;\n    updateValue?: boolean;\n}> {\n    public input = React.createRef<Input>();\n    public render() {\n        const {\n            label,\n            type,\n            props = {},\n            inputProps = {},\n            input: InputType,\n            onChange,\n            value,\n            updateValue,\n        } = this.props;\n\n        return <div className={prefix(\"tab-input\", type)}>\n            {label && <h3>{label}</h3>}\n            <InputType ref={this.input} onChange={onChange}\n                {...props}\n                inputProps={inputProps} value={value} updateValue={updateValue}></InputType>\n        </div>;\n    }\n    public setValue(v: any) {\n        this.input.current!.setValue(v);\n    }\n    public getValue() {\n        return this.input.current!.getValue();\n    }\n}\n","import * as React from \"react\";\nimport Input from \"./Input\";\nimport { IObject } from \"@daybrush/utils\";\nimport { prefix } from \"../utils/utils\";\nimport \"./Anchor.css\";\n\n\nconst HORIZONTAL_DIRECTIONS = [\"w\", \"\", \"e\"];\nconst VERTICAL_DIRECTIONS = [\"n\", \"\", \"s\"];\nexport default class Anchor extends Input {\n    protected inputAttributes: IObject<any> = {};\n    public state = {\n        origin: [50, 50],\n    }\n    public render() {\n        const origin = this.state.origin.map(v => Math.min(100, Math.max(0, Math.round(v / 50) * 50)));\n        return (\n            <div className={prefix(\"anchor-input\")}>\n                <div className={prefix(\"anchor-input-background\")} onClick={this.onClick}>\n                    {VERTICAL_DIRECTIONS.map((v, i) => {\n                        return HORIZONTAL_DIRECTIONS.map((h, j) => {\n                            const classNames: string[] = [];\n                            if (v) {\n                                classNames.push(`anchor-${v}`);\n                            }\n                            if (h) {\n                                classNames.push(`anchor-${h}`);\n                            }\n                            if (origin[0] === j * 50 && origin[1] === i * 50) {\n                                classNames.push(`anchor-selected`);\n                            }\n                            return <div key={`dir${h}-${v}`}\n                                className={prefix(\"anchor-control\", ...classNames)} data-anchor-index={`${j},${i}`}></div>;\n                        })\n                    })}\n                </div>\n            </div>\n        );\n    }\n    public onClick = (e: any) => {\n        const target = e.target as HTMLElement;\n        const indexes = target.getAttribute(\"data-anchor-index\");\n\n        if (!indexes) {\n            return;\n        }\n        const origin = indexes.split(\",\").map(v => parseFloat(v) * 50);\n        this.props.onChange(origin);\n    }\n    public setValue(v: string) {\n        this.setState({\n            origin: v,\n        });\n    }\n    public getValue() {\n        return this.state.origin;\n    }\n}\n","import * as React from \"react\";\nimport Tab from \"./Tab\";\nimport { prefix } from \"../utils/utils\";\nimport NumberBox from \"../Inputs/NumberBox\";\nimport TabInputBox from \"../Inputs/TabInputBox\";\nimport Anchor from \"../Inputs/Anchor\";\n\nconst inputProps = {\n    step: 1,\n};\n\nexport default class TransformTab extends Tab {\n    public static id = \"Transform\";\n    public title = \"Transform\";\n    public xInput = React.createRef<TabInputBox>();\n    public yInput = React.createRef<TabInputBox>();\n    public wInput = React.createRef<TabInputBox>();\n    public hInput = React.createRef<TabInputBox>();\n    public oInput = React.createRef<TabInputBox>();\n    public rInput = React.createRef<TabInputBox>();\n    public renderTab() {\n\n        return <div className={prefix(\"transform-tab\")}>\n            <div className={prefix(\"tab-line\")}>\n                <TabInputBox ref={this.oInput}\n                    type={\"half\"} label=\"Anchor\" input={Anchor} onChange={this.onChangeOrigin} />\n                <TabInputBox ref={this.rInput}\n                    type={\"half\"} label=\"Rotation\" input={NumberBox} onChange={this.onChangeRotate} />\n            </div>\n            <div className={prefix(\"tab-line\")}>\n                <TabInputBox ref={this.xInput} type={\"half\"} label=\"X\" input={NumberBox} onChange={this.onChangePos} />\n                <TabInputBox ref={this.yInput} type={\"half\"} label=\"Y\" input={NumberBox} onChange={this.onChangePos} />\n            </div>\n            <div className={prefix(\"tab-line\")}>\n                <TabInputBox ref={this.wInput} type={\"half\"}\n                    label=\"W\" input={NumberBox} inputProps={inputProps} onChange={this.onChangeSize} />\n                <TabInputBox ref={this.hInput} type={\"half\"}\n                    label=\"H\" input={NumberBox} inputProps={inputProps} onChange={this.onChangeSize} />\n            </div>\n        </div>;\n    }\n    public componentDidMount() {\n        this.addEvent(\"render\", this.onRender);\n        this.addEvent(\"renderGroup\", this.onRender);\n        this.addEvent(\"setSelectedTargets\", this.onRender);\n\n        this.onRender();\n    }\n    public onChangeRotate = (v: any) => {\n        const rotate = parseFloat(v);\n        this.getMoveable().request(\"rotatable\", { rotate, isInstant: true });\n    }\n    public onChangePos = () => {\n        const x = parseFloat(this.xInput.current!.getValue());\n        const y = parseFloat(this.yInput.current!.getValue());\n\n        this.getMoveable().request(\"draggable\", { x, y, isInstant: true });\n    }\n    public onChangeOrigin = (origin: number[]) => {\n        const moveable = this.getMoveable();\n        const rect = moveable.getRect();\n\n        const ow = rect.offsetWidth * origin[0] / 100;\n        const oh = rect.offsetHeight * origin[1] / 100;\n        this.getMoveable().request(\"originDraggable\", { origin: [ow, oh] }, true);\n    }\n    public onChangeSize = () => {\n        const width = parseFloat(this.wInput.current!.getValue());\n        const height = parseFloat(this.hInput.current!.getValue());\n\n        this.getMoveable().request(\"resizable\", { offsetWidth: width, offsetHeight: height, isInstant: true });\n    }\n    public onRender = () => {\n        const moveable = this.getMoveable();\n\n        const rect = moveable.getRect();\n\n        this.xInput.current!.setValue(rect.left);\n        this.yInput.current!.setValue(rect.top);\n        this.wInput.current!.setValue(rect.offsetWidth);\n        this.hInput.current!.setValue(rect.offsetHeight);\n        this.rInput.current!.setValue(Math.round(rect.rotation));\n\n        const origin = rect.transformOrigin;\n\n        this.oInput.current!.setValue([\n            origin[0] / rect.offsetWidth * 100,\n            origin[1] / rect.offsetHeight * 100,\n        ]);\n    }\n}\n","import * as React from \"react\";\nimport { prefix, between } from \"../../utils/utils\";\nimport { IObject, isObject, isArray, findIndex, hasClass } from \"@daybrush/utils\";\nimport \"./Folder.css\";\nimport File from \"./File\";\nimport KeyController from \"keycon\";\nimport Dragger, { OnDrag, OnDragStart, OnDragEnd, Client } from \"@daybrush/drag\";\n\nexport interface FileInfo<T> {\n    id: string;\n    scope: string[],\n    fullId: string;\n    parentId: string;\n    depth: number;\n    value: T;\n}\n\nfunction getCurrentFile(target: HTMLElement) {\n    while (target) {\n        if (target.hasAttribute(\"data-file-key\")) {\n            break;\n        }\n        target = target.parentElement as HTMLElement;\n    }\n    return target;\n}\nexport default class Folder<T = any> extends React.PureComponent<{\n    scope: string[],\n    name: string,\n    properties: IObject<T> | T[],\n    selected: string[] | null,\n    multiselect?: boolean,\n    isMove?: boolean,\n    checkMove?: (prevInfo: FileInfo<T>) => boolean,\n    onMove?: (parentInfo?: FileInfo<T>, prevInfo?: FileInfo<T>) => any,\n    onSelect?: (e: string[]) => any,\n    FileComponent: ((props: File[\"props\"]) => any) | typeof File,\n    getId?: (value: any, id: any) => any,\n    getFullId?: (id: string, scope: string[]) => string,\n    getName?: (value: any, id: any) => any,\n    getChildren?: (value: any, id: any) => any,\n}> {\n    public static defaultProps = {\n        onMove: () => { },\n        checkMove: () => true,\n        onSelect: () => {},\n        getFullId: (id: string, scope: string[]) => [...scope, id].join(\"///\"),\n        getId: (_: any, id: any, scope: string[]) => id,\n        getName: (_: any, id: any) => id,\n        getChildren: (value: any) => value,\n    }\n    public moveDragger!: Dragger;\n    public folderRef = React.createRef<HTMLDivElement>();\n    public shadowRef = React.createRef<HTMLDivElement>();\n    public state: {\n        fold: boolean,\n        shadows: Array<FileInfo<T>>,\n    } = {\n            fold: false,\n            shadows: [],\n        };\n    public isSelected(key: string) {\n        const selected = this.props.selected;\n\n        return selected && selected.indexOf(key) > -1;\n    }\n    public render() {\n        const {\n            scope,\n            name,\n            getFullId,\n        } = this.props;\n\n        const fullId = scope.length ? getFullId!(scope[scope.length - 1], scope.slice(-1)) : \"\";\n        return <div className={prefix(\"folder\")} ref={this.folderRef}>\n            {name && <div className={prefix(\"tab-input\", \"full\", \"file\", this.isSelected(fullId) ? \"selected\" : \"\")}\n                data-file-key={fullId} onClick={this.onClick}>\n                <div className={prefix(\"fold-icon\", this.state.fold ? \"fold\" : \"\")} onClick={this.onClickFold}></div>\n                <h3 >{name}</h3>\n            </div>}\n            <div className={prefix(\"properties\")}>\n                {this.renderProperties()}\n            </div>\n            {this.renderShadows()}\n        </div>\n    }\n    public componentDidMount() {\n        if (this.props.isMove) {\n            const folderElement = this.folderRef.current!;\n            this.moveDragger = new Dragger(folderElement, {\n                container: window,\n                dragstart: this.onDragStart,\n                drag: this.onDrag,\n                dragend: this.onDragEnd,\n            });\n        }\n    }\n    public componentWillUnmount() {\n        if (this.moveDragger) {\n            this.moveDragger.unset();\n        }\n    }\n    private renderProperties() {\n        const {\n            scope,\n            properties,\n            selected,\n            multiselect,\n            onSelect,\n            getFullId,\n            FileComponent,\n            isMove,\n            getId,\n            getName,\n            getChildren,\n        } = this.props;\n\n        if (this.state.fold) {\n            return;\n        }\n        const keys = Object.keys(properties);\n\n        return keys.map(key => {\n            const value = (properties as any)[key];\n            const name = getName!(value, key);\n            const nextScope = scope.slice();\n            const id = getId!(value, key);\n            const fullId = getFullId!(id, nextScope);\n            nextScope.push(id);\n\n            const children = getChildren!(value, key);\n\n            if (children && (isArray(children) ? children.length : isObject(children))) {\n                return <Folder<T> key={fullId}\n                    name={name} scope={nextScope} properties={children}\n                    multiselect={multiselect}\n                    getId={getId}\n                    getName={getName}\n                    getFullId={getFullId}\n                    getChildren={getChildren}\n                    selected={selected} onSelect={isMove ? undefined : onSelect} FileComponent={FileComponent} />;\n            }\n            return <div key={fullId} className={prefix(\"file\", this.isSelected(fullId) ? \"selected\" : \"\")}\n                data-file-key={fullId} onClick={isMove ? undefined : this.onClick}>\n                <FileComponent scope={nextScope} name={name} value={value} fullId={fullId} />\n            </div>;\n        });\n    }\n    private renderShadows() {\n        const {\n            FileComponent,\n            getName,\n            scope,\n        } = this.props;\n        if (scope.length) {\n            return;\n        }\n        return <div className={prefix(\"shadows\")} ref={this.shadowRef}>\n            {this.state.shadows.map(info => {\n                const {\n                    scope: fileScope,\n                    value,\n                    fullId,\n                    id,\n                } = info;\n                const name = getName!(value, id);\n                return <div key={fullId} className={prefix(\"file\", \"selected\", \"shadow\")}>\n                    <FileComponent scope={fileScope} name={name} value={value} fullId={fullId} />\n                </div>;\n            })}\n        </div>;\n    }\n    private onClickFold = (e: any) => {\n        e.stopPropagation();\n        this.setState({\n            fold: !this.state.fold,\n        });\n    }\n    private onClick = ({ currentTarget }: any) => {\n        const key = currentTarget.getAttribute(\"data-file-key\")!;\n        const {\n            multiselect,\n            onSelect,\n            selected,\n        } = this.props;\n        if (multiselect) {\n            let nextSelected = (selected || []).slice();\n            const index = nextSelected.indexOf(key);\n\n            if (KeyController.global.shiftKey) {\n                if (index > -1) {\n                    nextSelected.splice(index, 1);\n                } else {\n                    nextSelected.push(key);\n                }\n            } else {\n                nextSelected = [key];\n            }\n            onSelect!(nextSelected);\n        } else {\n            onSelect!([key]);\n        }\n    }\n    private onDragStart = (e: OnDragStart) => {\n        if (hasClass(e.inputEvent.target, prefix(\"fold-icon\"))) {\n            return false;\n        }\n        const folderElement = this.folderRef.current!;\n        const rect = folderElement.getBoundingClientRect();\n        const datas = e.datas;\n        const offsetX = e.clientX - rect.left;\n        // const offsetY = e.clientY - rect.top;\n\n        datas.offsetX = offsetX;\n        datas.folderRect = rect;\n        datas.folderLine = rect.left + rect.width - 10;\n\n        e.inputEvent.preventDefault();\n        e.inputEvent.stopPropagation();\n    }\n\n    private onDrag = (e: OnDrag) => {\n        const folderElement = this.folderRef.current!;\n        const { clientX, clientY, datas } = e;\n\n        this.clearPointers();\n        datas.prevInfo = null;\n        datas.isTop = false;\n        const selected = this.props.selected!;\n        const objMap = this.flatMap();\n\n\n        if (!datas.dragFirst) {\n            datas.dragFirst = true;\n            const clickedTarget: HTMLElement = getCurrentFile(e.inputEvent.target);\n\n            if (clickedTarget && selected.indexOf(clickedTarget.getAttribute(\"data-file-key\")!) === -1) {\n                this.onClick({ currentTarget: clickedTarget });\n                return;\n            }\n        }\n        if (!selected.length) {\n            return;\n        }\n        const fileInfos = selected.map(id => objMap[id]);\n\n        if (!this.state.shadows.length) {\n            this.setState({\n                shadows: fileInfos,\n            }, () => {\n                // datas.offsetY = 0;\n                this.updateShadowPosition(datas.folderRect, e);\n            });\n            return;\n        } else {\n            this.updateShadowPosition(datas.folderRect, e);\n        }\n        let target = getCurrentFile(document.elementFromPoint(datas.folderLine, e.clientY) as HTMLElement);\n\n        if (!target) {\n            return;\n        }\n        const infos = this.flatChildren();\n        let rect = target.getBoundingClientRect();\n        let isTop = rect.top + rect.height / 2 > clientY;\n\n        let key = target.getAttribute(\"data-file-key\")!;\n        let siblingIndex = findIndex(infos, info => info.fullId === key);\n        let targetInfo = infos[siblingIndex];\n        let prevInfo = infos[siblingIndex - 1];\n\n        if (prevInfo && isTop) {\n            --siblingIndex;\n            targetInfo = infos[siblingIndex];\n            prevInfo = infos[siblingIndex - 1];\n            key = targetInfo.fullId!;\n            target = folderElement.querySelector<HTMLElement>(`[data-file-key=\"${key}\"]`)!;\n\n            if (!target) {\n                return;\n            }\n            rect = target.getBoundingClientRect();\n            isTop = false;\n        }\n        const nextInfo = infos[siblingIndex + 1];\n        const targetDepth = targetInfo.depth;\n        const nextDepth = nextInfo ? nextInfo.depth : 0;\n        const depthRange = [\n            Math.min(nextDepth, targetDepth) - targetDepth,\n            Math.max(targetDepth + 1, nextDepth) - targetDepth,\n        ];\n        let distX = clientX - rect.left;\n        const distDepth = isTop ? 0\n            : between(Math.round((distX > 0 ? distX * 0.2 : distX) / 10), depthRange[0], depthRange[1]);\n\n        if (nextInfo && !isTop && selected.indexOf(nextInfo.fullId) > -1 && targetDepth + distDepth === nextDepth) {\n            return;\n        }\n        if (this.contains(selected, key)) {\n            return;\n        }\n        if (selected.indexOf(key) > -1 && distDepth >= 0) {\n            return;\n        }\n        if (distDepth > 0 && !this.props.checkMove!(targetInfo)) {\n            return;\n        }\n        target.style.setProperty(\"--pointer-depth\", `${distDepth}`);\n        target.classList.add(prefix(isTop ? \"top-pointer\" : \"bottom-pointer\"));\n\n\n        datas.depth = distDepth;\n        datas.isTop = isTop;\n        datas.prevInfo = targetInfo;\n    }\n    private onDragEnd = (e: OnDragEnd) => {\n        this.clearPointers();\n\n        if (!e.isDrag) {\n            const currentTarget = getCurrentFile(e.inputEvent.target);\n\n            this.onClick({ currentTarget });\n            return;\n        }\n        const datas = e.datas;\n        const depth = datas.depth;\n        let prevInfo: FileInfo<T> | undefined = datas.prevInfo;\n        const isTop = datas.isTop;\n        const onMove = this.props.onMove!;\n        const objMap = this.flatMap();\n\n        let parentInfo: FileInfo<T> | undefined;\n\n        if (prevInfo) {\n            if (depth <= 0) {\n                const length = Math.abs(depth);\n\n                for (let i = 0; i < length; ++i) {\n                    prevInfo = objMap[prevInfo!.parentId];\n                }\n                parentInfo = objMap[prevInfo.parentId];\n            } else {\n                parentInfo = prevInfo;\n                prevInfo = undefined;\n            }\n        }\n\n        if (!parentInfo && isTop) {\n            onMove();\n        } else if (parentInfo || prevInfo) {\n            onMove!(parentInfo, prevInfo);\n        }\n        this.setState({\n            shadows: [],\n        }, () => {\n            this.shadowRef.current!.style.cssText = \"display: none\";\n        })\n    }\n    private updateShadowPosition(rect: ClientRect, e: OnDragStart | OnDrag) {\n        const el = this.shadowRef.current;\n\n        if (!el || !this.state.shadows.length) {\n            return;\n        }\n        const datas = e.datas;\n        el.style.cssText\n            = `display: block; transform: translate(${e.clientX - rect.left - datas.offsetX}px, ${e.clientY - rect.top}px) translateY(-50%)`;\n    }\n    private contains(ids: string[], key: string, objMap = this.flatMap()): boolean {\n        const info = objMap[key];\n        const parentId = info.parentId;\n\n        if (!parentId) {\n            return false;\n        }\n        if (ids.indexOf(parentId) > -1) {\n            return true;\n        }\n        return this.contains(ids, parentId, objMap);\n    }\n    private flatMap() {\n        const children = this.flatChildren();\n        const objMap: IObject<FileInfo<T>> = {};\n        children.forEach(info => {\n            objMap[info.fullId] = info;\n        });\n\n        return objMap;\n    }\n    private flatChildren(\n        properties = this.props.properties!,\n        parentId: string = \"\",\n        scope: string[] = [],\n        children: FileInfo<T>[] = []\n    ) {\n        const keys = Object.keys(properties);\n        const {\n            getFullId,\n            getId,\n            getChildren,\n        } = this.props;\n        const depth = scope.length;\n        keys.forEach(key => {\n            const value = (properties as any)[key];\n            const nextScope = scope.slice();\n            const id = getId!(value, key);\n            const fullId = getFullId!(id, nextScope);\n            nextScope.push(id);\n\n            const valueChildren = getChildren!(value, key);\n\n            children.push({\n                id,\n                fullId,\n                parentId,\n                depth,\n                scope,\n                value,\n            });\n            if (valueChildren && (isArray(valueChildren) ? valueChildren.length : isObject(valueChildren))) {\n                this.flatChildren(valueChildren, fullId, nextScope, children);\n            }\n        });\n\n        return children;\n    }\n    private clearPointers() {\n        [].slice.call(document.querySelectorAll<HTMLElement>(\".scena-top-pointer, .scena-bottom-pointer\")).forEach((el: HTMLElement) => {\n            const classList = el.classList;\n\n            classList.remove(prefix(\"top-pointer\"));\n            classList.remove(prefix(\"bottom-pointer\"));\n        });\n    }\n}\n","import * as React from \"react\";\nimport { prefix } from \"../utils/utils\";\n\nexport default class LabelBox extends React.PureComponent<{\n    type: \"half\" | \"full\" | \"third\",\n    label: string,\n}> {\n    public render() {\n        const {\n            label,\n            type,\n        } = this.props;\n\n        return <div className={prefix(\"tab-input\", type)}>\n            <h3>{label}</h3>\n        </div>;\n    }\n}\n","import * as React from \"react\";\nimport \"./Folder.css\";\n\nexport default class File<T = {}> extends React.PureComponent<{\n    name: string,\n    scope: string[],\n    fullId: string,\n    value: any,\n} & T> {\n}\n","import * as React from \"react\";\nimport LabelBox from \"../../Inputs/LabelBox\";\nimport TabInputBox from \"../../Inputs/TabInputBox\";\nimport TextBox from \"../../Inputs/TextBox\";\nimport \"../Folder/Folder.css\";\nimport File from \"../Folder/File\";\n\nexport default class Property extends File<{\n    onChange: (scope: string[], value: any) => any\n}> {\n    public render() {\n        const {\n            name,\n            value,\n        } = this.props;\n        return <><LabelBox type={\"third\"} label={name}></LabelBox>\n            <TabInputBox type={\"twothird\"} input={TextBox} value={value}\n                updateValue={true}\n                onChange={this.onChange}\n            ></TabInputBox></>;\n    }\n    public onChange = (v: any) => {\n        const {\n            onChange,\n            scope,\n        } = this.props;\n\n        onChange(scope, v);\n    }\n}\n","import * as React from \"react\";\nimport Tab from \"../Tab\";\nimport { prefix } from \"../../utils/utils\";\nimport Folder from \"../Folder/Folder\";\nimport Property from \"./Property\";\nimport File from \"../Folder/File\";\nimport \"./FrameTab.css\";\n\nexport default class FrameTab extends Tab {\n    public static id = \"Frame\";\n    public title = \"Frame\";\n    public state: {\n        selected: string[] | null,\n    } = {\n        selected: null,\n    };\n    public renderTab() {\n        const {\n            selected,\n        } = this.state;\n\n        const frame = this.moveableData.getSelectedFrames()[0];\n\n        if (!frame) {\n            return;\n        }\n        return <div className={prefix(\"frame-tab\")}>\n            <Folder name=\"\" properties={frame.get()} scope={[]} selected={selected}\n                onSelect={this.onSelect} FileComponent={this.renderProperty} />\n        </div>;\n    }\n    public componentDidMount() {\n        this.addEvent(\"render\", this.onRender as any);\n        this.addEvent(\"setSelectedTargets\", this.setTargets as any);\n    }\n    private renderProperty = ({ name, fullId, scope, value }: File[\"props\"]) => {\n        return <Property name={name} fullId={fullId} scope={scope} value={value} onChange={this.onChange}></Property>;\n    }\n    private onSelect = (selected: string[]) => {\n        this.setState({\n            selected,\n        })\n    }\n    private onChange = (scope: string[], value: any) => {\n        const frames = this.moveableData.getSelectedFrames();\n\n        if (!frames.length) {\n            return;\n        }\n        this.editor.setProperty(scope, value, true);\n    }\n    private onRender = () => {\n        this.forceUpdate();\n    }\n    private setTargets = () => {\n        const state = this.state;\n\n        state.selected = null;\n        this.forceUpdate();\n    }\n}\n","import * as React from \"react\";\nimport { prefix } from \"../../utils/utils\";\n\nexport default class Align extends React.PureComponent<{\n    type: \"horizontal\" | \"vertical\",\n    direction: \"start\" | \"center\" | \"end\",\n    onClick: (type: \"horizontal\" | \"vertical\", direction: \"start\" | \"center\" | \"end\") => any,\n}> {\n    public render() {\n        const {\n            type,\n            direction,\n        } = this.props;\n        return <div className={prefix(\"align\", `align-${type}`, `align-${direction}`)}\n            onClick={this.onClick}>\n            <div className={prefix(\"align-line\")}></div>\n            <div className={prefix(\"align-element1\")}></div>\n            <div className={prefix(\"align-element2\")}></div>\n        </div>;\n    }\n    public onClick = () => {\n        const {\n            type,\n            direction,\n            onClick,\n        } = this.props;\n        onClick(type, direction);\n    }\n}\n","import * as React from \"react\";\nimport Tab from \"../Tab\";\nimport { prefix, getId } from \"../../utils/utils\";\nimport \"./AlignTab.css\";\nimport Align from \"./Align\";\nimport MoveableGroup from \"react-moveable/declaration/MoveableGroup\";\n\nconst TYPES = [\"vertical\", \"horizontal\"] as const;\nconst DIRECTIONS = [\"start\", \"center\", \"end\"] as const;\n\n\nfunction getDirectionPos(\n    type: \"horizontal\" | \"vertical\", direction: \"start\" | \"center\" | \"end\", rect: { left: number, top: number, width: number, height: number }): number {\n    let size: number;\n    let start: number;\n    if (type === \"horizontal\") {\n        size = rect.height;\n        start = rect.top;\n    } else {\n        size = rect.width;\n        start = rect.left;\n    }\n    if (direction === \"start\") {\n        return start;\n    }\n    if (direction === \"center\") {\n        return start + size / 2;\n    }\n    return start + size;\n}\nexport default class AlignTab extends Tab {\n    public static id = \"Align\";\n    public title = \"Align\";\n    public renderTab() {\n        return <div className={prefix(\"align-tab\")}>\n            {TYPES.map(type => {\n                return DIRECTIONS.map(direction => {\n                    return <Align key={`${type}-${direction}`}\n                        type={type} direction={direction} onClick={this.onClick}></Align>\n                });\n            })}\n        </div>;\n    }\n    public onClick = (type: \"horizontal\" | \"vertical\", direction: \"start\" | \"center\" | \"end\") => {\n        const moveable = this.getMoveable();\n\n        if (!moveable.moveable) {\n            return;\n        }\n        const moveables = (moveable.moveable as MoveableGroup).moveables;\n        const rect = moveable.getRect();\n        const pos = getDirectionPos(type, direction, rect);\n\n        if (moveables) {\n            // Group\n            const infos = moveables.map(m => {\n                const target = m.state.target!;\n                const frame = this.moveableData.getFrame(target);\n\n                if (frame) {\n                    const prev = frame.get();\n                    const subRect = m.getRect();\n                    const subPos = getDirectionPos(type, direction, subRect);\n                    const delta = pos - subPos;\n\n                    const translate = frame.get(\"transform\", \"translate\").split(\",\").map((v: string) => parseFloat(v));\n\n\n                    translate[type === \"horizontal\" ? 1 : 0] += delta;\n\n                    frame.set(\"transform\", \"translate\", translate.map((t: number) => `${t}px`).join(\", \"));\n\n                    return { id: getId(target), prev, next: frame.get() };\n                }\n                return false;\n            }).filter(target => target);\n\n\n            this.historyManager.addAction(\"renders\", {\n                infos,\n            });\n            this.moveableData.renderFrames();\n            moveable.updateRect();\n        } else {\n            const viewportRect = {\n                width: 400,\n                height: 600,\n                left: 0,\n                top: 0,\n            }\n            const viewportPos = getDirectionPos(type, direction, viewportRect);\n            const delta = pos - viewportPos;\n\n            moveable.request(\"draggable\", { [type === \"horizontal\" ? \"deltaY\" : \"deltaX\"]: -delta }, true);\n        }\n    }\n}\n","import * as React from \"react\";\nimport LabelBox from \"../../Inputs/LabelBox\";\nimport File from \"../Folder/File\";\n\nexport default class Layer extends File {\n    public render() {\n        const {\n            name,\n        } = this.props;\n        return <><LabelBox type={\"full\"} label={name}></LabelBox></>;\n    }\n}\n","import * as React from \"react\";\nimport Tab from \"../Tab\";\nimport Folder, { FileInfo } from \"../Folder/Folder\";\nimport File from \"../Folder/File\";\nimport { ElementInfo } from \"../../Viewport/Viewport\";\nimport Layer from \"./Layer\";\nimport { getIds, isScenaFunction, isScenaElement } from \"../../utils/utils\";\nimport { isString } from \"@daybrush/utils\";\n\nexport default class LayerTab extends Tab {\n    public static id = \"Layers\";\n    public title = \"Layers\";\n\n    public renderTab() {\n        const infos = this.editor.getViewportInfos();\n        const selected = getIds(this.moveableData.getSelectedTargets());\n\n        return <Folder<ElementInfo>\n            scope={[]}\n            name=\"\" properties={infos}\n            multiselect={true}\n            isMove={true}\n            getId={(v: ElementInfo) => v.id}\n            getFullId={id => id}\n            getName={(v: ElementInfo) => v.name}\n            getChildren={(v: ElementInfo) => v.children || []}\n            selected={selected}\n            onSelect={this.onSelect}\n            checkMove={this.checkMove}\n            onMove={this.onMove}\n            FileComponent={this.renderFile} />;\n    }\n    public renderFile = ({ name, fullId, scope, value }: File[\"props\"]) => {\n        return <Layer name={name} fullId={fullId} scope={scope} value={value}></Layer>;\n    }\n    public componentDidMount() {\n        this.addEvent(\"setSelectedTargets\", this.setSelectedTargets);\n    }\n\n    private onSelect = (selected: string[]) => {\n        this.eventBus.requestTrigger(\"selectLayers\", {\n            selected,\n        })\n    }\n    private onMove = (parentInfo?: FileInfo<ElementInfo>, prevInfo?: FileInfo<ElementInfo>) => {\n        const editor = this.editor;\n        const viewport = editor.getViewport();\n        const targets = editor.getSelectedTargets();\n        this.editor.moves(targets.map((target, i) => ({\n            info: viewport.getInfoByElement(target),\n            parentInfo: viewport.getInfo(parentInfo ? parentInfo.fullId : \"viewport\"),\n            prevInfo: i === 0\n                ? viewport.getInfo(prevInfo ? prevInfo.fullId : \"\")\n                : viewport.getInfoByElement(targets[i - 1]),\n        })));\n    }\n    private checkMove = (prevInfo: FileInfo<ElementInfo>) => {\n        const jsx = prevInfo.value.jsx;\n\n        if (isScenaFunction(jsx)) {\n            return false;\n        }\n        return isScenaElement(jsx) && isString(jsx.type);\n    }\n    private setSelectedTargets = () => {\n        this.forceUpdate();\n    }\n}\n","import * as React from \"react\";\nimport Input from \"./Input\";\nimport { IObject } from \"@daybrush/utils\";\nimport { ChromePicker, ColorResult } from \"react-color\";\n\nconst AnyChromePicker = ChromePicker as any;\n\nexport default class ColorPicker extends Input {\n    protected inputAttributes: IObject<any> = {};\n    public state = {\n        color: \"rgba(255, 255, 255, 255)\",\n    }\n    public render() {\n        const color = this.state.color;\n\n        return (\n            <AnyChromePicker\n                width={\"180px\"}\n                color={color}\n                onChange={this.onChange}\n                onChangeComplete={this.onChangeComplete}\n            />\n        );\n    }\n    public componentDidUpdate() { }\n    public setValue(v: string) {\n        this.setState({\n            color: v,\n        });\n    }\n    public getValue() {\n        return this.state.color;\n    }\n    private onChange = (e: ColorResult) => {\n        const { r, g, b, a } = e.rgb;\n\n        this.setState({\n            color: `rgba(${r}, ${g}, ${b}, ${a})`,\n        });\n    }\n    private onChangeComplete = (e: ColorResult) => {\n        const { r, g, b, a } = e.rgb;\n\n        this.props.onChange(`rgba(${r}, ${g}, ${b}, ${a})`);\n    }\n}\n","import * as React from \"react\";\nimport Input from \"./Input\";\nimport { IObject, } from \"@daybrush/utils\";\nimport { prefix } from \"../utils/utils\";\nimport ColorPicker from \"./ColorPicker\";\nimport TextBox from \"./TextBox\";\nimport \"./ColorBox.css\";\n\nexport default class ColorBox extends Input<{}, {}, HTMLDivElement> {\n    protected inputAttributes: IObject<any> = {};\n    protected colorInput = React.createRef<ColorPicker>();\n    protected textInput = React.createRef<TextBox>();\n    public state = {\n        display: \"none\",\n        color: \"#fff\",\n    };\n    public render() {\n        return (\n            <div className={prefix(\"color-input\")} ref={this.input} onBlur={this.onBlur}>\n                <div className={prefix(\"color-background\")} style={{\n                    backgroundColor: this.state.color,\n                }} onClick={this.onClick}></div>\n                <TextBox\n                    ref={this.textInput}\n                    onChange={this.onChange}\n                    inputProps={{\n                        onFocus: this.onFocus,\n                    }}\n                ></TextBox>\n                {this.renderPicker()}\n            </div>\n        );\n    }\n    public renderPicker() {\n        const {\n            display,\n        } = this.state;\n\n        if (display === \"none\") {\n            return;\n        }\n        return <div className={prefix(\"color-picker\")}\n            onMouseDown={this.onDragStart} onTouchStart={this.onDragStart}\n            style={{\n                display,\n            }}>\n            <ColorPicker\n                ref={this.colorInput}\n                onChange={this.onChange} />\n        </div>;\n    }\n    public setValue(v: string) {\n        this.setState({\n            color: v,\n        })\n        this.textInput.current!.setValue(v);\n        if (this.colorInput.current!) {\n            this.colorInput.current!.setValue(v);\n        }\n    }\n    public getValue() {\n        return this.textInput.current!.getValue();\n    }\n    public onFocus = () => {\n        this.setState({\n            display: \"block\",\n        });\n    }\n    public onBlur = (e: any) => {\n        const relatedTarget = e.nativeEvent.relatedTarget;\n\n        if (this.input.current!.contains(relatedTarget)) {\n            return;\n        }\n        this.setState({\n            display: \"none\",\n        });\n    }\n    private onChange = (v: string) => {\n        this.props.onChange(v);\n    }\n    private onDragStart = (e: any) => {\n        if (e.target.tagName === \"INPUT\") {\n            return;\n        }\n        e.preventDefault();\n    }\n    private onClick = (e: any) => {\n        this.textInput.current!.input.current!.focus();\n    }\n}\n","import * as React from \"react\";\nimport Tab from \"../Tab\";\nimport { prefix } from \"../../utils/utils\";\nimport ColorBox from \"../../Inputs/ColorBox\";\nimport TabInputBox from \"../../Inputs/TabInputBox\";\n\n\nexport default class ColorTab extends Tab {\n    public static id = \"Colors\";\n    public title = \"Colors\";\n\n    public renderTab() {\n        const frames = this.moveableData.getSelectedFrames();\n        let backgroundColor = this.memory.get(\"background-color\");\n        let color = this.memory.get(\"color\");\n\n        if (frames.length) {\n            const backgroundColors = frames.map(frame => frame.get(\"background-color\"));\n            const colors = frames.map(frame => frame.get(\"color\"));\n\n            backgroundColor = backgroundColors.filter(color => color)[0] || \"transparent\";\n            color = colors.filter(color => color)[0] || \"#333\";\n        }\n\n        return <div className={prefix(\"current-tab\")}>\n            <TabInputBox type={\"full\"}\n                label=\"Background Color\"\n                input={ColorBox}\n                value={backgroundColor}\n                updateValue={true}\n                onChange={this.onChangeBackgroundColor} />\n            <TabInputBox type={\"full\"}\n                label=\"Text Color\"\n                input={ColorBox}\n                value={color}\n                updateValue={true}\n                onChange={this.onChangeTextColor} />\n        </div>;\n    }\n    public componentDidMount() {\n        this.addEvent(\"render\", this.onRender as any);\n        this.addEvent(\"setSelectedTargets\", this.onRender as any);\n    }\n    public onChangeBackgroundColor = (v: string) => {\n        this.memory.set(\"background-color\", v);\n        this.editor.setProperty([\"background-color\"], v);\n    }\n    public onChangeTextColor = (v: string) => {\n        this.memory.set(\"color\", v);\n        this.editor.setProperty([\"color\"], v);\n    }\n    private onRender = () => {\n        this.forceUpdate();\n    }\n}\n","import * as React from \"react\";\nimport Input from \"./Input\";\nimport { isUndefined, IObject } from \"@daybrush/utils\";\nimport { prefix } from \"../utils/utils\";\n\nexport default class SelectBox extends Input<{\n    options: string[]\n}, {}, HTMLSelectElement> {\n    protected inputAttributes: IObject<any> = {};\n    public render() {\n        const options = this.props.options || [];\n        return (\n            <select ref={this.input as any}\n                className={prefix(\"select\")}\n                {...this.inputAttributes}\n                {...this.props.inputProps}\n                onInput={this.onInput}>\n                {options.map(value => (<option key={value} value={value}>{value}</option>))}\n            </select>\n        );\n    }\n    public getValue(): any {\n        return this.input.current!.value;\n    }\n    public setValue(value: any) {\n        this.input.current!.value = `${isUndefined(value) ? \"\" : value}`;\n    }\n    protected onInput = (e: any) => {\n        const ev = e.nativeEvent || e;\n\n        if (!isUndefined(ev.data)) {\n            return;\n        }\n        // click (up / down)\n        this.props.onChange(this.input.current!.value);\n    }\n}\n","import * as React from \"react\";\nimport Tab from \"../Tab\";\nimport \"./FontTab.css\";\nimport { prefix } from \"../../utils/utils\";\nimport TabInputBox from \"../../Inputs/TabInputBox\";\nimport SelectBox from \"../../Inputs/SelectBox\";\nimport TextBox from \"../../Inputs/TextBox\";\n\nconst FONT_FAMILY_PROPS = {\n    options: [\"sans-serif\"],\n};\nconst TEXT_ALIGN_PROPS = {\n    options: [\"left\", \"center\", \"right\", \"justify\"],\n};\nconst FONT_STYLE_PROPS = {\n    options: [\"normal\", \"italic\", \"blique\"],\n};\nconst FONT_WEIGHT_PROPS = {\n    options: [\"100\", \"200\", \"300\", \"normal\", \"500\", \"600\", \"bold\", \"800\"],\n};\nconst TEXT_DECORATION_PROPS = {\n    options: [\"none\", \"underline\", \"overline\", \"line-through\"],\n}\nexport default class FontTab extends Tab {\n    public static id = \"Font\";\n    public title = \"Font\";\n    public renderTab() {\n        const [\n            family,\n            size,\n            align,\n            style,\n            weight,\n            decoration,\n        ] = this.moveableData.getProperties([\n            [\"font-family\"],\n            [\"font-size\"],\n            [\"text-align\"],\n            [\"font-style\"],\n            [\"font-weight\"],\n            [\"text-decoration\"],\n        ], [\n            \"sans-serif\",\n            \"14px\",\n            \"left\",\n            \"normal\",\n            \"normal\",\n            \"none\",\n        ]);\n\n        return <div className={prefix(\"font-tab\")}>\n            <TabInputBox type={\"half\"} label=\"family\" input={SelectBox}\n                props={FONT_FAMILY_PROPS}\n                value={family} updateValue={true} onChange={this.onChangeFamily} />\n            <TabInputBox type={\"half\"} label=\"size\" input={TextBox}\n                value={size}\n                updateValue={true}\n                onChange={this.onChangeSize} />\n            <TabInputBox type={\"half\"} label=\"align\" input={SelectBox}\n                props={TEXT_ALIGN_PROPS}\n                value={align} updateValue={true}\n                onChange={this.onChangeAlign} />\n            <TabInputBox type={\"half\"} label=\"style\" input={SelectBox}\n                props={FONT_STYLE_PROPS}\n                value={style} updateValue={true}\n                onChange={this.onChangeStyle} />\n            <TabInputBox type={\"half\"} label=\"weight\" input={SelectBox}\n                props={FONT_WEIGHT_PROPS}\n                value={weight} updateValue={true}\n                onChange={this.onChangeWeight} />\n            <TabInputBox type={\"half\"} label=\"decoration\" input={SelectBox}\n                props={TEXT_DECORATION_PROPS}\n                value={decoration} updateValue={true}\n                onChange={this.onChangeDecoration} />\n        </div>;\n    }\n    public componentDidMount() {\n        this.addEvent(\"render\", this.onRender as any);\n        this.addEvent(\"setSelectedTargets\", this.setTargets as any);\n    }\n    private onChangeSize = (v: any) => {\n        this.changeProperty(\"font-size\", v);\n    }\n    private onChangeAlign = (v: any) => {\n        this.changeProperty(\"text-align\", v);\n    }\n    private onChangeFamily = (v: any) => {\n        this.changeProperty(\"font-family\", v);\n    }\n    private onChangeStyle = (v: any) => {\n        this.changeProperty(\"font-style\", v);\n    }\n    private onChangeWeight = (v: any) => {\n        this.changeProperty(\"font-weight\", v);\n    }\n    private onChangeDecoration = (v: any) => {\n        this.changeProperty(\"text-decoration\", v);\n    }\n    private onRender = () => {\n        this.forceUpdate();\n    }\n    private setTargets = () => {\n        this.forceUpdate();\n    }\n    private changeProperty(name: string, v: any) {\n        this.memory.set(name, v);\n        this.editor.setProperty([name], v, true);\n    }\n}\n","import * as React from \"react\";\nimport { prefix } from \"../utils/utils\";\nimport \"./Tabs.css\";\nimport TransformTab from \"./TransformTab\";\nimport Tab from \"./Tab\";\nimport FrameTab from \"./FrameTab/FrameTab\";\nimport AlignTab from \"./AlignTab/AlignTab\";\nimport LayerTab from \"./LayerTab/LayerTab\";\nimport CurrentTab from \"./ColorTab/ColorTab\";\nimport FontTab from \"./FontTab/FontTab\";\nimport Editor from \"../Editor\";\n\nconst TABS: Array<typeof Tab> = [\n    CurrentTab,\n    AlignTab,\n    FontTab,\n    LayerTab,\n    TransformTab,\n    FrameTab,\n];\nexport default class Tabs extends React.PureComponent<{\n    editor: Editor,\n}> {\n    public tabs = React.createRef<HTMLDivElement>();\n    public state = {\n        selected: \"\",\n    }\n    public render() {\n        return <div className={prefix(\"tabs\")} ref={this.tabs} onMouseOver={this.onMouseOver} onMouseOut={this.blur}>\n            {this.renderTabs()}\n        </div>;\n    }\n    public renderTabs() {\n        const editor = this.props.editor;\n        const selected = this.state.selected;\n        return TABS.map(UserTab => {\n            const id = UserTab.id;\n            const isSelected = id === selected;\n            return <div key={id} className={prefix(\"tab-icon\", isSelected ? \"selected\" : \"\")}>\n                <div data-target-id={id} className={prefix(\"tab-icon-label\")} onClick={this.onClick}><span>{UserTab.id}</span></div>\n                {isSelected && <UserTab editor={editor} />}\n            </div>;\n            // return <UserTab moveable={moveable} />;\n        });\n    }\n    public blur = () => {\n        this.tabs.current!.classList.remove(\"scena-over\");\n    }\n    private onClick = (e: any) => {\n        this.onMouseOver();\n        const target = e.target;\n        const prevSelected = this.state.selected;\n        const selected = target.getAttribute(\"data-target-id\");\n        this.setState({\n            selected: prevSelected === selected ? \"\" : selected,\n        });\n    }\n    private onMouseOver = () => {\n        this.tabs.current!.classList.add(\"scena-over\");\n    }\n}\n","import Component from \"@egjs/component\";\nimport { IObject } from \"@daybrush/utils\";\n\nclass EventBus extends Component {\n    private eventMap: IObject<number> = {};\n    requestTrigger(name: string, params: IObject<any> = {}) {\n        const eventMap = this.eventMap;\n        cancelAnimationFrame(eventMap[name] || 0);\n\n        eventMap[name] = requestAnimationFrame(() => {\n            this.trigger(name, params);\n        });\n    }\n}\nexport default EventBus;\n","export default class Memory {\n    public map = new Map<any, any>();\n    public get(key: any) {\n        return this.map.get(key);\n    }\n    public set(key: any, value: any) {\n        return this.map.set(key, value);\n    }\n    public clear() {\n        this.map.clear();\n    }\n}\n","import * as React from \"react\";\nimport Moveable from \"react-moveable\";\nimport { getContentElement, connectEditorProps, getId } from \"../utils/utils\";\nimport Editor from \"../Editor\";\nimport { EditorInterface } from \"../types\";\nimport { IObject } from \"@daybrush/utils\";\nimport { diff } from \"@egjs/list-differ\";\n\nfunction restoreRender(id: string, state: IObject<any>, prevState: IObject<any>, editor: Editor) {\n    const el = editor.viewport.current!.getElement(id);\n\n    if (!el) {\n        console.error(\"No Element\");\n        return false;\n    }\n    const moveableData = editor.moveableData;\n    const frame = moveableData.getFrame(el);;\n\n    frame.clear();\n    frame.set(state);\n\n    const result = diff(Object.keys(prevState), Object.keys(state));\n    const { removed, prevList } = result;\n\n    removed.forEach(index => {\n        el.style.removeProperty(prevList[index]);\n    });\n    moveableData.render(el);\n    return true;\n}\nfunction undoRender({ id, prev, next }: IObject<any>, editor: Editor) {\n    if (!restoreRender(id, prev, next, editor)) {\n        return;\n    }\n    editor.moveableManager.current!.updateRect();\n    editor.eventBus.trigger(\"render\");\n}\nfunction redoRender({ id, prev, next }: IObject<any>, editor: Editor) {\n    if (!restoreRender(id, next, prev, editor)) {\n        return;\n    }\n    editor.moveableManager.current!.updateRect();\n    editor.eventBus.trigger(\"render\");\n}\nfunction undoRenders({ infos }: IObject<any>, editor: Editor) {\n    infos.forEach(({ id, prev, next }: IObject<any>) => {\n        restoreRender(id, prev, prev, editor);\n    });\n    editor.moveableManager.current!.updateRect();\n    editor.eventBus.trigger(\"render\");\n}\nfunction redoRenders({ infos }: IObject<any>, editor: Editor) {\n    infos.forEach(({ id, next, prev }: IObject<any>) => {\n        restoreRender(id, next, prev, editor);\n    });\n    editor.moveableManager.current!.updateRect();\n    editor.eventBus.trigger(\"render\");\n}\n\n@connectEditorProps\nexport default class MoveableManager extends React.PureComponent<{\n    editor: Editor,\n    selectedTargets: Array<HTMLElement | SVGElement>;\n    selectedMenu: string,\n    verticalGuidelines: number[],\n    horizontalGuidelines: number[],\n}> {\n    public moveable = React.createRef<Moveable>();\n    public getMoveable() {\n        return this.moveable.current!;\n    }\n    public render() {\n        const {\n            editor,\n            verticalGuidelines,\n            horizontalGuidelines,\n            selectedTargets,\n            selectedMenu,\n        } = this.props;\n        // const\n\n        if (!selectedTargets.length) {\n            return this.renderViewportMoveable();\n        }\n        const {\n            moveableData,\n            keyManager,\n            eventBus,\n            selecto,\n            memory,\n        } = editor;\n        const elementGuidelines = [...moveableData.getTargets()].filter(el => {\n            return selectedTargets.indexOf(el) === -1;\n        });\n        const isShift = keyManager.shiftKey;\n\n        return <Moveable\n            ref={this.moveable}\n            targets={selectedTargets}\n            draggable={true}\n            resizable={true}\n            throttleResize={1}\n            clippable={selectedMenu === \"Crop\"}\n            dragArea={selectedTargets.length > 1 || selectedMenu !== \"Text\"}\n            checkInput={selectedMenu === \"Text\"}\n            throttleDragRotate={isShift ? 45 : 0}\n            keepRatio={isShift}\n            rotatable={true}\n            snappable={true}\n            snapCenter={true}\n            snapGap={false}\n            roundable={true}\n            verticalGuidelines={verticalGuidelines}\n            horizontalGuidelines={horizontalGuidelines}\n            elementGuidelines={elementGuidelines}\n            clipArea={true}\n            onDragStart={moveableData.onDragStart}\n            onDrag={moveableData.onDrag}\n            onDragGroupStart={moveableData.onDragGroupStart}\n            onDragGroup={moveableData.onDragGroup}\n\n            onScaleStart={moveableData.onScaleStart}\n            onScale={moveableData.onScale}\n            onScaleGroupStart={moveableData.onScaleGroupStart}\n            onScaleGroup={moveableData.onScaleGroup}\n\n            onResizeStart={moveableData.onResizeStart}\n            onResize={moveableData.onResize}\n            onResizeGroupStart={moveableData.onResizeGroupStart}\n            onResizeGroup={moveableData.onResizeGroup}\n\n            onRotateStart={moveableData.onRotateStart}\n            onRotate={moveableData.onRotate}\n            onRotateGroupStart={moveableData.onRotateGroupStart}\n            onRotateGroup={moveableData.onRotateGroup}\n\n            defaultClipPath={memory.get(\"crop\") || \"inset\"}\n            onClip={moveableData.onClip}\n\n            onDragOriginStart={moveableData.onDragOriginStart}\n            onDragOrigin={e => {\n                moveableData.onDragOrigin(e);\n            }}\n\n            onRound={moveableData.onRound}\n\n            onClick={e => {\n                const target = e.inputTarget as any;\n                if (e.isDouble && target.isContentEditable) {\n                    editor.selectMenu(\"Text\");\n                    const el = getContentElement(target);\n\n                    if (el) {\n                        el.focus();\n                    }\n                }\n            }}\n            onClickGroup={e => {\n                selecto.current!.clickTarget(e.inputEvent, e.inputTarget);\n            }}\n            onRenderStart={e => {\n                e.datas.prevData = moveableData.getFrame(e.target).get();\n            }}\n            onRender={e => {\n                e.datas.isRender = true;\n                eventBus.requestTrigger(\"render\");\n            }}\n            onRenderEnd={e => {\n                eventBus.requestTrigger(\"render\");\n\n                if (!e.datas.isRender) {\n                    return;\n                }\n                this.historyManager.addAction(\"render\", {\n                    id: getId(e.target),\n                    prev: e.datas.prevData,\n                    next: moveableData.getFrame(e.target).get(),\n                });\n            }}\n            onRenderGroupStart={e => {\n                e.datas.prevDatas = e.targets.map(target => moveableData.getFrame(target).get());\n            }}\n            onRenderGroup={e => {\n                eventBus.requestTrigger(\"renderGroup\", e);\n                e.datas.isRender = true;\n            }}\n            onRenderGroupEnd={e => {\n                eventBus.requestTrigger(\"renderGroup\", e);\n\n                if (!e.datas.isRender) {\n                    return;\n                }\n                const prevDatas = e.datas.prevDatas;\n                const infos = e.targets.map((target, i) => {\n                    return {\n                        id: getId(target),\n                        prev: prevDatas[i],\n                        next: moveableData.getFrame(target).get(),\n                    }\n                });\n                this.historyManager.addAction(\"renders\", {\n                    infos,\n                });\n            }}\n        ></Moveable>\n    }\n    public renderViewportMoveable() {\n        const moveableData = this.moveableData;\n        const viewport = this.editor.getViewport();\n        const target = viewport ? viewport.viewportRef.current! : null;\n\n        return <Moveable\n            ref={this.moveable}\n            rotatable={true}\n            target={target}\n            origin={false}\n            onRotateStart={moveableData.onRotateStart}\n            onRotate={moveableData.onRotate}\n        ></Moveable>\n    }\n    public componentDidMount() {\n        this.historyManager.registerType(\"render\", undoRender, redoRender);\n        this.historyManager.registerType(\"renders\", undoRenders, redoRenders);\n        this.keyManager.keydown([\"shift\"], () => {\n            this.forceUpdate();\n        });\n        this.keyManager.keyup([\"shift\"], () => {\n            this.forceUpdate();\n        });\n    }\n    public updateRect() {\n        this.getMoveable().updateRect();\n    }\n}\nexport default interface MoveableManager extends EditorInterface { }\n","import MoveableHelper from \"moveable-helper\";\nimport Memory from \"./Memory\";\nimport { Frame } from \"scenejs\";\nimport { getId } from \"./utils\";\n\nexport default class MoveableData extends MoveableHelper {\n    public selectedTargets: Array<HTMLElement | SVGElement> = [];\n    constructor(private memory: Memory) {\n        super({\n            createAuto: true,\n        })\n    }\n    public setSelectedTargets(targets: Array<HTMLElement | SVGElement>) {\n        this.selectedTargets = targets;\n    }\n    public getSelectedTargets() {\n        return this.selectedTargets;\n    }\n    public getSelectedFrames(): Frame[] {\n        return this.getSelectedTargets().map(target => this.getFrame(target));\n    }\n    public renderFrames() {\n        this.getSelectedTargets().forEach((target: any) => {\n            this.render(target);\n        });\n    }\n    public setProperty(names: string[], value: any) {\n        const targets = this.getSelectedTargets();\n\n        const infos = targets.map(target => {\n            const frame = this.getFrame(target);\n            const prev = frame.get();\n            frame.set(...names, value);\n            const next = frame.get();\n\n            return { id: getId(target), prev, next };\n\n        });\n        this.renderFrames();\n\n        return infos;\n    }\n    public removeProperties(...names: string[]) {\n        return this.getSelectedTargets().map(target => {\n            const frame = this.getFrame(target);\n            const prev = frame.get();\n\n            names.forEach(name => {\n                frame.remove(name);\n                target.style.removeProperty(name);\n            });\n            const next = frame.get();\n\n            return { id: getId(target), prev, next };\n        });\n    }\n    public getProperties(properties: string[][], defaultValues: any[]) {\n        const frames = this.getSelectedFrames();\n        const memory = this.memory;\n\n        if (!frames.length) {\n            return properties.map((property, i) => memory.get(property.join(\"///\")) || defaultValues[i]);\n        }\n\n        return properties.map((property, i) => {\n            const frameValues = frames.map(frame => frame.get(...property));\n\n            return frameValues.filter(color => color)[0] || defaultValues[i];\n        });\n    }\n\n}\n","import { IObject } from \"@daybrush/utils\";\nimport Editor from \"../Editor\";\n\nexport type RestoreCallback = (props: any, editor: Editor) => any;\nexport interface HistoryAction {\n    type: string;\n    props: IObject<any>;\n}\nexport default class HistoryManager {\n    private undoStack: HistoryAction[] = [];\n    private redoStack: HistoryAction[] = [];\n    private types: IObject<{ redo: RestoreCallback, undo: RestoreCallback }> = {};\n    constructor(private editor: Editor) { }\n    public registerType(type: string, undo: RestoreCallback, redo: RestoreCallback) {\n        this.types[type] = { undo, redo };\n    }\n    public addAction(type: string, props: IObject<any>) {\n        this.editor.console.log(`Add History:`, type, props);\n        this.undoStack.push({\n            type,\n            props,\n        });\n        this.redoStack = [];\n    }\n    public undo() {\n        const undoAction = this.undoStack.pop();\n\n        if (!undoAction) {\n            return;\n        }\n        this.editor.console.log(`Undo History: ${undoAction.type}`, undoAction.props);\n        this.types[undoAction.type].undo(undoAction.props, this.editor);\n        this.redoStack.push(undoAction);\n    }\n    public redo() {\n        const redoAction = this.redoStack.pop();\n\n        if (!redoAction) {\n            return;\n        }\n        this.editor.console.log(`Redo History: ${redoAction.type}`, redoAction.props);\n        this.types[redoAction.type].redo(redoAction.props, this.editor);\n        this.undoStack.push(redoAction);\n    }\n}\n","export default class Debugger {\n    constructor(private isDebug?: boolean) {}\n    public log(...args: any[]) {\n        if (!this.isDebug) {\n            return;\n        }\n        console.log(\"%c Scena Debugger:\", \"padding: 1px; background: #4af; color: #fff;\", ...args);\n    }\n}\n","import * as React from \"react\";\nimport { ClipboardItem, SavedScenaData } from \"../types\";\nimport Editor from \"../Editor\";\nimport { checkInput } from \"./utils\";\nimport html2canvas from \"html2canvas\";\nimport { TYPE_SCENA_LAYERS } from \"../consts\";\nimport MoveableGroup from \"react-moveable/declaration/MoveableGroup\";\n\n\nexport default class ClipboardManager {\n    constructor(private editor: Editor) {\n        document.addEventListener(\"cut\", this.onCut);\n        document.addEventListener(\"copy\", this.onCopy);\n        document.addEventListener(\"paste\", this.onPaste);\n    }\n    public destroy() {\n        document.removeEventListener(\"cut\", this.onCut);\n        document.removeEventListener(\"copy\", this.onCopy);\n        document.removeEventListener(\"paste\", this.onPaste);\n    }\n    public copy() {\n        document.execCommand(\"copy\");\n    }\n    public cut() {\n        document.execCommand(\"cut\");\n    }\n    public paste() {\n        document.execCommand(\"paste\");\n    }\n    public copyImage() {\n        const moveableData = this.editor.moveableData;\n        const targets = moveableData.getSelectedTargets();\n        const moveable = this.editor.getMoveable();\n        const length = targets.length;\n        const moveables = length > 1 ? (moveable.moveable as MoveableGroup).moveables : [];\n\n        return new Promise(resolve => {\n            Promise.all(targets.map(target => html2canvas(target as HTMLElement))).then(images => {\n                let imageCanvas: HTMLCanvasElement;\n                if (length > 1) {\n                    const parentRect = moveable.getRect();\n                    const canvas = document.createElement(\"canvas\");\n                    canvas.width = parentRect.width;\n                    canvas.height = parentRect.height;\n                    const context = canvas.getContext(\"2d\")!;\n                    const rects = moveables.map(m => m.getRect());\n\n                    console.log(rects);\n                    rects.map((rect, i) => {\n                        context.drawImage(images[i], rect.left - parentRect.left, rect.top - parentRect.top);\n                    });\n\n                    imageCanvas = canvas;\n                } else {\n                    imageCanvas = images[0];\n                }\n                imageCanvas.toBlob(blob => {\n                    (navigator.clipboard as any).write([\n                        new (window as any).ClipboardItem({\n                            \"image/png\": blob,\n                        }),\n                    ]);\n                    resolve();\n                });\n            });\n        });\n    }\n    private onCut = (e: any) => {\n        const copied = this.onCopy(e);\n\n        if (!copied) {\n            return;\n        }\n        this.editor.console.log(\"cut scena data\");\n        this.editor.removeElements(this.editor.getSelectedTargets());\n    }\n\n    private onCopy = async (e: any) => {\n        if (checkInput(e.target)) {\n            return false;\n        }\n        e.preventDefault();\n\n        const clipboardData = (e as any).clipboardData as DataTransfer;\n        const moveableData = this.editor.moveableData;\n        const targets = moveableData.getSelectedTargets();\n        const SavedScenaData = this.editor.saveTargets(targets);\n\n        this.editor.console.log(\"copy scena data\", SavedScenaData);\n        clipboardData.setData(TYPE_SCENA_LAYERS, JSON.stringify(SavedScenaData));\n\n        return true;\n    }\n    private onPaste = (e: any) => {\n        if (checkInput(e.target)) {\n            return;\n        }\n\n        this.read((e as any).clipboardData);\n        e.preventDefault();\n    }\n    private readDataTransfter(data: DataTransfer) {\n        const types = data.types;\n        const hasScena = types.indexOf(TYPE_SCENA_LAYERS) > -1;\n\n        if (hasScena) {\n            const scenaDatas = JSON.parse(data.getData(TYPE_SCENA_LAYERS)) as SavedScenaData[];\n\n            this.editor.console.log(\"paste scena data\", scenaDatas);\n\n            this.editor.loadDatas(scenaDatas);\n            return true;\n        }\n        return false;\n    }\n    private async read(data: DataTransfer) {\n        if (this.readDataTransfter(data)) {\n            return true;\n        }\n        const clipboardItems: ClipboardItem[] = await (navigator.clipboard as any).read();\n\n        let hasText = false;\n        const isPaste = clipboardItems.filter(item => {\n            const types = item.types;\n\n            const hasImage = types.indexOf(\"image/png\") > -1;\n            hasText = hasText || types.indexOf(\"text/plain\") > -1;\n\n            if (hasImage) {\n                item.getType(\"image/png\").then(blob => {\n                    this.editor.appendBlob(blob);\n                });\n                return true;\n            }\n            return false;\n        }).length > 0;\n\n        if (!isPaste && hasText) {\n            const text = await navigator.clipboard.readText();\n\n            this.editor.appendJSXs([{\n                jsx: <div contentEditable=\"true\"></div>,\n                name: \"(Text)\",\n                innerText: text,\n            }]);\n        }\n    }\n}\n","import * as React from \"react\";\nimport InfiniteViewer from \"react-infinite-viewer\";\nimport Guides from \"@scena/react-guides\";\nimport Selecto, { Rect } from \"react-selecto\";\nimport \"./Editor.css\";\nimport Menu from \"./Menu/Menu\";\nimport Viewport, { ElementInfo, MovedInfo, MovedResult } from \"./Viewport/Viewport\";\nimport { getContentElement, prefix, getIds, checkImageLoaded, checkInput, getParnetScenaElement, getScenaAttrs } from \"./utils/utils\";\nimport Tabs from \"./Tabs/Tabs\";\nimport EventBus from \"./utils/EventBus\";\nimport { IObject } from \"@daybrush/utils\";\nimport Memory from \"./utils/Memory\";\nimport MoveableManager from \"./Viewport/MoveableMananger\";\nimport MoveableData from \"./utils/MoveableData\";\nimport KeyManager from \"./KeyManager/KeyManager\";\nimport { ScenaEditorState, SavedScenaData, ScenaJSXElement } from \"./types\";\nimport HistoryManager from \"./utils/HistoryManager\";\nimport Debugger from \"./utils/Debugger\";\nimport { isMacintosh, DATA_SCENA_ELEMENT_ID } from \"./consts\";\nimport ClipboardManager from \"./utils/ClipboardManager\";\n\nfunction undoCreateElements({ infos, prevSelected }: IObject<any>, editor: Editor) {\n    const res = editor.removeByIds(infos.map((info: ElementInfo) => info.id), true);\n\n    if (prevSelected) {\n        res.then(() => {\n            editor.setSelectedTargets(editor.getViewport().getElements(prevSelected), true);\n        })\n    }\n}\nfunction restoreElements({ infos }: IObject<any>, editor: Editor) {\n    editor.appendJSXs(infos.map((info: ElementInfo) => ({\n        ...info,\n    })), true);\n}\nfunction undoSelectTargets({ prevs, nexts }: IObject<any>, editor: Editor) {\n    editor.setSelectedTargets(editor.viewport.current!.getElements(prevs), true);\n}\nfunction redoSelectTargets({ prevs, nexts }: IObject<any>, editor: Editor) {\n    editor.setSelectedTargets(editor.viewport.current!.getElements(nexts), true);\n}\nfunction undoChangeText({ prev, next, id }: IObject<any>, editor: Editor) {\n    const info = editor.getViewport().getInfo(id)!;\n    info.innerText = prev;\n    info.el!.innerText = prev;\n}\nfunction redoChangeText({ prev, next, id }: IObject<any>, editor: Editor) {\n    const info = editor.getViewport().getInfo(id)!;\n    info.innerText = next;\n    info.el!.innerText = next;\n}\nfunction undoMove({ prevInfos }: MovedResult, editor: Editor) {\n    editor.moves(prevInfos, true);\n}\nfunction redoMove({ nextInfos }: MovedResult, editor: Editor) {\n    editor.moves(nextInfos, true);\n}\nexport default class Editor extends React.PureComponent<{\n    width: number,\n    height: number,\n    debug?: boolean,\n}, Partial<ScenaEditorState>> {\n    public static defaultProps = {\n        width: 400,\n        height: 600,\n    };\n    public state: ScenaEditorState = {\n        selectedTargets: [],\n        horizontalGuides: [],\n        verticalGuides: [],\n        zoom: 1,\n        selectedMenu: \"MoveTool\",\n    };\n    public historyManager = new HistoryManager(this);\n    public console = new Debugger(this.props.debug);\n    public eventBus = new EventBus();\n    public memory = new Memory();\n    public moveableData = new MoveableData(this.memory);\n    public keyManager = new KeyManager(this.console);\n    public clipboardManager = new ClipboardManager(this);\n\n    public horizontalGuides = React.createRef<Guides>();\n    public verticalGuides = React.createRef<Guides>();\n    public infiniteViewer = React.createRef<InfiniteViewer>();\n    public selecto = React.createRef<Selecto>();\n    public menu = React.createRef<Menu>();\n    public moveableManager = React.createRef<MoveableManager>();\n    public viewport = React.createRef<Viewport>();\n    public tabs = React.createRef<Tabs>();\n    public editorElement = React.createRef<HTMLDivElement>();\n\n    public render() {\n        const {\n            horizontalGuides,\n            verticalGuides,\n            infiniteViewer,\n            moveableManager,\n            viewport,\n            menu,\n            tabs,\n            selecto,\n            state,\n        } = this;\n        const {\n            selectedMenu,\n            selectedTargets,\n            zoom,\n        } = state;\n        const {\n            width,\n            height,\n        } = this.props;\n        const horizontalSnapGuides = [0, height, height / 2, ...state.horizontalGuides];\n        const verticalSnapGuides = [0, width, width / 2, ...state.verticalGuides];\n        let unit = 50;\n\n        if (zoom < 0.8) {\n            unit = Math.floor(1 / zoom) * 50;\n        }\n        return (\n            <div className={prefix(\"editor\")} ref={this.editorElement}>\n                <Tabs ref={tabs} editor={this}></Tabs>\n                <Menu ref={menu} editor={this} onSelect={this.onMenuChange} />\n                <div className={prefix(\"reset\")} onClick={e => {\n                    infiniteViewer.current!.scrollCenter();\n                }}></div>\n                <Guides ref={horizontalGuides}\n                    type=\"horizontal\" className={prefix(\"guides\", \"horizontal\")} style={{}}\n                    snapThreshold={5}\n                    snaps={horizontalSnapGuides}\n                    displayDragPos={true}\n                    dragPosFormat={v => `${v}px`}\n                    zoom={zoom}\n                    unit={unit}\n                    onChangeGuides={e => {\n                        this.setState({\n                            horizontalGuides: e.guides,\n                        });\n                    }}\n                ></Guides>\n                <Guides ref={verticalGuides}\n                    type=\"vertical\" className={prefix(\"guides\", \"vertical\")} style={{}}\n                    snapThreshold={5}\n                    snaps={verticalSnapGuides}\n                    displayDragPos={true}\n                    dragPosFormat={v => `${v}px`}\n                    zoom={zoom}\n                    unit={unit}\n                    onChangeGuides={e => {\n                        this.setState({\n                            verticalGuides: e.guides,\n                        });\n                    }}\n                ></Guides>\n                <InfiniteViewer ref={infiniteViewer}\n                    className={prefix(\"viewer\")}\n                    usePinch={true}\n                    pinchThreshold={50}\n                    zoom={zoom}\n                    onDragStart={e => {\n                        const target = e.inputEvent.target;\n                        this.checkBlur();\n\n                        if (\n                            target.nodeName === \"A\"\n                            || moveableManager.current!.getMoveable().isMoveableElement(target)\n                            || selectedTargets.some(t => t === target || t.contains(target))\n                        ) {\n                            e.stop();\n                        }\n                    }}\n                    onDragEnd={e => {\n                        if (!e.isDrag) {\n                            selecto.current!.clickTarget(e.inputEvent);\n                        }\n                    }}\n                    onAbortPinch={e => {\n                        selecto.current!.triggerDragStart(e.inputEvent);\n                    }}\n                    onScroll={e => {\n                        horizontalGuides.current!.scroll(e.scrollLeft);\n                        horizontalGuides.current!.scrollGuides(e.scrollTop);\n\n                        verticalGuides.current!.scroll(e.scrollTop);\n                        verticalGuides.current!.scrollGuides(e.scrollLeft);\n                    }}\n                    onPinch={e => {\n                        this.setState({\n                            zoom: e.zoom,\n                        });\n                    }}\n                >\n                    <Viewport ref={viewport}\n                        onBlur={this.onBlur}\n                        style={{\n                            width: `${width}px`,\n                            height: `${height}px`,\n                        }}>\n                        <MoveableManager\n                            ref={moveableManager}\n                            selectedTargets={selectedTargets}\n                            selectedMenu={selectedMenu}\n                            verticalGuidelines={verticalSnapGuides}\n                            horizontalGuidelines={horizontalSnapGuides}\n                            editor={this}\n                        ></MoveableManager>\n                    </Viewport>\n                </InfiniteViewer>\n                <Selecto\n                    ref={selecto}\n                    dragContainer={\".scena-viewer\"}\n                    hitRate={0}\n                    selectableTargets={[`.scena-viewport [${DATA_SCENA_ELEMENT_ID}]`]}\n                    selectByClick={true}\n                    selectFromInside={false}\n                    toggleContinueSelect={[\"shift\"]}\n                    preventDefault={true}\n                    scrollOptions={\n                        infiniteViewer.current ? {\n                            container: infiniteViewer.current.getContainer(),\n                            threshold: 30,\n                            throttleTime: 30,\n                            getScrollPosition: () => {\n                                const current = infiniteViewer.current!;\n                                return [\n                                    current.getScrollLeft(),\n                                    current.getScrollTop(),\n                                ];\n                            },\n                        } : undefined\n                    }\n                    onDragStart={e => {\n                        const inputEvent = e.inputEvent;\n                        const target = inputEvent.target;\n\n                        this.checkBlur();\n                        if (selectedMenu === \"Text\" && target.isContentEditable) {\n                            const contentElement = getContentElement(target);\n\n                            if (contentElement && contentElement.hasAttribute(DATA_SCENA_ELEMENT_ID)) {\n                                e.stop();\n                                this.setSelectedTargets([contentElement]);\n                            }\n                        }\n                        if (\n                            (inputEvent.type === \"touchstart\" && e.isTrusted)\n                            || moveableManager.current!.getMoveable().isMoveableElement(target)\n                            || state.selectedTargets.some(t => t === target || t.contains(target))\n                        ) {\n                            e.stop();\n                        }\n                    }}\n                    onScroll={({ direction }) => {\n                        infiniteViewer.current!.scrollBy(direction[0] * 10, direction[1] * 10);\n                    }}\n                    onSelectEnd={({ isDragStart, selected, inputEvent, rect }) => {\n                        if (isDragStart) {\n                            inputEvent.preventDefault();\n                        }\n                        if (this.selectEndMaker(rect)) {\n                            return;\n                        }\n                        this.setSelectedTargets(selected).then(() => {\n                            if (!isDragStart) {\n                                return;\n                            }\n                            moveableManager.current!.getMoveable().dragStart(inputEvent);\n                        });\n                    }}\n                ></Selecto>\n            </div>\n        );\n    }\n    public componentDidMount() {\n        const {\n            infiniteViewer,\n            memory,\n            eventBus,\n        } = this;\n        memory.set(\"background-color\", \"#4af\");\n        memory.set(\"color\", \"#333\");\n\n        requestAnimationFrame(() => {\n            infiniteViewer.current!.scrollCenter();\n        });\n        window.addEventListener(\"resize\", this.onResize);\n        window.addEventListener(\"wheel\", this.onWheel, {\n            passive: false,\n        });\n        const viewport = this.getViewport();\n\n\n        eventBus.on(\"blur\", () => {\n            this.menu.current!.blur();\n            this.tabs.current!.blur();\n        });\n        eventBus.on(\"selectLayers\", (e: any) => {\n            const selected = e.selected as string[];\n\n            this.setSelectedTargets(selected.map(key => viewport.getInfo(key)!.el!));\n        });\n        eventBus.on(\"update\", () => {\n            this.forceUpdate();\n        });\n\n\n        this.keyManager.keydown([\"left\"], e => {\n            this.move(-10, 0);\n            e.inputEvent.preventDefault();\n        }, \"Move Left\");\n        this.keyManager.keydown([\"up\"], e => {\n            this.move(0, -10);\n            e.inputEvent.preventDefault();\n        }, \"Move Up\");\n        this.keyManager.keydown([\"right\"], e => {\n            this.move(10, 0);\n            e.inputEvent.preventDefault();\n        }, \"Move Right\");\n        this.keyManager.keydown([\"down\"], e => {\n            this.move(0, 10);\n            e.inputEvent.preventDefault();\n        }, \"Move Down\");\n        this.keyManager.keyup([\"backspace\"], () => {\n            this.removeElements(this.getSelectedTargets());\n        }, \"Delete\");\n        this.keyManager.keydown([isMacintosh ? \"meta\" : \"ctrl\", \"x\"], () => { }, \"Cut\");\n        this.keyManager.keydown([isMacintosh ? \"meta\" : \"ctrl\", \"c\"], () => { }, \"Copy\");\n        // this.keyManager.keydown([isMacintosh ? \"meta\" : \"ctrl\", \"shift\", \"c\"], e => {\n        //     this.clipboardManager.copyImage();\n        //     e.inputEvent.preventDefault();\n        // }, \"Copy to Image\");\n        this.keyManager.keydown([isMacintosh ? \"meta\" : \"ctrl\", \"v\"], () => { }, \"Paste\");\n        this.keyManager.keydown([isMacintosh ? \"meta\" : \"ctrl\", \"z\"], () => {\n            this.historyManager.undo();\n        }, \"Undo\");\n        this.keyManager.keydown([isMacintosh ? \"meta\" : \"ctrl\", \"shift\", \"z\"], () => {\n            this.historyManager.redo();\n        }, \"Redo\");\n        this.keyManager.keydown([isMacintosh ? \"meta\" : \"ctrl\", \"a\"], e => {\n            this.setSelectedTargets(this.getViewportInfos().map(info => info.el!));\n            e.inputEvent.preventDefault();\n        }, \"Redo\");\n        this.keyManager.keydown([isMacintosh ? \"meta\" : \"ctrl\", \"alt\", \"g\"], e => {\n            e.inputEvent.preventDefault();\n            this.moveInside();\n        }, \"Move Inside\");\n        this.keyManager.keydown([isMacintosh ? \"meta\" : \"ctrl\", \"shift\", \"alt\", \"g\"], e => {\n            e.inputEvent.preventDefault();\n            this.moveOutside();\n        }, \"Move Outside\");\n        this.historyManager.registerType(\"createElements\", undoCreateElements, restoreElements);\n        this.historyManager.registerType(\"removeElements\", restoreElements, undoCreateElements);\n        this.historyManager.registerType(\"selectTargets\", undoSelectTargets, redoSelectTargets);\n        this.historyManager.registerType(\"changeText\", undoChangeText, redoChangeText);\n        this.historyManager.registerType(\"move\", undoMove, redoMove);\n    }\n    public componentWillUnmount() {\n        this.eventBus.off();\n        this.memory.clear();\n        this.moveableData.clear();\n        this.keyManager.destroy();\n        this.clipboardManager.destroy();\n        window.removeEventListener(\"resize\", this.onResize);\n        window.removeEventListener(\"wheel\", this.onWheel);\n    }\n    public promiseState(state: Partial<ScenaEditorState>) {\n        return new Promise(resolve => {\n            this.setState(state, () => {\n                resolve();\n            });\n        });\n    }\n    public getSelectedTargets() {\n        return this.state.selectedTargets;\n    }\n    public setSelectedTargets(targets: Array<HTMLElement | SVGElement>, isRestore?: boolean) {\n        targets = targets.filter(target => {\n            return targets.every(parnetTarget => {\n                return parnetTarget === target || !parnetTarget.contains(target);\n            });\n        });\n\n        return this.promiseState({\n            selectedTargets: targets,\n        }).then(() => {\n            if (!isRestore) {\n                const prevs = getIds(this.moveableData.getSelectedTargets());\n                const nexts = getIds(targets);\n\n                if (prevs.length !== nexts.length || !prevs.every((prev, i) => nexts[i] === prev)) {\n                    this.historyManager.addAction(\"selectTargets\", { prevs, nexts });\n                }\n            }\n            this.selecto.current!.setSelectedTargets(targets);\n            this.moveableData.setSelectedTargets(targets);\n            this.eventBus.trigger(\"setSelectedTargets\");\n            return targets;\n        });\n    }\n    public appendJSX(info: ElementInfo) {\n        return this.appendJSXs([info]).then(targets => targets[0]);\n    }\n\n    public appendJSXs(jsxs: ElementInfo[], isRestore?: boolean): Promise<Array<HTMLElement | SVGElement>> {\n        const viewport = this.getViewport();\n        const indexesList = viewport.getSortedIndexesList(this.getSelectedTargets());\n        const indexesListLength = indexesList.length;\n        let appendIndex = -1;\n        let scopeId: string = \"\";\n\n        if (!isRestore && indexesListLength) {\n            const indexes = indexesList[indexesListLength - 1];\n\n\n            const info = viewport.getInfoByIndexes(indexes);\n\n            scopeId = info.scopeId!;\n            appendIndex = indexes[indexes.length - 1] + 1;\n        }\n\n        this.console.log(\"append jsxs\", jsxs, appendIndex, scopeId);\n\n        return this.getViewport().appendJSXs(jsxs, appendIndex, scopeId).then(({ added }) => {\n            return this.appendComplete(added, isRestore);\n        });\n    }\n    public appendComplete(infos: ElementInfo[], isRestore?: boolean) {\n        !isRestore && this.historyManager.addAction(\"createElements\", {\n            infos,\n            prevSelected: getIds(this.getSelectedTargets()),\n        });\n        const data = this.moveableData;\n        const targets = infos.map(function registerFrame(info) {\n            data.createFrame(info.el!, info.frame);\n            data.render(info.el!);\n\n            info.children!.forEach(registerFrame);\n            return info.el!;\n        }).filter(el => el);\n\n        return Promise.all(targets.map(target => checkImageLoaded(target))).then(() => {\n            this.setSelectedTargets(targets, true);\n\n            return targets;\n        });\n    }\n    public removeByIds(ids: string[], isRestore?: boolean) {\n        return this.removeElements(this.getViewport().getElements(ids), isRestore);\n    }\n    public getMoveable() {\n        return this.moveableManager.current!.getMoveable();\n    }\n    public removeFrames(targets: Array<HTMLElement | SVGElement>) {\n        const frameMap: IObject<any> = {};\n        const moveableData = this.moveableData;\n        const viewport = this.getViewport();\n\n        targets.forEach(function removeFrame(target) {\n            const info = viewport.getInfoByElement(target)!;\n\n            frameMap[info.id!] = moveableData.getFrame(target).get();\n            moveableData.removeFrame(target);\n\n            info.children!.forEach(childInfo => {\n                removeFrame(childInfo.el!);\n            });\n        });\n\n        return frameMap;\n    }\n    public restoreFrames(infos: ElementInfo[], frameMap: IObject<any>) {\n        const viewport = this.getViewport();\n        const moveableData = this.moveableData;\n\n        infos.forEach(function registerFrame(info) {\n            info.frame = frameMap[info.id!];\n            delete frameMap[info.id!];\n\n            info.children!.forEach(registerFrame);\n        });\n        for (const id in frameMap) {\n            moveableData.createFrame(viewport.getInfo(id).el!, frameMap[id]);\n        }\n    }\n    public removeElements(targets: Array<HTMLElement | SVGElement>, isRestore?: boolean) {\n        const viewport = this.getViewport();\n        const frameMap = this.removeFrames(targets);\n        const indexesList = viewport.getSortedIndexesList(targets);\n        const indexesListLength = indexesList.length;\n        let scopeId = \"\";\n        let selectedInfo: ElementInfo | null = null;\n\n        if (indexesListLength) {\n            const lastInfo = viewport.getInfoByIndexes(indexesList[indexesListLength - 1]);\n            const nextInfo = viewport.getNextInfo(lastInfo.id!);\n\n            scopeId = lastInfo.scopeId!;\n            selectedInfo = nextInfo;\n        }\n        // return;\n        return viewport.removeTargets(targets).then(({ removed }) => {\n            let selectedTarget = selectedInfo || viewport.getLastChildInfo(scopeId)! || viewport.getInfo(scopeId);\n\n            this.setSelectedTargets(selectedTarget && selectedTarget.el ? [selectedTarget.el!] : [], true);\n\n            this.console.log(\"removeTargets\", removed);\n            !isRestore && this.historyManager.addAction(\"removeElements\", {\n                infos: removed.map(function removeTarget(info: ElementInfo): ElementInfo {\n                    return {\n                        ...info,\n                        children: info.children!.map(removeTarget),\n                        frame: frameMap[info.id!] || info.frame,\n                    };\n                }),\n            });\n            return targets;\n        });\n    }\n    public setProperty(scope: string[], value: any, isUpdate?: boolean) {\n        const infos = this.moveableData.setProperty(scope, value);\n\n        this.historyManager.addAction(\"renders\", { infos });\n\n        if (isUpdate) {\n            this.moveableManager.current!.updateRect();\n        }\n        this.eventBus.requestTrigger(\"render\");\n    }\n    public selectMenu(menu: string) {\n        this.menu.current!.select(menu);\n    }\n    public loadDatas(datas: SavedScenaData[]) {\n        const viewport = this.getViewport();\n        return this.appendJSXs(datas.map(function loadData(data): any {\n            const { componentId, jsxId, children } = data;\n\n            let jsx: ScenaJSXElement;\n\n            if (jsxId) {\n                jsx = viewport.getJSX(jsxId);\n            } else if (componentId) {\n                const Component = viewport.getComponent(componentId);\n\n                jsx = <Component />;\n            } else {\n                jsx = React.createElement(data.tagName);\n            }\n            return {\n                ...data,\n                children: children.map(loadData),\n                jsx,\n            };\n        }).filter(info => info) as ElementInfo[]);\n    }\n    public saveTargets(targets: Array<HTMLElement | SVGElement>): SavedScenaData[] {\n        const viewport = this.getViewport();\n        const moveableData = this.moveableData;\n        this.console.log(\"save targets\", targets);\n        return targets.map(target => viewport.getInfoByElement(target)).map(function saveTarget(info): SavedScenaData {\n            const target = info.el!;\n            const isContentEditable = info.attrs!.contenteditable;\n            return {\n                name: info.name,\n                attrs: getScenaAttrs(target),\n                jsxId: info.jsxId || \"\",\n                componentId: info.componentId!,\n                innerHTML: isContentEditable ? \"\" : target.innerHTML,\n                innerText: isContentEditable ? (target as HTMLElement).innerText : \"\",\n                tagName: target.tagName.toLowerCase(),\n                frame: moveableData.getFrame(target).get(),\n                children: info.children!.map(saveTarget),\n            };\n        });\n    }\n    public getViewport() {\n        return this.viewport.current!;\n    }\n    public getViewportInfos() {\n        return this.getViewport().getViewportInfos();\n    }\n    public appendBlob(blob: Blob) {\n        const url = URL.createObjectURL(blob);\n\n        return this.appendJSX({\n            jsx: <img src={url} alt=\"appended blob\" />,\n            name: \"(Image)\",\n        });\n    }\n    public moves(movedInfos: MovedInfo[], isRestore?: boolean) {\n        const frameMap = this.removeFrames(movedInfos.map(({ info }) => info.el!));\n\n        return this.getViewport().moves(movedInfos).then(result => this.moveComplete(result, frameMap, isRestore));\n    }\n\n\n    private onMenuChange = (id: string) => {\n        this.setState({\n            selectedMenu: id,\n        });\n    }\n    private selectEndMaker(rect: Rect) {\n        const infiniteViewer = this.infiniteViewer.current!;\n        const selectIcon = this.menu.current!.getSelected();\n        const width = rect.width;\n        const height = rect.height;\n\n        if (!selectIcon || !selectIcon.maker || !width || !height) {\n            return false;\n        }\n        const maker = selectIcon.maker(this.memory);\n        const scrollTop = -infiniteViewer.getScrollTop() + 30;\n        const scrollLeft = -infiniteViewer.getScrollLeft() + 75;\n        const top = rect.top - scrollTop;\n        const left = rect.left - scrollLeft;\n\n\n        const style = {\n            top: `${top}px`,\n            left: `${left}px`,\n            position: \"absolute\",\n            width: `${width}px`,\n            height: `${height}px`,\n            ...maker.style,\n        } as any;\n        this.appendJSX({\n            jsx: maker.tag,\n            attrs: maker.attrs,\n            name: `(${selectIcon.id})`,\n            frame: style,\n        }).then(selectIcon.makeThen);\n        return true;\n    }\n    private move(deltaX: number, deltaY: number) {\n        this.getMoveable().request(\"draggable\", { deltaX, deltaY }, true);\n    }\n    private checkBlur() {\n        const activeElement = document.activeElement;\n        if (activeElement) {\n            (activeElement as HTMLElement).blur();\n        }\n        const selection = document.getSelection()!;\n\n        if (selection) {\n            selection.removeAllRanges();\n        }\n        this.eventBus.trigger(\"blur\");\n    }\n    private onResize = () => {\n        this.horizontalGuides.current!.resize();\n        this.verticalGuides.current!.resize();\n    }\n    private onWheel = (e: any) => {\n        if (this.keyManager.altKey) {\n            e.preventDefault();\n            this.setState({\n                zoom: Math.max(0.1, this.state.zoom + e.deltaY / 300),\n            });\n        }\n    }\n    private onBlur = (e: any) => {\n        const target = e.target as HTMLElement | SVGElement;\n\n        if (!checkInput(target)) {\n            return;\n        }\n        const parentTarget = getParnetScenaElement(target);\n\n        if (!parentTarget) {\n            return;\n        }\n        const info = this.getViewport().getInfoByElement(parentTarget)!;\n\n\n        if (!info.attrs!.contenteditable) {\n            return\n        }\n        const nextText = (parentTarget as HTMLElement).innerText;\n\n        if (info.innerText === nextText) {\n            return;\n        }\n        this.historyManager.addAction(\"changeText\", {\n            id: info.id,\n            prev: info.innerText,\n            next: nextText,\n        });\n        info.innerText = nextText;\n    }\n    private moveInside() {\n        let targets = this.getSelectedTargets();\n\n        const length = targets.length;\n        if (length !== 1) {\n            return;\n        }\n        targets = [targets[0]];\n\n\n        const viewport = this.getViewport();\n        const frameMap = this.removeFrames(targets);\n\n        return viewport.moveInside(targets[0]).then(result => this.moveComplete(result, frameMap));\n    }\n    private moveOutside() {\n        let targets = this.getSelectedTargets();\n\n        const length = targets.length;\n        if (length !== 1) {\n            return;\n        }\n        targets = [targets[0]];\n\n        const frameMap = this.removeFrames(targets);\n        this.getViewport().moveOutside(targets[0]).then(result => this.moveComplete(result, frameMap));\n\n    }\n    private moveComplete(result: MovedResult, frameMap: IObject<any>, isRestore?: boolean) {\n        this.console.log(\"move complte\", result);\n\n        const { moved, prevInfos, nextInfos } = result;\n        this.restoreFrames(moved, frameMap);\n\n        if (moved.length) {\n            if (!isRestore) {\n                this.historyManager.addAction(\"move\", {\n                    prevInfos,\n                    nextInfos,\n                });\n            }\n            // move complete\n            this.appendComplete(moved, true);\n        }\n\n        return result;\n    }\n}\n","import Editor from \"./Editor\";\n\nexport default Editor;\nexport { makeScenaFunctionComponent } from \"./utils/utils\";\n","import * as React from \"react\";\nimport \"./App.css\";\nimport { ScenaProps } from \"../Editor/types\";\nimport Editor, { makeScenaFunctionComponent } from \"../Editor\";\n\nconst Badge = makeScenaFunctionComponent(\"Badge\", function Badge(props: ScenaProps) {\n    return <p className=\"badges\" data-scena-element-id={props.scenaElementId}>\n        <a href=\"https://www.npmjs.com/package/moveable\" target=\"_blank\">\n            <img src=\"https://img.shields.io/npm/v/moveable.svg?style=flat-square&amp;color=007acc&amp;label=version\" alt=\"npm version\" /></a>\n        <a href=\"https://github.com/daybrush/moveable\" target=\"_blank\">\n            <img src=\"https://img.shields.io/github/stars/daybrush/moveable.svg?color=42b883&amp;style=flat-square\" /></a>\n        <a href=\"https://github.com/daybrush/moveable\" target=\"_blank\">\n            <img src=\"https://img.shields.io/badge/language-typescript-blue.svg?style=flat-square\" />\n        </a>\n        <br />\n        <a href=\"https://github.com/daybrush/moveable/tree/master/packages/react-moveable\" target=\"_blank\"><img alt=\"React\" src=\"https://img.shields.io/static/v1.svg?label=&amp;message=React&amp;style=flat-square&amp;color=61daeb\" /></a>\n        <a href=\"https://github.com/daybrush/moveable/tree/master/packages/preact-moveable\" target=\"_blank\"><img alt=\"Preact\" src=\"https://img.shields.io/static/v1.svg?label=&amp;message=Preact&amp;style=flat-square&amp;color=673ab8\" /></a>\n        <a href=\"https://github.com/daybrush/moveable/tree/master/packages/ngx-moveable\" target=\"_blank\"><img alt=\"Angular\" src=\"https://img.shields.io/static/v1.svg?label=&amp;message=Angular&amp;style=flat-square&amp;color=C82B38\" /></a>\n        <a href=\"https://github.com/probil/vue-moveable\" target=\"_blank\"><img alt=\"Vue\" src=\"https://img.shields.io/static/v1.svg?label=&amp;message=Vue&amp;style=flat-square&amp;color=3fb984\" /></a>\n        <a href=\"https://github.com/daybrush/moveable/tree/master/packages/svelte-moveable\" target=\"_blank\"><img alt=\"Svelte\" src=\"https://img.shields.io/static/v1.svg?label=&amp;message=Svelte&amp;style=flat-square&amp;color=C82B38\" /></a>\n    </p>;\n});\n\nclass App extends React.Component {\n    public editor = React.createRef<Editor>();\n    public render() {\n        return <div className=\"app\">\n            <Editor\n                ref={this.editor}\n                debug={true}\n            />\n            <div className=\"bottom\">\n                <a href=\"https://github.com/daybrush/moveable\" target=\"_blank\">Download</a>\n                <a href=\"https://daybrush.com/moveable/release/latest/doc\" target=\"_blank\">API</a>\n                <a href=\"https://daybrush.com/moveable/storybook\" target=\"_blank\">Storybook</a>\n            </div>\n        </div>;\n    }\n    public componentDidMount() {\n        (window as any).a = this.editor.current!;\n        this.editor.current!.appendJSXs([\n            {\n                jsx: <div className=\"moveable\" contentEditable=\"true\" suppressContentEditableWarning={true}>Moveable</div>,\n                name: \"(Logo)\",\n                frame: {\n                    position: \"absolute\",\n                    left: \"50%\",\n                    top: \"30%\",\n                    width: \"250px\",\n                    height: \"200px\",\n                    \"font-size\": \"40px\",\n                    \"transform\": \"translate(-125px, -100px)\",\n                    display: \"flex\",\n                    \"justify-content\": \"center\",\n                    \"flex-direction\": \"column\",\n                    \"text-align\": \"center\",\n                    \"font-weight\": 100,\n                },\n            },\n            {\n                jsx: <Badge />,\n                name: \"(Badges)\",\n                frame: {\n                    position: \"absolute\",\n                    left: \"0%\",\n                    top: \"50%\",\n                    width: \"400px\",\n                    \"text-align\": \"center\",\n                },\n            },\n            {\n                jsx: <div className=\"moveable\" contentEditable=\"true\" suppressContentEditableWarning={true}>Moveable is Draggable! Resizable! Scalable! Rotatable! Warpable! Pinchable</div>,\n                name: \"(Description)\",\n                frame: {\n                    position: \"absolute\",\n                    left: \"0%\",\n                    top: \"65%\",\n                    width: \"400px\",\n                    \"font-size\": \"14px\",\n                    \"text-align\": \"center\",\n                    \"font-weight\": \"normal\",\n                },\n            },\n            {\n                jsx: <div className=\"moveable\">Moveable is Draggable! Resizable! Scalable! Rotatable! Warpable! Pinchable</div>,\n                name: \"(Description)\",\n                frame: {\n                    position: \"absolute\",\n                    left: \"0%\",\n                    top: \"65%\",\n                    width: \"400px\",\n                    \"font-size\": \"14px\",\n                    \"text-align\": \"center\",\n                    \"font-weight\": \"normal\",\n                },\n                children: [\n                    {\n                        jsx: <div className=\"moveable\">HI</div>,\n                        name: \"(Des2)\",\n                        frame: {\n                            position: \"absolute\",\n                            left: \"0%\",\n                            top: \"65%\",\n                            width: \"400px\",\n                            \"font-size\": \"14px\",\n                            \"text-align\": \"center\",\n                            \"font-weight\": \"normal\",\n                        },\n                    }\n                ]\n            },\n        ], true).then(targets => {\n            this.editor.current!.setSelectedTargets([targets[0]], true);\n        });\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './demo/App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}