{"version":3,"file":"timeline.js","sources":["../src/consts.ts","../src/utils.ts","../src/dblcheck.ts","../src/KeytimesStructure.ts","../src/HeaderAreaStructure.ts","../src/KeyframesStructure.ts","../src/PropertiesStructure.ts","../src/ValuesStructure.ts","../src/ScrollAreaStructure.ts","../src/ControlAreaStructure.ts","../src/TimelineInfo.ts","../src/Timeline.ts"],"sourcesContent":["export const PREFIX = `scenejs_editor_`;\nexport const SUPPORT_POINTER_EVENTS = \"PointerEvent\" in window || \"MSPointerEvent\" in window;\nexport const SUPPORT_TOUCH = \"ontouchstart\" in window;\n\nexport const CSS2 = `\n.item_info {\n    position: fixed;\n    right: 0;\n    top: 0;\n    width: 200px;\n    background: #000;\n}\n.options_area {\n\n}\n.option_area {\n    position: relative;\n    border-bottom: 1px solid #777;\n    box-sizing: border-box;\n    white-space: nowrap;\n    background: rgba(90, 90, 90, 0.7);\n    font-size: 13px;\n    font-weight: bold;\n    color: #eee;\n    display: flex;\n}\n.option_name, .option_value {\n    width: 50%;\n    height: 30px;\n    line-height: 20px;\n    box-sizing: border-box;\n    padding: 5px;\n}\n.option_name {\n    border-right: 1px solid #999;\n}\n.option_value input {\n    appearance: none;\n    -webkit-appearance: none;\n    outline: none;\n    position: relative;\n    display: block;\n    width: 100%;\n    height: 100%;\n    background: transparent;\n    color: #4af;\n    font-weight: bold;\n    background: none;\n    border: 0;\n    box-sizing: border-box;\n}\n`.replace(/\\.([^{,\\s\\d.]+)/g, `.${PREFIX}$1`);\n\nexport const CSS = `\n.timeline * {\n    box-sizing: border-box;\n}\n.timeline {\n  position: fixed;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  width: 100%;\n  font-size: 0;\n  background: #000;\n  display: flex;\n  flex-direction: column;\n}\n.header_area, .scroll_area {\n   width: 100%;\n   position: relative;\n  display: flex;\n  -webkit-align-items: flex-start;\n  align-items: flex-start;\n}\n.header_area {\n  position: relative;\n  z-index: 10;\n  top: 0;\n  height: 30px;\n  min-height: 30px;\n}\n.header_area .keyframes {\n  padding: 0px;\n}\n.header_area .properties_area,\n.header_area .keyframes_area,\n.header_area .values_area,\n.header_area .keyframes_scroll_area {\n    height: 100%;\n}\n.header_area .property, .header_area .value, .header_area .keyframes {\n  height: 100%;\n}\n.header_area .property {\n    line-height: 30px;\n}\n.value .add {\n    text-align: center;\n    color: #fff;\n    line-height: 30px;\n    font-weight: bold;\n    font-size: 20px;\n    cursor: pointer;\n}\n.header_area .keyframes_area::-webkit-scrollbar {\n    display: none; // Safari and Chrome\n}\n.header_area .keyframe_cursor {\n    position: absolute;\n    border-top: 10px solid #4af;\n    border-left: 6px solid transparent;\n    border-right: 6px solid transparent;\n    width: 0;\n    height: 0;\n    bottom: 0;\n    top: auto;\n    background: none;\n    cursor: pointer;\n}\n.control_area .keyframes {\n    padding-left: 10px;\n}\n.play_control_area {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n}\n.play_control_area .control {\n    position: relative;\n    display: inline-block;\n    vertical-align: middle;\n    color: white;\n    margin: 0px 15px;\n}\n.play {\n    border-left: 14px solid white;\n    border-top: 8px solid transparent;\n    border-bottom: 8px solid transparent;\n}\n.pause {\n    border-left: 4px solid #fff;\n    border-right: 4px solid #fff;\n    width: 14px;\n    height: 16px;\n}\n.prev {\n    border-right: 10px solid white;\n    border-top: 6px solid transparent;\n    border-bottom: 6px solid transparent;\n}\n.prev:before {\n    position: absolute;\n    content: \"\";\n    width: 3px;\n    height: 10px;\n    top: 0;\n    right: 100%;\n    transform: translate(0, -50%);\n    background: white;\n}\n.next {\n    border-left: 10px solid white;\n    border-top: 6px solid transparent;\n    border-bottom: 6px solid transparent;\n}\n.next:before {\n    position: absolute;\n    content: \"\";\n    width: 3px;\n    height: 10px;\n    top: 0;\n    transform: translate(0, -50%);\n    background: white;\n}\n.keytime {\n  position: relative;\n  display: inline-block;\n  height: 100%;\n  font-size: 13px;\n  font-weight: bold;\n  color: #777;\n}\n.keytime:last-child {\n  max-width: 0px;\n}\n.keytime span {\n  position: absolute;\n  line-height: 1;\n  bottom: 12px;\n  display: inline-block;\n  transform: translate(-50%);\n  color: #eee;\n}\n.keytime .graduation {\n  position: absolute;\n  bottom: 0;\n  width: 1px;\n  height: 10px;\n  background: #777;\n  transform: translate(-50%);\n}\n.keytime .graduation.half {\n  left: 50%;\n  height: 7px;\n}\n.keytime .graduation.quarter {\n  left: 25%;\n  height: 5px;\n}\n.keytime .graduation.quarter3 {\n  left: 75%;\n  height: 5px;\n}\n.scroll_area {\n  position: relative;\n  width: 100%;\n  height: calc(100% - 60px);\n  overflow: auto;\n}\n.properties_area, .keyframes_area, .values_area {\n  display: inline-block;\n  position: relative;\n  font-size: 16px;\n  overflow: auto;\n}\n\n.properties_area::-webkit-scrollbar, .keyframes_area::-webkit-scrollbar {\n    display: none; // Safari and Chrome\n}\n.properties_area {\n  width: 30%;\n  max-width: 200px;\n  box-sizing: border-box;\n}\n.values_area {\n    width: 50px;\n    min-width: 50px;\n    display: inline-block;\n    border-right: 1px solid #999;\n    box-sizing: border-box;\n}\n.value input {\n    appearance: none;\n    -webkit-appearance: none;\n    outline: none;\n    position: relative;\n    display: block;\n    width: 100%;\n    height: 100%;\n    background: transparent;\n    color: #4af;\n    font-weight: bold;\n    background: none;\n    border: 0;\n    box-sizing: border-box;\n    text-align: center;\n}\n.value {\n\n}\n.alt .value input {\n    cursor: ew-resize;\n}\n.value[data-object=\"1\"] input {\n    display: none;\n}\n.properties_scroll_area {\n  display: inline-block;\n  min-width: 100%;\n}\n.keyframes_area {\n  flex: 1;\n}\n.keyframes_scroll_area {\n  position: relative;\n  min-width: 300px;\n}\n.keyframes, .property, .value {\n  position: relative;\n  height: 30px;\n  line-height: 30px;\n  border-bottom: 1px solid #777;\n  box-sizing: border-box;\n  white-space: nowrap;\n  background: rgba(90, 90, 90, 0.7);\n  z-index: 1;\n}\n\n.property {\n  padding-left: 10px;\n  box-sizing: border-box;\n  font-size: 13px;\n  font-weight: bold;\n  color: #eee;\n}\n.property .remove {\n    position: absolute;\n    display: inline-block;\n    cursor: pointer;\n    width: 18px;\n    height: 18px;\n    top: 0;\n    bottom: 0;\n    right: 10px;\n    margin: auto;\n    border-radius: 50%;\n    border: 2px solid #fff;\n    vertical-align: middle;\n    display: none;\n    margin-left: 10px;\n    box-sizing: border-box;\n}\n.property .remove:before, .property .remove:after {\n    position: absolute;\n    content: \"\";\n    width: 8px;\n    height: 2px;\n    border-radius: 1px;\n    background: #fff;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    margin: auto;\n}\n.property .remove:before {\n    transform: rotate(45deg);\n}\n.property .remove:after {\n    transform: rotate(-45deg);\n}\n.property:hover .remove {\n    display: inline-block;\n}\n\n[data-item=\"1\"], [data-item=\"1\"] .add {\n    height: 30px;\n    line-height: 30px;\n}\n.time_area {\n    position: absolute;\n    top: 0;\n    left: 10px;\n    font-size: 13px;\n    color: #4af;\n    line-height: 30px;\n    font-weight: bold;\n    height: 100%;\n    line-height: 30px;\n    border: 0;\n    background: transparent;\n    outline: 0;\n}\n.time_area:after {\n    content: \"s\";\n}\n.property .arrow {\n    position: relative;\n    display: inline-block;\n    width: 20px;\n    height: 25px;\n    cursor: pointer;\n    vertical-align: middle;\n}\n.property .arrow:after {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    right: 0;\n    left: 0;\n    bottom: 0;\n    margin: auto;\n    width: 0;\n    height: 0;\n    border-top: 6px solid #eee;\n    border-left: 4px solid transparent;\n    border-right: 4px solid transparent;\n}\n.property[data-fold=\"1\"] .arrow:after {\n    border-top: 4px solid transparent;\n    border-bottom: 4px solid transparent;\n    border-right: 0;\n    border-left: 6px solid #eee;\n}\n.property[data-object=\"0\"] .arrow {\n    display: none;\n}\n.property.fold, .keyframes.fold, .value.fold {\n    display: none;\n}\n.property.select, .value.select, .keyframes.select {\n    background: rgba(120, 120, 120, 0.7);\n}\n.keyframes {\n\n}\n.keyframe_delay {\n  position: absolute;\n  top: 3px;\n  bottom: 3px;\n  left: 0;\n  background: #4af;\n  opacity: 0.2;\n  z-index: 0;\n}\n.keyframe_group {\n    position: absolute;\n    top: 3px;\n    bottom: 3px;\n    left: 0;\n    background: #4af;\n    opacity: 0.6;\n    border: 1px solid rgba(0, 0, 0, 0.2);\n    border-left-color: rgba(255, 255, 255, 0.2);\n    border-top-color: rgba(255, 255, 255, 0.2);\n    z-index: 0;\n}\n.keyframe_line {\n  position: absolute;\n  height: 8px;\n  top: 0;\n  bottom: 0;\n  margin: auto;\n  background: #666;\n  z-index: 0;\n}\n.keyframe {\n  position: absolute;\n  font-size: 0px;\n  width: 12px;\n  height: 12px;\n  top: 0px;\n  bottom: 0px;\n  margin: auto;\n  background: #fff;\n  border: 2px solid #383838;\n  border-radius: 2px;\n  box-sizing: border-box;\n  transform: translate(-50%) rotate(45deg);\n  z-index: 1;\n  cursor: pointer;\n}\n.keyframe[data-no=\"1\"] {\n    opacity: 0.2;\n}\n.select .keyframe {\n    border-color: #555;\n}\n.keyframe.select {\n    background: #4af;\n}\n.keyframes_container, .line_area {\n  position: relative;\n  width: calc(100% - 30px);\n  left: 15px;\n  height: 100%;\n}\n.line_area {\n  position: absolute;\n  top: 0;\n  z-index: 0;\n}\n.keyframe_cursor {\n  position: absolute;\n  top: 0;\n  z-index: 1;\n  background: #4af;\n  width: 1px;\n  height: 100%;\n  left: 15px;\n  transform: translate(-50%);\n}\n.scroll_aare .keyframe_cursor {\n  pointer-events: none;\n}\n.division_line {\n  position: absolute;\n  background: #333;\n  width: 1px;\n  height: 100%;\n  transform: translate(-50%);\n}\n`.replace(/\\.([^{,\\s\\d.]+)/g, `.${PREFIX}$1`);\n\nexport const DURATION = \"duration\";\nexport const FILL_MODE = \"fillMode\";\nexport const DIRECTION = \"direction\";\nexport const ITERATION_COUNT = \"iterationCount\";\nexport const DELAY = \"delay\";\nexport const EASING = \"easing\";\nexport const PLAY_SPEED = \"playSpeed\";\nexport const EASING_NAME = \"easingName\";\nexport const ITERATION_TIME = \"iterationTime\";\nexport const PAUSED = \"paused\";\nexport const ENDED = \"ended\";\nexport const TIMEUPDATE = \"timeupdate\";\nexport const ANIMATE = \"animate\";\nexport const PLAY = \"play\";\nexport const RUNNING = \"running\";\nexport const ITERATION = \"iteration\";\nexport const START_ANIMATION = \"startAnimation\";\nexport const PAUSE_ANIMATION = \"pauseAnimation\";\nexport const ALTERNATE = \"alternate\";\nexport const REVERSE = \"reverse\";\nexport const ALTERNATE_REVERSE = \"alternate-reverse\";\nexport const NORMAL = \"normal\";\nexport const INFINITE = \"infinite\";\nexport const PLAY_STATE = \"playState\";\nexport const PLAY_CSS = \"playCSS\";\nexport const PREV_TIME = \"prevTime\";\nexport const TICK_TIME = \"tickTime\";\nexport const CURRENT_TIME = \"currentTime\";\nexport const SELECTOR = \"selector\";\nexport const TRANSFORM_NAME = \"transform\";\n","import { PREFIX } from \"./consts\";\nimport Scene, { SceneItem, Frame } from \"scenejs\";\nimport {\n    hasClass as hasClass2,\n    addClass as addClass2,\n    removeClass as removeClass2,\n    IObject,\n    isObject,\n    isArray,\n    isUndefined,\n} from \"@daybrush/utils\";\nimport { ElementStructure, TimelineInfo } from \"./types\";\n\nexport function numberFormat(num: number, count: number, isRight?: boolean) {\n    const length = `${num}`.length;\n    const arr = [];\n\n    if (isRight) {\n        arr.push(num);\n    }\n    for (let i = length; i < count; ++i) {\n        arr.push(0);\n    }\n    if (!isRight) {\n        arr.push(num);\n    }\n    return arr.join(\"\");\n}\nexport function applyStyle(el: HTMLElement, style: IObject<any>) {\n    for (const name in style) {\n        el.style[name] = style[name];\n    }\n}\nexport function findIndexByProperty(selectedProperty: string, structures: ElementStructure[]) {\n    return structures.findIndex(\n        ({ dataset: { key } }) => key === selectedProperty,\n    );\n}\nexport function findStructureByProperty(selectedProperty: string, structures: ElementStructure[]) {\n    return structures.find(\n        ({ dataset: { key } }) => key === selectedProperty,\n    );\n}\n\nexport function createElement(structure: ElementStructure) {\n    const { selector, dataset, attr, style, html } = structure;\n\n    const classNames = selector.match(/\\.([^.#\\s])+/g) || [];\n    const tag = (selector.match(/^[^.#\\s]+/g) || [])[0] || \"div\";\n    const id = (selector.match(/#[^.#\\s]+/g) || [])[0] || \"\";\n    const el = document.createElement(tag);\n\n    id && (el.id = id.replace(/^#/g, \"\"));\n    el.className = classNames.map(name => `${PREFIX}${name.replace(/^\\./g, \"\")}`).join(\" \");\n\n    if (dataset) {\n        for (const name in dataset) {\n            el.setAttribute(`data-${name}`, dataset[name]);\n        }\n    }\n    if (attr) {\n        for (const name in attr) {\n            el.setAttribute(name, attr[name]);\n        }\n    }\n    if (style) {\n        applyStyle(el, style);\n    }\n    if (html) {\n        el.innerHTML = html;\n    }\n    return el;\n}\nexport function updateElement(prevStructure: ElementStructure, nextStructure: ElementStructure) {\n    const { dataset, attr, style, html, element } = nextStructure;\n    if (dataset) {\n        for (const name in dataset) {\n            element.setAttribute(`data-${name}`, dataset[name]);\n        }\n    }\n    if (attr) {\n        for (const name in attr) {\n            element.setAttribute(name, attr[name]);\n        }\n    }\n    style && applyStyle(element, style);\n    if (prevStructure.html !== nextStructure.html) {\n        element.innerHTML = html;\n    }\n}\nexport function keys(value: object) {\n    const arr = [];\n    for (const name in value) {\n        arr.push(name);\n    }\n    return arr;\n}\nexport function toValue(value: any) {\n    const type = typeof value;\n    if (type === \"object\") {\n        if (Array.isArray(value)) {\n            return `[${value.join(\", \")}]`;\n        }\n        return `{${keys(value).map(k => `${k}: ${toValue(value[k])}`).join(\", \")}}`;\n    }\n    return value;\n}\nexport function flatObject(obj: IObject<any>, newObj: IObject<any> = {}) {\n\n    for (const name in obj) {\n        const value = obj[name];\n\n        if (isObject(value)) {\n            const nextObj = flatObject(isFrame(value) ? value.get() : value);\n\n            for (const nextName in nextObj) {\n                newObj[`${name}///${nextName}`] = nextObj[nextName];\n            }\n        } else {\n            newObj[name] = value;\n        }\n    }\n    return newObj;\n}\n\nexport function getTarget<T extends HTMLElement>(target: T, conditionCallback: (el: Element) => boolean): T {\n    let parentTarget = target;\n\n    while (parentTarget && parentTarget !== document.body) {\n        if (conditionCallback(parentTarget)) {\n            return parentTarget;\n        }\n        parentTarget = parentTarget.parentNode as T;\n    }\n    return null;\n}\n\nexport function hasClass(target: Element, className: string) {\n    return hasClass2(target, `${PREFIX}${className}`);\n}\nexport function addClass(target: Element, className: string) {\n    return addClass2(target, `${PREFIX}${className}`);\n}\nexport function removeClass(target: Element, className: string) {\n    return removeClass2(target, `${PREFIX}${className}`);\n}\nexport function findStructure(\n    selector: string,\n    structure: ElementStructure | ElementStructure[],\n    multi: true,\n    arr?: ElementStructure[],\n): ElementStructure[];\nexport function findStructure(\n    selector: string,\n    structure: ElementStructure | ElementStructure[],\n    multi?: false,\n    arr?: ElementStructure[],\n): ElementStructure;\nexport function findStructure(\n    selector: string,\n    structure: ElementStructure | ElementStructure[],\n    multi: true | false,\n    arr?: ElementStructure[],\n): ElementStructure | ElementStructure[];\nexport function findStructure(\n    selector: string,\n    structure: ElementStructure | ElementStructure[],\n    multi: boolean = false,\n    arr: ElementStructure[] = [],\n): ElementStructure | ElementStructure[] {\n    if (isArray(structure)) {\n        const length = structure.length;\n\n        for (let i = 0; i < length; ++i) {\n            findStructure(selector, structure[i], multi, arr);\n        }\n    } else {\n        if (structure.selector === selector) {\n            arr.push(structure);\n        }\n        if (!multi && arr.length) {\n            return arr[0];\n        }\n        if (structure.children) {\n            findStructure(selector, structure.children, multi, arr);\n        }\n    }\n    return multi ? arr : arr[0];\n}\nexport function isScene(value: any): value is Scene {\n    return !!(value.constructor as typeof Scene).prototype.getItem;\n}\nexport function isSceneItem(value: any): value is SceneItem {\n    return !!(value.constructor as typeof SceneItem).prototype.getFrame;\n}\nexport function isFrame(value: any): value is Frame {\n    return !!(value.constructor as typeof Frame).prototype.toCSS;\n}\nexport function splitProperty(scene: Scene, property: string) {\n    const names = property.split(\"///\");\n    const length = names.length;\n    let item: Scene | SceneItem = scene;\n    let i;\n\n    for (i = 0; i < length; ++i) {\n        if (isSceneItem(item)) {\n            break;\n        }\n        item = scene.getItem(names[i]);\n    }\n    return {\n        item: item as SceneItem,\n        names: names.slice(0, i),\n        properties: names.slice(i),\n    };\n}\nexport function getSceneItem(scene: Scene, names: string[]): SceneItem {\n    return names.reduce<any>(\n        (nextScene, name) => nextScene.getItem(name),\n        scene,\n    );\n}\n\nexport function findElementIndexByPosition(elements: HTMLElement[], pos: number): number {\n    const length = elements.length;\n\n    for (let index = 0; index < length; ++index) {\n        const el = elements[index];\n        const box = el.getBoundingClientRect();\n        const top = box.top;\n        const bottom = top + box.height;\n\n        if (top <= pos && pos < bottom) {\n            return index;\n        }\n    }\n    return -1;\n}\n","import { now } from \"@daybrush/utils\";\n\nlet prevTime = 0;\nlet prevX = -1;\nlet prevY = -1;\n\nexport function dblCheck(\n    isDrag: boolean,\n    e: any,\n    clientX: number,\n    clientY: number,\n    callback: (e: any, clientX: number, clientY: number) => void,\n) {\n    const currentTime = now();\n\n    if (!isDrag) {\n        if (\n            prevX === clientX &&\n            prevY === clientY &&\n            currentTime - prevTime <= 500\n        ) {\n            callback(e, clientX, clientY);\n        }\n        prevX = clientX;\n        prevY = clientY;\n        prevTime = currentTime;\n    }\n}\n","export function getKeytimesStructure(maxTime: number) {\n    const keytimes = [];\n\n    for (let time = 0; time <= maxTime; ++time) {\n        keytimes.push({\n            key: time,\n            dataset: {\n                time,\n            },\n            selector: \".keytime\",\n            style: {\n                width: `${100 / maxTime}%`,\n            },\n            children: [\n                {\n                    selector: \"span\",\n                    html: `${time}`,\n                },\n                {selector: \".graduation.start\"},\n                {selector: \".graduation.quarter\"},\n                {selector: \".graduation.half\"},\n                {selector: \".graduation.quarter3\"},\n            ],\n        });\n    }\n    return keytimes;\n}\nexport function getLinesStructure(maxTime: number) {\n    const lines = [];\n\n    for (let time = 0; time <= maxTime; ++time) {\n        lines.push({\n            key: time,\n            selector: \".division_line\",\n            style: {\n                left: `${100 / maxTime * time}%`,\n            },\n        });\n    }\n    return lines;\n}\n","import { getKeytimesStructure } from \"./KeytimesStructure\";\nimport { Ids, ElementStructure } from \"./types\";\n\nexport function getHeaderAreaStructure(ids: Ids, zoom: number, maxDuration: number, maxTime: number): ElementStructure {\n    return {\n        selector: \".header_area\",\n        ref: e => {\n            ids.keyframesScrollAreas = [];\n            ids.keyframesAreas = [];\n            ids.propertiesAreas = [];\n        },\n        children: [\n            {\n                ref: (e: ElementStructure) => {\n                    ids.propertiesAreas[0] = e;\n                },\n                selector: \".properties_area\",\n                children: [\n                    {\n                        selector: \".property\",\n                        html: \"Name\",\n                    },\n                ],\n            },\n            {\n                selector: \".values_area\",\n                children: {\n                    selector: \".value\",\n                    children: {\n                        key: \"add\",\n                        selector: \".add\",\n                        html: \"+\",\n                        ref: (e: ElementStructure) => {\n                            ids.addItem = e;\n                        },\n                    },\n                },\n            },\n            getKeytimesAreaStructure(ids, zoom, maxDuration, maxTime),\n        ],\n    };\n}\n\nexport function getKeytimesAreaStructure(\n    ids: Ids,\n    zoom: number,\n    maxDuration: number,\n    maxTime: number,\n): ElementStructure {\n    return {\n        ref: e => {\n            ids.keyframesAreas[0] = e;\n        },\n        selector: \".keyframes_area\",\n        children: {\n            style: {\n                minWidth: `${50 * maxTime}px`,\n                width: `${Math.min(maxDuration ? maxTime / maxDuration : 1, 2) * zoom * 100}%`,\n            },\n            dataset: {\n                width: Math.min(maxDuration ? maxTime / maxDuration : 1, 2),\n            },\n            ref: (e: ElementStructure) => {\n                ids.keyframesScrollAreas[0] = e;\n            },\n            selector: \".keyframes_scroll_area\",\n            children: {\n                ref: e => {\n                    ids.cursors = [];\n                },\n                selector: \".keyframes\",\n                children: [\n                    {\n                        ref: e => {\n                            ids.keytimesContainer = e;\n                        },\n                        selector: \".keyframes_container\",\n                        children: getKeytimesStructure(maxTime),\n                    },\n                    {\n                        selector: \".keyframe_cursor\",\n                        ref: e => {\n                            ids.cursors[0] = e;\n                        },\n                    },\n                ],\n            },\n        },\n    };\n}\n","import { toValue, applyStyle, isSceneItem, isScene } from \"./utils\";\nimport { ElementStructure, Ids, TimelineInfo, PropertiesInfo } from \"./types\";\nimport { getLinesStructure } from \"./KeytimesStructure\";\nimport { isUndefined } from \"@daybrush/utils\";\n\nexport function updateKeyframesStructure(keyframes: ElementStructure[], maxTime: number) {\n    keyframes.forEach(keyframe => {\n        const { selector, dataset, style, element } = keyframe;\n        if (selector === \".keyframe\") {\n            style.left = `${dataset.time / maxTime * 100}%`;\n        } else {\n            style.left = `${dataset.from / maxTime * 100}%`,\n                style.width = `${(dataset.to - dataset.from) / maxTime * 100}%`;\n        }\n        applyStyle(element, style);\n    });\n}\n\nexport function getKeyframesAreaStructure(\n    ids: Ids,\n    keyframesList: ElementStructure[],\n    zoom: number,\n    maxDuration: number,\n    maxTime: number,\n): ElementStructure {\n    const width = Math.min(maxDuration ? maxTime / maxDuration : 1, 2);\n    return {\n        ref: e => {\n            ids.keyframesAreas[1] = e;\n        },\n        selector: \".keyframes_area\",\n        children: {\n            style: {\n                minWidth: `${50 * maxTime}px`,\n                width: `${width * zoom * 100}%`,\n            },\n            dataset: {\n                width,\n            },\n            ref: e => {\n                ids.keyframesScrollAreas[1] = e;\n            },\n            selector: \".keyframes_scroll_area\",\n            children: getKeyframesScrollAreaChildrenStructure(ids, keyframesList, maxTime),\n        },\n    };\n}\nexport function getKeyframesScrollAreaChildrenStructure(\n    ids: Ids,\n    keyframesList: ElementStructure[],\n    maxTime: number,\n): ElementStructure[] {\n    return [\n        ...keyframesList,\n        {\n            key: \"cursor\",\n            selector: \".keyframe_cursor\",\n            ref: e => {\n                ids.cursors[1] = e;\n            },\n        },\n        {\n            key: \"lineArea\",\n            ref: e => {\n                ids.lineArea = e;\n            },\n            selector: \".line_area\",\n            children: getLinesStructure(maxTime),\n        },\n    ];\n}\nexport function getKeyframesListStructure(\n    ids: Ids,\n    timelineInfo: TimelineInfo,\n    maxTime: number,\n): ElementStructure[] {\n    const keyframesList: ElementStructure[] = [];\n\n    for (const key in timelineInfo) {\n        const propertiesInfo = timelineInfo[key];\n        const keyframes = getKeyframesStructure(propertiesInfo, maxTime);\n\n        keyframesList.push({\n            ref: (e, i) => {\n                ids.keyframesList[i] = e;\n                ids.keyframesContainers[i] = e.children as ElementStructure;\n            },\n            selector: \".keyframes\",\n            key,\n            dataset: {\n                item: propertiesInfo.isItem ? \"1\" : \"0\",\n                key,\n            },\n            datas: propertiesInfo,\n            children: {\n                selector: \".keyframes_container\",\n                children: keyframes,\n            },\n        });\n    }\n    return keyframesList;\n}\nexport function getDelayFrameStructure(\n    time: number,\n    nextTime: number,\n    maxTime: number,\n): ElementStructure {\n    return {\n        selector: \".keyframe_delay\",\n        key: `delay${time},${nextTime}`,\n        datas: {\n            time: -1,\n        },\n        style: {\n            left: `${time / maxTime * 100}%`,\n            width: `${(nextTime - time) / maxTime * 100}%`,\n        },\n    };\n}\nexport function getKeyframesStructure(\n    propertiesInfo: PropertiesInfo,\n    maxTime: number,\n): ElementStructure[] {\n    const { item, frames, properties } = propertiesInfo;\n    const isItScene = isScene(item);\n    const duration = item.getDuration();\n\n    const keyframes: ElementStructure[] = [];\n    const keyframeGroups: ElementStructure[] = [];\n    const delayFrames: ElementStructure[] = [];\n    const keyframeLines: ElementStructure[] = [];\n\n    const length = frames.length;\n    const hasProperties = properties.length;\n\n    if (length >= 2) {\n        const startFrame =\n            length !== 2\n            && frames[0][0] === 0\n            && frames[0][1] === 0\n            && isUndefined(frames[0][2])\n            && !hasProperties\n            ? frames[1]\n            : frames[0];\n        const endFrame = frames[length - 1];\n        const time = startFrame[0];\n        const nextTime = endFrame[0];\n\n        keyframeGroups.push({\n            selector: \".keyframe_group\",\n            key: `group`,\n            datas: {\n                time: `${time},${nextTime}`,\n                from: time,\n                to: nextTime,\n            },\n            dataset: {\n                time,\n            },\n            style: {\n                left: `${time / maxTime * 100}%`,\n                width: `${(nextTime - time) / maxTime * 100}%`,\n            },\n        });\n    }\n    frames.forEach(([time, iterationTime, value], i): ElementStructure => {\n        const valueText = toValue(value);\n\n        if (\n            i === 0\n            && time === 0\n            && iterationTime === 0\n            && isUndefined(value)\n            && !hasProperties\n        ) {\n            return;\n        }\n        if (frames[i + 1]) {\n            const [nextTime, nextIterationTime, nextValue] = frames[i + 1];\n            const nextValueText = toValue(nextValue);\n\n            if (\n                (iterationTime === 0 && nextIterationTime === 0)\n                || (iterationTime === duration && nextIterationTime === duration)\n            ) {\n                delayFrames.push(\n                    getDelayFrameStructure(time, nextTime, maxTime),\n                );\n            }\n            if (\n                !isItScene\n                && !isUndefined(value)\n                && !isUndefined(nextValue)\n                && valueText !== nextValueText\n                && hasProperties\n            ) {\n                keyframeLines.push({\n                    selector: \".keyframe_line\",\n                    key: `line${keyframeLines.length}`,\n                    datas: {\n                        time: `${time},${nextTime}`,\n                        from: time,\n                        to: nextTime,\n                    },\n                    style: {\n                        left: `${time / maxTime * 100}%`,\n                        width: `${(nextTime - time) / maxTime * 100}%`,\n                    },\n                });\n            }\n        }\n\n        if (isItScene) {\n            return;\n        }\n\n        keyframes.push({\n            key: `keyframe${keyframes.length}`,\n            selector: \".keyframe\",\n            dataset: {\n                time,\n            },\n            datas: {\n                time,\n                iterationTime,\n                value: valueText,\n            },\n            style: {\n                left: `${time / maxTime * 100}%`,\n            },\n            html: `${time} ${valueText}`,\n        });\n    });\n\n    return [...keyframeGroups, ...keyframes, ...delayFrames, ...keyframeLines];\n}\n","import { ElementStructure, Ids, TimelineInfo } from \"./types\";\n\nexport function getPropertiesStructure(ids: Ids, timelineInfo: TimelineInfo) {\n    const properties: ElementStructure[] = [];\n\n    for (const key in timelineInfo) {\n        const propertiesInfo = timelineInfo[key];\n        const propertyNames = propertiesInfo.keys;\n        const length = propertyNames.length;\n        const id = propertyNames[length - 1];\n\n        properties.push({\n            ref: (e, i) => {\n                ids.properties[i] = e;\n            },\n            key,\n            selector: \".property\",\n            dataset: {\n                key,\n                object: propertiesInfo.isParent ? \"1\" : \"0\",\n                item: propertiesInfo.isItem ? \"1\" : \"0\",\n            },\n            datas: propertiesInfo,\n            style: {\n                paddingLeft: `${10 + (length - 1) * 20}px`,\n            },\n            children: [\n                { selector: \".arrow\" },\n                {\n                    selector: \"span\",\n                    html: id,\n                },\n                { selector: \".remove\" },\n            ],\n        });\n    }\n    return properties;\n}\n","import { isObject } from \"@daybrush/utils\";\nimport { Ids, ElementStructure, TimelineInfo } from \"./types\";\n\nexport function getValuesStructure(ids: Ids, timelineInfo: TimelineInfo): ElementStructure[] {\n    const values: ElementStructure[] = [];\n\n    for (const key in timelineInfo) {\n        const propertiesInfo = timelineInfo[key];\n        const frames = propertiesInfo.frames;\n        values.push({\n            ref: (e, i) => {\n                ids.values[i] = e;\n            },\n            key,\n            selector: \".value\",\n            dataset: {\n                key,\n                item: propertiesInfo.isItem ? \"1\" : \"0\",\n                object: propertiesInfo.isParent ? \"1\" : \"0\",\n            },\n            datas: propertiesInfo,\n            children: propertiesInfo.isParent\n            ? {\n                key: \"add\",\n                selector: \".add\",\n                html: \"+\",\n            }\n            : {\n                key: \"input\",\n                selector: \"input\",\n                attr: {\n                    value: frames[0] ? frames[0][1] : \"\",\n                },\n            },\n        });\n    }\n    return values;\n}\n","import { getKeyframesAreaStructure, getKeyframesListStructure } from \"./KeyframesStructure\";\nimport { ElementStructure, Ids, TimelineInfo } from \"./types\";\nimport { getPropertiesStructure } from \"./PropertiesStructure\";\nimport { getValuesStructure } from \"./ValuesStructure\";\n\nexport function getScrollAreaStructure(\n    ids: Ids,\n    timelineInfo: TimelineInfo,\n    zoom: number,\n    maxDuration: number,\n    maxTime: number,\n): ElementStructure {\n    const keyframesList: ElementStructure[] = getKeyframesListStructure(ids, timelineInfo, maxTime);\n\n    return {\n        ref: e => {\n            ids.scrollArea = e;\n            ids.keyframesList = [];\n            ids.keyframesContainers = [];\n        },\n        selector: \".scroll_area\",\n        children: [\n            {\n                ref: e => {\n                    ids.propertiesAreas[1] = e;\n                    ids.properties = [];\n                },\n                selector: \".properties_area\",\n                children: [\n                    {\n                        selector: \".properties_scroll_area\",\n                        children: getPropertiesStructure(ids, timelineInfo),\n                    },\n                ],\n            },\n            {\n                ref: e => {\n                    ids.valuesArea = e;\n                    ids.values = [];\n                },\n                selector: \".values_area\",\n                children: getValuesStructure(ids, timelineInfo),\n            },\n            getKeyframesAreaStructure(ids, keyframesList, zoom, maxDuration, maxTime),\n        ],\n    };\n}\n","import { Ids, ElementStructure } from \"./types\";\n\nexport function getControlAreaStructure(ids: Ids): ElementStructure {\n    return {\n        selector: \".header_area.control_area\",\n        children: [\n            {\n                selector: \".properties_area\",\n                ref: (e: ElementStructure) => {\n                    ids.unselectedArea = e;\n                },\n                children: {\n                    selector: \".property\",\n                },\n            },\n            {\n                selector: \".values_area\",\n                children: {\n                    selector: \".value\",\n                },\n            },\n            {\n                selector: \".keyframes_area\",\n                children: {\n                    selector: \".keyframes\",\n                    children: [\n                        {\n                            selector: \"input.time_area\",\n                            ref: (e: ElementStructure) => {\n                                ids.timeArea = e;\n                            },\n                            html: \"???\",\n                            // html: \"0\",\n                        },\n                        {\n                            selector: \".play_control_area\",\n                            children: [\n                                {\n                                    ref: (e: ElementStructure) => {\n                                        ids.prevBtn = e;\n                                    },\n                                    selector: \".control.prev\",\n                                },\n                                {\n                                    ref: (e: ElementStructure) => {\n                                        ids.playBtn = e;\n                                    },\n                                    selector: \".control.play\",\n                                },\n                                {\n                                    ref: (e: ElementStructure) => {\n                                        ids.nextBtn = e;\n                                    },\n                                    selector: \".control.next\",\n                                },\n                            ],\n                        },\n                    ],\n                },\n            },\n        ],\n    };\n}\n","import Scene, { AnimatorState, SceneItem } from \"scenejs\";\nimport { ITERATION_COUNT, DELAY, PLAY_SPEED, DIRECTION, REVERSE, ALTERNATE, ALTERNATE_REVERSE } from \"./consts\";\nimport { TimelineInfo } from \"./types\";\nimport { isScene } from \"./utils\";\nimport { isUndefined, isObject } from \"@daybrush/utils\";\n\nexport const MAXIMUM = 1000000;\nexport function toFixed(num: number) {\n    return Math.round(num * MAXIMUM) / MAXIMUM;\n}\nexport function addEntry(entries: number[][], time: number, keytime: number) {\n    const prevEntry = entries[entries.length - 1];\n\n    (!prevEntry || prevEntry[0] !== time || prevEntry[1] !== keytime) &&\n        entries.push([toFixed(time), toFixed(keytime)]);\n}\nexport function dotNumber(a1: number, a2: number, b1: number, b2: number) {\n    return (a1 * b2 + a2 * b1) / (b1 + b2);\n  }\nexport function getEntries(times: number[], states: AnimatorState[]) {\n    if (!times.length) {\n        return [];\n    }\n    let entries = times.map(time => ([time, time]));\n    let nextEntries = [];\n    const firstEntry = entries[0];\n    if (firstEntry[0] !== 0 && states[states.length - 1][DELAY]) {\n        entries.unshift([0, 0]);\n    }\n\n    states.forEach(state => {\n        const iterationCount = state[ITERATION_COUNT] as number;\n        const delay = state[DELAY];\n        const playSpeed = state[PLAY_SPEED];\n        const direction = state[DIRECTION];\n        const intCount = Math.ceil(iterationCount);\n        const currentDuration = entries[entries.length - 1][0];\n        const length = entries.length;\n        const lastTime = currentDuration * iterationCount;\n\n        for (let i = 0; i < intCount; ++i) {\n            const isReverse =\n                direction === REVERSE ||\n                direction === ALTERNATE && i % 2 ||\n                direction === ALTERNATE_REVERSE && !(i % 2);\n\n            for (let j = 0; j < length; ++j) {\n                const entry = entries[isReverse ? length - j - 1 : j];\n                const time = entry[1];\n                const currentTime = currentDuration * i + (isReverse ? currentDuration - entry[0] : entry[0]);\n                const prevEntry = entries[isReverse ? length - j : j - 1];\n\n                if (currentTime > lastTime) {\n                    if (j !== 0) {\n                        const prevTime = currentDuration * i +\n                            (isReverse ? currentDuration - prevEntry[0] : prevEntry[0]);\n                        const divideTime = dotNumber(prevEntry[1], time, lastTime - prevTime, currentTime - lastTime);\n\n                        addEntry(nextEntries, (delay + currentDuration * iterationCount) / playSpeed, divideTime);\n                    }\n                    break;\n                } else if (\n                    currentTime === lastTime\n                    && nextEntries.length\n                    && nextEntries[nextEntries.length - 1][0] === lastTime + delay\n                ) {\n                    break;\n                }\n                addEntry(nextEntries, (delay + currentTime) / playSpeed, time);\n            }\n        }\n        // delay time\n        delay && nextEntries.unshift([0, nextEntries[0][1]]);\n\n        entries = nextEntries;\n        nextEntries = [];\n    });\n\n    return entries;\n}\nexport function getItemInfo(\n    timelineInfo: TimelineInfo,\n    items: Array<Scene | SceneItem>,\n    names: Array<string | number>,\n    item: SceneItem) {\n    item.update();\n    const times = item.times.slice();\n\n    const originalDuration = item.getDuration();\n    (!item.getFrame(0)) && times.unshift(0);\n    (!item.getFrame(originalDuration)) && times.push(originalDuration);\n    const states = items.slice(1).map(animator => animator.state).reverse();\n    const entries = getEntries(times, states);\n    const parentItem = items[items.length - 2] as Scene;\n\n    (function getPropertyInfo(itemNames: any, ...properties: any[]) {\n        const frames = [];\n        const isParent = isObject(itemNames);\n        const isItem = properties.length === 0;\n        entries.forEach(([time, iterationTime]) => {\n            const value = item.get(iterationTime, ...properties);\n            if (isUndefined(value) && properties.length) {\n                return;\n            }\n            frames.push([time, iterationTime, value]);\n        });\n        const keys = [...names, ...properties];\n        const key = keys.join(\"///\");\n\n        if (key) {\n            timelineInfo[key] = {\n                key,\n                keys,\n                parentItem,\n                isParent,\n                isItem,\n                item,\n                names,\n                properties,\n                frames,\n            };\n        }\n        if (isParent) {\n            for (const property in itemNames) {\n                getPropertyInfo(itemNames[property], ...properties, property);\n            }\n        }\n    })(item.names);\n}\nexport function getTimelineInfo(scene: Scene | SceneItem): TimelineInfo {\n    const timelineInfo: TimelineInfo = {};\n    (function sceneForEach(...items: Array<Scene | SceneItem>) {\n        const length = items.length;\n        const lastItem = items[length - 1];\n        const names = items.slice(1).map(item => item.getId());\n        if (isScene(lastItem)) {\n            if (names.length) {\n                const key = names.join(\"///\");\n\n                const times = [0, lastItem.getDuration()];\n                const entries = getEntries(times, items.slice(1).map(animator => animator.state).reverse());\n                const frames = [];\n                entries.forEach(([time, iterationTime]) => {\n                    frames.push([time, iterationTime, iterationTime]);\n                });\n                timelineInfo[key] = {\n                    key,\n                    keys: names,\n                    isItem: true,\n                    isParent: true,\n                    parentItem: items[length - 2] as Scene,\n                    item: lastItem,\n                    names: [],\n                    properties: [],\n                    frames,\n                };\n            }\n            lastItem.forEach((item: Scene | SceneItem) => {\n                sceneForEach(...items, item);\n            });\n        } else {\n            getItemInfo(timelineInfo, items, names, lastItem);\n        }\n    })(scene);\n    return timelineInfo;\n}\n","import Scene, { SceneItem } from \"scenejs\";\nimport {\n    getTarget,\n    hasClass, removeClass, addClass,\n    flatObject, splitProperty, findElementIndexByPosition,\n    createElement, updateElement, findIndexByProperty, findStructure, numberFormat, isScene, findStructureByProperty,\n} from \"./utils\";\nimport { drag } from \"@daybrush/drag\";\nimport { CSS, SUPPORT_TOUCH, SUPPORT_POINTER_EVENTS } from \"./consts\";\nimport { IObject, addEvent, isUndefined } from \"@daybrush/utils\";\nimport Axes, { PinchInput } from \"@egjs/axes\";\nimport { ElementStructure, Ids, PropertiesInfo, TimelineInfo } from \"./types\";\nimport { dblCheck } from \"./dblcheck\";\nimport KeyController from \"keycon\";\nimport DataDOM from \"data-dom\";\nimport { getHeaderAreaStructure, getKeytimesAreaStructure } from \"./HeaderAreaStructure\";\nimport { getScrollAreaStructure } from \"./ScrollAreaStructure\";\nimport { getControlAreaStructure } from \"./ControlAreaStructure\";\nimport Component from \"@egjs/component\";\nimport { getTimelineInfo } from \"./TimelineInfo\";\nimport { Info } from \"./Info\";\n\nlet isExportCSS = false;\n\nexport default class Timeline extends Component {\n    public scene: Scene | SceneItem;\n    public options: {\n        keyboard?: boolean,\n    };\n    private maxTime: number = 0;\n    private axes: Axes;\n    private selectedProperty: string = \"\";\n    private selectedTime: number = -1;\n    private keycon: KeyController;\n    private datadom: DataDOM<ElementStructure>;\n    private structure: ElementStructure;\n    private ids: Ids = {};\n    private timelineInfo: TimelineInfo;\n    constructor(scene: Scene | SceneItem, parentEl: HTMLElement, options: {\n        keyboard?: boolean,\n    } = {}) {\n        super();\n        this.options = {\n            keyboard: true,\n            ...options,\n        };\n        scene.finish();\n        this.scene = scene;\n        this.initStructure(scene, parentEl);\n        this.initEditor();\n        this.initScroll();\n        this.initWheelZoom();\n        this.initDragKeyframes();\n        this.initClickProperty();\n        this.initController();\n        this.initDragValues();\n        this.initKeyController();\n\n        this.setTime(0);\n\n        // new Info(this, parentEl);\n    }\n    public getElement() {\n        return this.structure.element;\n    }\n    // scene control\n    public prev() {\n        this.setTime(this.scene.getTime() - 0.05);\n    }\n    public next() {\n        this.setTime(this.scene.getTime() + 0.05);\n    }\n    public finish() {\n        this.scene.finish();\n    }\n    public togglePlay() {\n        const scene = this.scene;\n        if (scene.getPlayState() === \"running\") {\n            scene.pause();\n        } else {\n            scene.play();\n        }\n    }\n    public setTime(time: number) {\n        const scene = this.scene;\n        const direction = scene.getDirection();\n\n        scene.pause();\n\n        if (direction === \"normal\" || direction === \"alternate\") {\n            scene.setTime(time);\n        } else {\n            scene.setTime(scene.getDuration() - time);\n        }\n    }\n    public update() {\n        const scene = this.scene;\n        this.timelineInfo = getTimelineInfo(scene);\n        const maxDuration = Math.ceil(scene.getDuration());\n        const maxTime = Math.max(this.maxTime, maxDuration);\n        let zoom = this.axes.get([\"zoom\"]).zoom;\n        const currentMaxTime = this.maxTime;\n        this.maxTime = maxTime;\n        const ids = this.ids;\n        const prevKeytimesArea = ids.keyframesAreas[0];\n        const nextZoom = currentMaxTime > 1 ? maxTime / currentMaxTime : 1;\n\n        zoom = Math.max(1, zoom * nextZoom);\n        this.axes.axm.set({ zoom });\n        // update keytimes\n        this.datadom.update(\n            prevKeytimesArea,\n            getKeytimesAreaStructure(ids, zoom, maxTime, maxTime),\n        );\n\n        const nextScrollAreaStructure = getScrollAreaStructure(\n            ids,\n            this.timelineInfo,\n            this.axes.get([\"zoom\"]).zoom,\n            maxTime, maxTime,\n        );\n\n        this.datadom.update(\n            ids.scrollArea,\n            nextScrollAreaStructure,\n        );\n        this.setTime(scene.getTime());\n    }\n    private newItem(scene: Scene) {\n        const name = prompt(\"Add Item\");\n\n        if (!name) {\n            return;\n        }\n        (this.scene as Scene).newItem(name);\n        this.update();\n    }\n    private newProperty(item: SceneItem, properties: string[]) {\n        const property = prompt(\"new property\");\n\n        if (!property) {\n            return;\n        }\n        item.set(item.getIterationTime(), ...properties, property, 0);\n        this.update();\n    }\n    // init\n    private initController() {\n        const ids = this.ids;\n        const playBtn = this.ids.playBtn.element;\n        const scene = this.scene;\n\n        this.ids.addItem.element.addEventListener(\"click\", e => {\n            if (isScene(this.scene)) {\n                this.newItem(this.scene);\n            } else {\n                this.newProperty(this.scene, []);\n            }\n        });\n        playBtn.addEventListener(\"click\", e => {\n            this.togglePlay();\n            e.preventDefault();\n        });\n        ids.unselectedArea.element.addEventListener(\"click\", e => {\n            this.select(\"\", -1);\n        });\n        ids.prevBtn.element.addEventListener(\"click\", e => {\n            this.prev();\n            e.preventDefault();\n        });\n        ids.nextBtn.element.addEventListener(\"click\", e => {\n            this.next();\n            e.preventDefault();\n        });\n        scene.on(\"play\", () => {\n            addClass(playBtn, \"pause\");\n            removeClass(playBtn, \"play\");\n            // playBtn.innerHTML = \"pause\";\n        });\n        scene.on(\"paused\", () => {\n            addClass(playBtn, \"play\");\n            removeClass(playBtn, \"pause\");\n            // playBtn.innerHTML = \"play\";\n        });\n        if (this.options.keyboard) {\n            new KeyController(ids.timeArea.element)\n            .keydown(e => {\n                !e.isToggle && e.inputEvent.stopPropagation();\n            })\n            .keyup(e => {\n                !e.isToggle && e.inputEvent.stopPropagation();\n            })\n            .keyup(\"enter\", e => {\n                // go to time\n                const element = ids.timeArea.element;\n                const value = (element as HTMLInputElement).value;\n                const result = /(\\d+):(\\d+):(\\d+)/g.exec(value);\n\n                if (!result) {\n                    return;\n                }\n                const minute = parseFloat(result[1]);\n                const second = parseFloat(result[2]);\n                const milisecond = parseFloat(`0.${result[3]}`);\n                const time = minute * 60 + second + milisecond;\n\n                this.setTime(time);\n            });\n        }\n    }\n    private initKeyController() {\n        const ids = this.ids;\n\n        window.addEventListener(\"blur\", () => {\n            removeClass(ids.timeline.element, \"alt\");\n        });\n\n        this.keycon = new KeyController()\n        .keydown(\"alt\", () => {\n            addClass(ids.timeline.element, \"alt\");\n        })\n        .keyup(\"alt\", () => {\n            removeClass(ids.timeline.element, \"alt\");\n        });\n\n        if (this.options.keyboard) {\n            this.keycon.keydown(\"space\", ({inputEvent}) => {\n                inputEvent.preventDefault();\n            })\n            .keydown(\"left\", e => {\n                this.prev();\n            })\n            .keydown(\"right\", e => {\n                this.next();\n            })\n            .keyup(\"backspace\", () => {\n                this.removeKeyframe(this.selectedProperty);\n            })\n            .keyup(\"esc\", () => {\n                this.finish();\n            })\n            .keyup(\"space\", () => {\n                this.togglePlay();\n            });\n        }\n    }\n    private initStructure(scene: Scene | SceneItem, parentEl: HTMLElement) {\n        this.timelineInfo = getTimelineInfo(scene);\n        const duration = Math.ceil(scene.getDuration());\n        const maxDuration = Math.ceil(duration);\n        const maxTime = maxDuration;\n        const ids = this.ids;\n        let timelineCSS: ElementStructure;\n\n        this.maxTime = maxTime;\n        if (!isExportCSS) {\n            timelineCSS = {\n                selector: \"style.style\",\n                html: CSS,\n            };\n            isExportCSS = true;\n        }\n\n        const structure: ElementStructure = {\n            selector: \".timeline\",\n            ref: e => {\n                ids.timeline = e;\n            },\n            children: [\n                timelineCSS,\n                getControlAreaStructure(ids),\n                getHeaderAreaStructure(ids, 1, maxDuration, maxTime),\n                getScrollAreaStructure(ids, this.timelineInfo, 1, maxDuration, maxTime),\n            ],\n        };\n        this.datadom = new DataDOM(\n            createElement,\n            updateElement,\n        );\n        this.structure = this.datadom.render(structure, parentEl);\n\n        // fold all\n        this.ids.properties.forEach((property, i) => {\n            const propertiesInfo = property.datas as PropertiesInfo;\n            const {keys, isParent} = propertiesInfo;\n            if (keys.length === 1 && isParent) {\n                this.fold(i);\n            }\n        });\n    }\n    private initScroll() {\n        const {\n            keyframesAreas,\n        } = this.ids;\n        let isScrollKeyframe = false;\n\n        const headerKeyframesArea = keyframesAreas[0].element;\n        const scrollKeyframesArea = keyframesAreas[1].element;\n        headerKeyframesArea.addEventListener(\"scroll\", () => {\n            if (isScrollKeyframe) {\n                isScrollKeyframe = false;\n            } else {\n                isScrollKeyframe = true;\n                scrollKeyframesArea.scrollLeft = headerKeyframesArea.scrollLeft;\n            }\n        });\n        scrollKeyframesArea.addEventListener(\"scroll\", () => {\n            if (isScrollKeyframe) {\n                isScrollKeyframe = false;\n            } else {\n                isScrollKeyframe = true;\n                headerKeyframesArea.scrollLeft = scrollKeyframesArea.scrollLeft;\n            }\n        });\n    }\n    private initWheelZoom() {\n        const ids = this.ids;\n        const keyframesScrollAreas = ids.keyframesScrollAreas;\n        const headerArea = keyframesScrollAreas[0].element;\n        const scrollArea = keyframesScrollAreas[1].element;\n\n        const axes = new Axes(\n            {\n                zoom: {\n                    range: [1, Infinity],\n                },\n            },\n            {},\n            { zoom: 1 },\n        );\n\n        if (SUPPORT_TOUCH || SUPPORT_POINTER_EVENTS) {\n            axes.connect(\"zoom\", new PinchInput(scrollArea, {\n                scale: 0.1,\n                hammerManagerOptions: {\n                    touchAction: \"auto\",\n                },\n            }));\n        }\n        axes.on(\"hold\", e => {\n            if (e.inputEvent) {\n                e.inputEvent.preventDefault();\n            }\n        });\n        axes.on(\"change\", e => {\n            const scale = ids.keyframesScrollAreas[0].dataset.width;\n            const width = e.pos.zoom * scale * 100;\n\n            ids.keyframesScrollAreas.forEach(({ element }) => {\n                element.style.width = `${width}%`;\n            });\n\n            if (e.inputEvent) {\n                e.inputEvent.preventDefault();\n            }\n        });\n\n        this.axes = axes;\n        headerArea.addEventListener(\"wheel\", e => {\n            const delta = e.deltaY;\n\n            axes.setBy({ zoom: delta / 5000 });\n            !e.deltaX && e.preventDefault();\n        });\n\n        addEvent(scrollArea, \"wheel\", e => {\n            if (!this.keycon.altKey) {\n                return;\n            }\n            e.preventDefault();\n            const delta = e.deltaY;\n\n            axes.setBy({ zoom: delta / 5000 });\n        });\n    }\n    private select(selectedProperty: string, keyframeTime?: number) {\n        const prevSelectedProperty = this.selectedProperty;\n        const prevSelectedTime = this.selectedTime;\n        const ids = this.ids;\n        const values = ids.values;\n        const properties = ids.properties;\n        const keyframesList = ids.keyframesList;\n\n        this.selectedProperty = selectedProperty;\n        this.scene.pause();\n        if (prevSelectedProperty) {\n            const prevSelectedIndex = findIndexByProperty(prevSelectedProperty, properties);\n\n            removeClass(properties[prevSelectedIndex].element, \"select\");\n            removeClass(values[prevSelectedIndex].element, \"select\");\n            removeClass(keyframesList[prevSelectedIndex].element, \"select\");\n\n            if (prevSelectedTime >= 0) {\n                const keyframes = ids.keyframesContainers[prevSelectedIndex].children as ElementStructure[];\n\n                keyframes.forEach(keyframe => {\n                    if (keyframe.datas.time === prevSelectedTime) {\n                        removeClass(keyframe.element, \"select\");\n                    }\n                });\n                this.selectedTime = -1;\n            }\n        }\n        let selectedItem: Scene | SceneItem = this.scene;\n        if (selectedProperty) {\n            if (document.activeElement) {\n                (document.activeElement as HTMLElement).blur();\n            }\n\n            const selectedIndex = findIndexByProperty(selectedProperty, properties);\n            addClass(properties[selectedIndex].element, \"select\");\n            addClass(values[selectedIndex].element, \"select\");\n            addClass(keyframesList[selectedIndex].element, \"select\");\n\n            selectedItem = (ids.keyframesList[selectedIndex].datas as PropertiesInfo).item;\n            if (keyframeTime >= 0) {\n                const selectedPropertyStructure = ids.keyframesContainers[selectedIndex];\n                const keyframes = selectedPropertyStructure.children as ElementStructure[];\n\n                keyframes.forEach(keyframe => {\n                    if (keyframe.datas.time === keyframeTime) {\n                        addClass(keyframe.element, \"select\");\n                    }\n                });\n                this.selectedTime = keyframeTime;\n            }\n        }\n        this.trigger(\"select\", {\n            selectedItem,\n            selectedProperty: this.selectedProperty,\n            selectedTime: this.selectedTime,\n            prevSelectedProperty,\n            prevSelectedTime,\n        });\n    }\n    private initClickProperty() {\n        const ids = this.ids;\n        const {\n            propertiesAreas,\n        } = ids;\n\n        propertiesAreas[1].element.addEventListener(\"click\", e => {\n            const properties = ids.properties.map(property => property.element);\n            const length = properties.length;\n            const arrow = getTarget(e.target as HTMLElement, el => hasClass(el, \"arrow\"));\n            const remove = getTarget(e.target as HTMLElement, el => hasClass(el, \"remove\"));\n            const target = getTarget(e.target as HTMLElement, el => hasClass(el, \"property\"));\n\n            if (!target) {\n                return;\n            }\n            const index = properties.indexOf(target);\n\n            if (index === -1) {\n                return;\n            }\n            const selectedProperty = ids.properties[index];\n            if (remove) {\n                this.remove(selectedProperty.datas as PropertiesInfo);\n            } else {\n                this.select(selectedProperty.dataset.key);\n\n                if (arrow) {\n                    this.fold(index);\n                }\n            }\n        });\n    }\n    private setInputs(obj: IObject<any>) {\n        const valuesArea = this.ids.valuesArea.element;\n        for (const name in obj) {\n            valuesArea.querySelector<HTMLInputElement>(`[data-key=\"${name}\"] input`).value = obj[name];\n        }\n    }\n    private moveCursor(time: number) {\n        const {cursors} = this.ids;\n        const maxTime = this.maxTime;\n        const px = 15 - 30 * time / maxTime;\n        const percent = 100 * time / maxTime;\n        const left = `calc(${percent}% + ${px}px)`;\n\n        cursors.forEach(cursor => {\n            cursor.element.style.left = left;\n        });\n    }\n    private initDragKeyframes() {\n        const ids = this.ids;\n        const {\n            scrollArea,\n            timeArea,\n            cursors,\n            keyframesAreas,\n            keyframesScrollAreas,\n        } = ids;\n        const scene = this.scene;\n\n        scene.on(\"animate\", e => {\n            const time = e.time;\n            this.moveCursor(time);\n            this.setInputs(flatObject(e.frames || e.frame.get()));\n            const minute = numberFormat(Math.floor(time / 60), 2);\n            const second = numberFormat(Math.floor(time % 60), 2);\n            const milisecond = numberFormat(Math.floor((time % 1) * 100), 3, true);\n            (timeArea.element as HTMLInputElement).value = `${minute}:${second}:${milisecond}`;\n        });\n        const getDistTime = (\n            distX: number,\n            rect: ClientRect = keyframesScrollAreas[1].element.getBoundingClientRect(),\n        ) => {\n            const scrollAreaWidth = rect.width - 30;\n            const percentage = Math.min(scrollAreaWidth, distX) / scrollAreaWidth;\n            const time = this.maxTime * percentage;\n\n            return Math.round(time * 20) / 20;\n        };\n        const getTime = (clientX: number) => {\n            const rect = keyframesScrollAreas[1].element.getBoundingClientRect();\n            const scrollAreaX = rect.left + 15;\n            const x = Math.max(clientX - scrollAreaX, 0);\n\n            return getDistTime(x, rect);\n        };\n        const move = (clientX: number) => {\n            this.setTime(getTime(clientX));\n        };\n        const click = (e, clientX, clientY) => {\n            const target = getTarget(e.target as HTMLElement, el => hasClass(el, \"keyframe\"));\n            const time = target ? parseFloat(target.getAttribute(\"data-time\")) : getTime(clientX);\n\n            this.setTime(time);\n            const list = ids.keyframesList;\n            const index = findElementIndexByPosition(\n                list.map(({element}) => element),\n                clientY,\n            );\n\n            if (index > -1) {\n                this.select(list[index].dataset.key, time);\n            }\n            e.preventDefault();\n        };\n        const dblclick = (e, clientX, clientY) => {\n            const list = ids.keyframesList;\n            const index = findElementIndexByPosition(\n                list.map(({element}) => element),\n                clientY,\n            );\n\n            if (index === -1) {\n                return;\n            }\n            this.addKeyframe(index, getTime(clientX));\n        };\n        drag(cursors[0].element, {\n            dragstart: ({inputEvent}) => {\n                inputEvent.stopPropagation();\n            },\n            drag: ({ clientX }) => {\n                move(clientX);\n            },\n            container: window,\n        });\n\n        let dragItem: Scene | SceneItem = null;\n        let dragDelay: number = 0;\n        let dragTarget: HTMLElement = null;\n\n        keyframesScrollAreas.forEach(({ element }) => {\n            drag(element, {\n                container: window,\n                dragstart: ({ inputEvent }) => {\n                    dragTarget = getTarget(inputEvent.target, el => hasClass(el, \"keyframe_group\"));\n                    if (dragTarget) {\n                        const properties = this.ids.properties;\n                        const keyframesTarget = getTarget(dragTarget, el => hasClass(el, \"keyframes\"));\n                        const key = keyframesTarget.getAttribute(\"data-key\");\n                        const property = findStructureByProperty(key, properties);\n                        const propertiesInfo = property.datas as PropertiesInfo;\n\n                        dragItem = propertiesInfo.item;\n                        dragDelay = dragItem.getDelay();\n                    }\n                },\n                drag: ({ distX, deltaX, deltaY, inputEvent }) => {\n                    if (dragTarget) {\n                        dragItem.setDelay(Math.max(dragDelay + getDistTime(distX), 0));\n                        this.update();\n                    } else {\n                        keyframesAreas[1].element.scrollLeft -= deltaX;\n                        scrollArea.element.scrollTop -= deltaY;\n                        inputEvent.preventDefault();\n                    }\n                },\n                dragend: ({ isDrag, clientX, clientY, inputEvent }) => {\n                    dragTarget = null;\n                    dragItem = null;\n                    dragDelay = null;\n                    !isDrag && click(inputEvent, clientX, clientY);\n                    dblCheck(isDrag, inputEvent, clientX, clientY, dblclick);\n                },\n            });\n        });\n    }\n    private initDragValues() {\n        const ids = this.ids;\n        const element = ids.valuesArea.element;\n        let dragTarget: HTMLInputElement = null;\n        let dragTargetValue: any;\n\n        addEvent(element, \"click\", e => {\n            const addedElement = getTarget(dragTarget, el => hasClass(el, \"add\"));\n            if (!addedElement) {\n                return;\n            }\n            const valueElement = addedElement.parentElement as HTMLElement;\n            const index = findIndexByProperty(valueElement.getAttribute(\"data-key\"), ids.values);\n\n            if (index < 0) {\n                return;\n            }\n\n            const propertiesInfo = ids.properties[index].datas as PropertiesInfo;\n            const properties = propertiesInfo.properties.slice();\n            const item = propertiesInfo.item;\n\n            if (isScene(item)) {\n                this.newItem(item);\n            } else {\n                this.newProperty(item, properties);\n            }\n\n        });\n        drag(element, {\n            container: window,\n            dragstart: e => {\n                dragTarget = e.inputEvent.target;\n                dragTargetValue = dragTarget.value;\n\n                if (!this.keycon.altKey || !getTarget(dragTarget, el => el.nodeName === \"INPUT\")) {\n                    return false;\n                }\n            },\n            drag: e => {\n                const nextValue = dragTargetValue.replace(/-?\\d+/g, num => {\n                    return `${parseFloat(num) + Math.round(e.distX / 2)}`;\n                });\n\n                dragTarget.value = nextValue;\n            },\n            dragend: e => {\n                this.edit(dragTarget, dragTarget.value);\n            },\n        });\n    }\n    private addKeyframe(index: number, time: number) {\n        const list = this.ids.keyframesList;\n        const property = list[index].dataset.key;\n        const {item, properties} = list[index].datas as PropertiesInfo;\n\n        this.select(property, time);\n\n        const value = ((this.ids.values[index].children as ElementStructure).element as HTMLInputElement).value;\n\n        this.editKeyframe(index, value);\n    }\n    private fold(index: number, forceFold?: boolean) {\n        const ids = this.ids;\n        const {properties, values, keyframesList} = ids;\n        const selectedProperty = properties[index];\n        const length = properties.length;\n        let max;\n        for (max = index + 1; max < length; ++max) {\n            if (properties[max].datas.key.indexOf(selectedProperty.datas.key + \"///\") !== 0) {\n                break;\n            }\n        }\n        const foldProperties = properties.slice(index + 1, max);\n        const foldValues = values.slice(index + 1, max);\n        const foldKeyframesList = keyframesList.slice(index + 1, max);\n        const selectedElement = selectedProperty.element;\n        // true : unfold, false: fold\n        const isFold = isUndefined(forceFold) ? selectedElement.getAttribute(\"data-fold\") === \"1\" : forceFold;\n\n        selectedElement.setAttribute(\"data-fold\", isFold ? \"0\" : \"1\");\n        const foldFunction = (isFold ? removeClass : addClass);\n        const depth = selectedProperty.datas.keys.length;\n\n        foldProperties.forEach((property, i) => {\n            const datas = property.datas as PropertiesInfo;\n            if (depth + 1 < datas.keys.length) {\n                return;\n            }\n            foldFunction(property.element, \"fold\");\n            foldFunction(foldValues[i].element, \"fold\");\n            foldFunction(foldKeyframesList[i].element, \"fold\");\n            if (datas.isParent) {\n                if (!isFold) {\n                    this.fold(index + 1 + i, false);\n                } else {\n                    // always fold\n                    property.element.setAttribute(\"data-fold\", \"1\");\n                }\n            } else {\n                property.element.setAttribute(\"data-fold\", isFold ? \"0\" : \"1\");\n            }\n        });\n    }\n    private remove(propertiesInfo: PropertiesInfo) {\n        const {key, isItem, parentItem, item: targetItem, properties} = propertiesInfo;\n        if (isItem) {\n            let targetName: string = null;\n            parentItem.forEach((item, name) => {\n                if (item === targetItem) {\n                    targetName = name;\n                    return;\n                }\n            });\n            if (targetName != null) {\n                parentItem.removeItem(targetName);\n            }\n        } else {\n            const times = (targetItem as SceneItem).times;\n\n            times.forEach(time => {\n                (targetItem as SceneItem).remove(time, ...properties);\n            });\n        }\n        if (this.selectedProperty === key) {\n            this.selectedProperty = \"\";\n            this.selectedTime = -1;\n        }\n        this.update();\n    }\n    private removeKeyframe(property: string) {\n        const propertiesInfo = this.timelineInfo[property];\n        if (!property || !propertiesInfo || isScene(propertiesInfo.item)) {\n            return;\n        }\n\n        const properties = propertiesInfo.properties;\n        const item = propertiesInfo.item;\n\n        item.remove(item.getIterationTime(), ...properties);\n        this.update();\n    }\n    private editKeyframe(index: number, value: any) {\n        const ids = this.ids;\n        const isObjectData = ids.properties[index].dataset.object === \"1\";\n\n        if (isObjectData) {\n            return;\n        }\n        const propertiesInfo = ids.keyframesList[index].datas as PropertiesInfo;\n        const item = propertiesInfo.item;\n        const properties = propertiesInfo.properties;\n\n        item.set(item.getIterationTime(), ...properties, value);\n        this.update();\n    }\n    private restoreKeyframes() {\n        this.setTime(this.scene.getTime());\n    }\n    private edit(target: HTMLInputElement, value: any) {\n        const parentEl = getTarget(target, el => hasClass(el, \"value\"));\n\n        if (!parentEl) {\n            return;\n        }\n        const values = this.ids.values.map(({element}) => element);\n        const index = values.indexOf(parentEl);\n\n        if (index === -1) {\n            return;\n        }\n        this.editKeyframe(index, value);\n    }\n    private initEditor() {\n        const valuesArea = this.ids.valuesArea.element;\n\n        new KeyController(valuesArea)\n        .keydown(e => {\n            !e.isToggle && e.inputEvent.stopPropagation();\n        })\n        .keyup(e => {\n            !e.isToggle && e.inputEvent.stopPropagation();\n        })\n        .keyup(\"enter\", e => {\n            const target = e.inputEvent.target as HTMLInputElement;\n\n            this.edit(target, target.value);\n        })\n        .keyup(\"esc\", e => {\n            const target = e.inputEvent.target as HTMLInputElement;\n\n            target.blur();\n        });\n        valuesArea.addEventListener(\"focusout\", e => {\n            this.restoreKeyframes();\n        });\n    }\n}\n"],"names":["PREFIX","SUPPORT_POINTER_EVENTS","window","SUPPORT_TOUCH","CSS2","replace","CSS","DIRECTION","ITERATION_COUNT","DELAY","PLAY_SPEED","ALTERNATE","REVERSE","ALTERNATE_REVERSE","numberFormat","num","count","isRight","length","arr","push","i","join","applyStyle","el","style","name","findIndexByProperty","selectedProperty","structures","findIndex","_a","key","findStructureByProperty","find","createElement","structure","selector","dataset","attr","html","classNames","match","tag","id","document","className","map","setAttribute","innerHTML","updateElement","prevStructure","nextStructure","element","keys","value","toValue","type","Array","isArray","k","flatObject","obj","newObj","isObject","nextObj","isFrame","get","nextName","getTarget","target","conditionCallback","parentTarget","body","parentNode","hasClass","hasClass2","addClass","addClass2","removeClass","removeClass2","isScene","constructor","prototype","getItem","toCSS","findElementIndexByPosition","elements","pos","index","box","getBoundingClientRect","top","bottom","height","prevTime","prevX","prevY","dblCheck","isDrag","e","clientX","clientY","callback","currentTime","now","getKeytimesStructure","maxTime","keytimes","time","width","children","getLinesStructure","lines","left","getHeaderAreaStructure","ids","zoom","maxDuration","ref","keyframesScrollAreas","keyframesAreas","propertiesAreas","addItem","getKeytimesAreaStructure","minWidth","Math","min","cursors","keytimesContainer","getKeyframesAreaStructure","keyframesList","getKeyframesScrollAreaChildrenStructure","lineArea","getKeyframesListStructure","timelineInfo","propertiesInfo","keyframes","getKeyframesStructure","keyframesContainers","item","isItem","datas","getDelayFrameStructure","nextTime","frames","properties","isItScene","duration","getDuration","keyframeGroups","delayFrames","keyframeLines","hasProperties","startFrame","isUndefined","endFrame","from","to","forEach","iterationTime","valueText","_b","nextIterationTime","nextValue","nextValueText","getPropertiesStructure","propertyNames","object","isParent","paddingLeft","getValuesStructure","values","getScrollAreaStructure","scrollArea","valuesArea","getControlAreaStructure","unselectedArea","timeArea","prevBtn","playBtn","nextBtn","MAXIMUM","toFixed","round","addEntry","entries","keytime","prevEntry","dotNumber","a1","a2","b1","b2","getEntries","times","states","nextEntries","firstEntry","unshift","state","iterationCount","delay","playSpeed","direction","intCount","ceil","currentDuration","lastTime","isReverse","j","entry","divideTime","getItemInfo","items","names","update","slice","originalDuration","getFrame","animator","reverse","parentItem","getPropertyInfo","itemNames","_i","property","getTimelineInfo","scene","sceneForEach","lastItem","getId","frames_1","isExportCSS","tslib_1","parentEl","options","_super","_this","keyboard","finish","initStructure","initEditor","initScroll","initWheelZoom","initDragKeyframes","initClickProperty","initController","initDragValues","initKeyController","setTime","getTime","getPlayState","pause","play","getDirection","max","axes","currentMaxTime","prevKeytimesArea","nextZoom","axm","set","datadom","nextScrollAreaStructure","prompt","newItem","getIterationTime","addEventListener","newProperty","togglePlay","preventDefault","select","prev","next","on","KeyController","keydown","isToggle","inputEvent","stopPropagation","keyup","result","exec","minute","parseFloat","second","milisecond","timeline","keycon","removeKeyframe","timelineCSS","DataDOM","render","fold","isScrollKeyframe","headerKeyframesArea","scrollKeyframesArea","scrollLeft","headerArea","Axes","range","Infinity","connect","PinchInput","scale","hammerManagerOptions","touchAction","delta","deltaY","setBy","deltaX","addEvent","altKey","keyframeTime","prevSelectedProperty","prevSelectedTime","selectedTime","prevSelectedIndex","keyframe","selectedItem","activeElement","blur","selectedIndex","selectedPropertyStructure","trigger","arrow","remove","indexOf","querySelector","px","percent","cursor","moveCursor","setInputs","frame","floor","getDistTime","distX","rect","scrollAreaWidth","percentage","scrollAreaX","x","move","click","getAttribute","list","dblclick","addKeyframe","drag","dragstart","container","dragItem","dragDelay","dragTarget","keyframesTarget","getDelay","setDelay","scrollTop","dragend","dragTargetValue","addedElement","valueElement","parentElement","nodeName","edit","editKeyframe","forceFold","foldProperties","foldValues","foldKeyframesList","selectedElement","isFold","foldFunction","depth","targetItem","targetName_1","removeItem","isObjectData","restoreKeyframes","Component"],"mappings":"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"}