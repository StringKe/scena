{"version":3,"file":"timeline.esm.js","sources":["../src/consts.ts","../src/utils.ts","../src/dblcheck.ts","../src/KeytimesStructure.ts","../src/HeaderAreaStructure.ts","../src/KeyframesStructure.ts","../src/PropertiesStructure.ts","../src/ValuesStructure.ts","../src/ScrollAreaStructure.ts","../src/ControlAreaStructure.ts","../src/TimelineInfo.ts","../src/Timeline.ts"],"sourcesContent":["export const PREFIX = `scenejs_editor_`;\nexport const SUPPORT_POINTER_EVENTS = \"PointerEvent\" in window || \"MSPointerEvent\" in window;\nexport const SUPPORT_TOUCH = \"ontouchstart\" in window;\n\nexport const CSS2 = `\n.item_info {\n    position: fixed;\n    right: 0;\n    top: 0;\n    width: 200px;\n    background: #000;\n}\n.options_area {\n\n}\n.option_area {\n    position: relative;\n    border-bottom: 1px solid #777;\n    box-sizing: border-box;\n    white-space: nowrap;\n    background: rgba(90, 90, 90, 0.7);\n    font-size: 13px;\n    font-weight: bold;\n    color: #eee;\n    display: flex;\n}\n.option_name, .option_value {\n    width: 50%;\n    height: 30px;\n    line-height: 20px;\n    box-sizing: border-box;\n    padding: 5px;\n}\n.option_name {\n    border-right: 1px solid #999;\n}\n.option_value input {\n    appearance: none;\n    -webkit-appearance: none;\n    outline: none;\n    position: relative;\n    display: block;\n    width: 100%;\n    height: 100%;\n    background: transparent;\n    color: #4af;\n    font-weight: bold;\n    background: none;\n    border: 0;\n    box-sizing: border-box;\n}\n`.replace(/\\.([^{,\\s\\d.]+)/g, `.${PREFIX}$1`);\n\nexport const CSS = `\n.timeline * {\n    box-sizing: border-box;\n}\n.timeline {\n  position: fixed;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  width: 100%;\n  font-size: 0;\n  background: #000;\n  display: flex;\n  flex-direction: column;\n}\n.header_area, .scroll_area {\n   width: 100%;\n   position: relative;\n  display: flex;\n  -webkit-align-items: flex-start;\n  align-items: flex-start;\n}\n.header_area {\n  position: relative;\n  z-index: 10;\n  top: 0;\n  height: 30px;\n  min-height: 30px;\n}\n.header_area .keyframes {\n  padding: 0px;\n}\n.header_area .properties_area,\n.header_area .keyframes_area,\n.header_area .values_area,\n.header_area .keyframes_scroll_area {\n    height: 100%;\n}\n.header_area .property, .header_area .value, .header_area .keyframes {\n  height: 100%;\n}\n.header_area .property {\n    line-height: 30px;\n}\n.value .add {\n    text-align: center;\n    color: #fff;\n    line-height: 30px;\n    font-weight: bold;\n    font-size: 20px;\n    cursor: pointer;\n}\n.header_area .keyframes_area::-webkit-scrollbar {\n    display: none; // Safari and Chrome\n}\n.header_area .keyframe_cursor {\n    position: absolute;\n    border-top: 10px solid #4af;\n    border-left: 6px solid transparent;\n    border-right: 6px solid transparent;\n    width: 0;\n    height: 0;\n    bottom: 0;\n    top: auto;\n    background: none;\n    cursor: pointer;\n}\n.control_area .keyframes {\n    padding-left: 10px;\n}\n.play_control_area {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n}\n.play_control_area .control {\n    position: relative;\n    display: inline-block;\n    vertical-align: middle;\n    color: white;\n    margin: 0px 15px;\n}\n.play {\n    border-left: 14px solid white;\n    border-top: 8px solid transparent;\n    border-bottom: 8px solid transparent;\n}\n.pause {\n    border-left: 4px solid #fff;\n    border-right: 4px solid #fff;\n    width: 14px;\n    height: 16px;\n}\n.prev {\n    border-right: 10px solid white;\n    border-top: 6px solid transparent;\n    border-bottom: 6px solid transparent;\n}\n.prev:before {\n    position: absolute;\n    content: \"\";\n    width: 3px;\n    height: 10px;\n    top: 0;\n    right: 100%;\n    transform: translate(0, -50%);\n    background: white;\n}\n.next {\n    border-left: 10px solid white;\n    border-top: 6px solid transparent;\n    border-bottom: 6px solid transparent;\n}\n.next:before {\n    position: absolute;\n    content: \"\";\n    width: 3px;\n    height: 10px;\n    top: 0;\n    transform: translate(0, -50%);\n    background: white;\n}\n.keytime {\n  position: relative;\n  display: inline-block;\n  height: 100%;\n  font-size: 13px;\n  font-weight: bold;\n  color: #777;\n}\n.keytime:last-child {\n  max-width: 0px;\n}\n.keytime span {\n  position: absolute;\n  line-height: 1;\n  bottom: 12px;\n  display: inline-block;\n  transform: translate(-50%);\n  color: #eee;\n}\n.keytime .graduation {\n  position: absolute;\n  bottom: 0;\n  width: 1px;\n  height: 10px;\n  background: #777;\n  transform: translate(-50%);\n}\n.keytime .graduation.half {\n  left: 50%;\n  height: 7px;\n}\n.keytime .graduation.quarter {\n  left: 25%;\n  height: 5px;\n}\n.keytime .graduation.quarter3 {\n  left: 75%;\n  height: 5px;\n}\n.scroll_area {\n  position: relative;\n  width: 100%;\n  height: calc(100% - 60px);\n  overflow: auto;\n}\n.properties_area, .keyframes_area, .values_area {\n  display: inline-block;\n  position: relative;\n  font-size: 16px;\n  overflow: auto;\n}\n\n.properties_area::-webkit-scrollbar, .keyframes_area::-webkit-scrollbar {\n    display: none; // Safari and Chrome\n}\n.properties_area {\n  width: 30%;\n  max-width: 200px;\n  box-sizing: border-box;\n}\n.values_area {\n    width: 50px;\n    min-width: 50px;\n    display: inline-block;\n    border-right: 1px solid #999;\n    box-sizing: border-box;\n}\n.value input {\n    appearance: none;\n    -webkit-appearance: none;\n    outline: none;\n    position: relative;\n    display: block;\n    width: 100%;\n    height: 100%;\n    background: transparent;\n    color: #4af;\n    font-weight: bold;\n    background: none;\n    border: 0;\n    box-sizing: border-box;\n    text-align: center;\n}\n.value {\n\n}\n.alt .value input {\n    cursor: ew-resize;\n}\n.value[data-object=\"1\"] input {\n    display: none;\n}\n.properties_scroll_area {\n  display: inline-block;\n  min-width: 100%;\n}\n.keyframes_area {\n  flex: 1;\n}\n.keyframes_scroll_area {\n  position: relative;\n  min-width: 300px;\n}\n.keyframes, .property, .value {\n  position: relative;\n  height: 30px;\n  line-height: 30px;\n  border-bottom: 1px solid #777;\n  box-sizing: border-box;\n  white-space: nowrap;\n  background: rgba(90, 90, 90, 0.7);\n  z-index: 1;\n}\n\n.property {\n  padding-left: 10px;\n  box-sizing: border-box;\n  font-size: 13px;\n  font-weight: bold;\n  color: #eee;\n}\n.property .remove {\n    position: absolute;\n    display: inline-block;\n    cursor: pointer;\n    width: 18px;\n    height: 18px;\n    top: 0;\n    bottom: 0;\n    right: 10px;\n    margin: auto;\n    border-radius: 50%;\n    border: 2px solid #fff;\n    vertical-align: middle;\n    display: none;\n    margin-left: 10px;\n    box-sizing: border-box;\n}\n.property .remove:before, .property .remove:after {\n    position: absolute;\n    content: \"\";\n    width: 8px;\n    height: 2px;\n    border-radius: 1px;\n    background: #fff;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    margin: auto;\n}\n.property .remove:before {\n    transform: rotate(45deg);\n}\n.property .remove:after {\n    transform: rotate(-45deg);\n}\n.property:hover .remove {\n    display: inline-block;\n}\n\n[data-item=\"1\"], [data-item=\"1\"] .add {\n    height: 30px;\n    line-height: 30px;\n}\n.time_area {\n    position: absolute;\n    top: 0;\n    left: 10px;\n    font-size: 13px;\n    color: #4af;\n    line-height: 30px;\n    font-weight: bold;\n    height: 100%;\n    line-height: 30px;\n    border: 0;\n    background: transparent;\n    outline: 0;\n}\n.time_area:after {\n    content: \"s\";\n}\n.property .arrow {\n    position: relative;\n    display: inline-block;\n    width: 20px;\n    height: 25px;\n    cursor: pointer;\n    vertical-align: middle;\n}\n.property .arrow:after {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    right: 0;\n    left: 0;\n    bottom: 0;\n    margin: auto;\n    width: 0;\n    height: 0;\n    border-top: 6px solid #eee;\n    border-left: 4px solid transparent;\n    border-right: 4px solid transparent;\n}\n.property[data-fold=\"1\"] .arrow:after {\n    border-top: 4px solid transparent;\n    border-bottom: 4px solid transparent;\n    border-right: 0;\n    border-left: 6px solid #eee;\n}\n.property[data-object=\"0\"] .arrow {\n    display: none;\n}\n.property.fold, .keyframes.fold, .value.fold {\n    display: none;\n}\n.property.select, .value.select, .keyframes.select {\n    background: rgba(120, 120, 120, 0.7);\n}\n.keyframes {\n\n}\n.keyframe_delay {\n  position: absolute;\n  top: 3px;\n  bottom: 3px;\n  left: 0;\n  background: #4af;\n  opacity: 0.2;\n  z-index: 0;\n}\n.keyframe_group {\n    position: absolute;\n    top: 3px;\n    bottom: 3px;\n    left: 0;\n    background: #4af;\n    opacity: 0.6;\n    border: 1px solid rgba(0, 0, 0, 0.2);\n    border-left-color: rgba(255, 255, 255, 0.2);\n    border-top-color: rgba(255, 255, 255, 0.2);\n    z-index: 0;\n}\n.keyframe_line {\n  position: absolute;\n  height: 8px;\n  top: 0;\n  bottom: 0;\n  margin: auto;\n  background: #666;\n  z-index: 0;\n}\n.keyframe {\n  position: absolute;\n  font-size: 0px;\n  width: 12px;\n  height: 12px;\n  top: 0px;\n  bottom: 0px;\n  margin: auto;\n  background: #fff;\n  border: 2px solid #383838;\n  border-radius: 2px;\n  box-sizing: border-box;\n  transform: translate(-50%) rotate(45deg);\n  z-index: 1;\n  cursor: pointer;\n}\n.keyframe[data-no=\"1\"] {\n    opacity: 0.2;\n}\n.select .keyframe {\n    border-color: #555;\n}\n.keyframe.select {\n    background: #4af;\n}\n.keyframes_container, .line_area {\n  position: relative;\n  width: calc(100% - 30px);\n  left: 15px;\n  height: 100%;\n}\n.line_area {\n  position: absolute;\n  top: 0;\n  z-index: 0;\n}\n.keyframe_cursor {\n  position: absolute;\n  top: 0;\n  z-index: 1;\n  background: #4af;\n  width: 1px;\n  height: 100%;\n  left: 15px;\n  transform: translate(-50%);\n}\n.scroll_aare .keyframe_cursor {\n  pointer-events: none;\n}\n.division_line {\n  position: absolute;\n  background: #333;\n  width: 1px;\n  height: 100%;\n  transform: translate(-50%);\n}\n`.replace(/\\.([^{,\\s\\d.]+)/g, `.${PREFIX}$1`);\n\nexport const DURATION = \"duration\";\nexport const FILL_MODE = \"fillMode\";\nexport const DIRECTION = \"direction\";\nexport const ITERATION_COUNT = \"iterationCount\";\nexport const DELAY = \"delay\";\nexport const EASING = \"easing\";\nexport const PLAY_SPEED = \"playSpeed\";\nexport const EASING_NAME = \"easingName\";\nexport const ITERATION_TIME = \"iterationTime\";\nexport const PAUSED = \"paused\";\nexport const ENDED = \"ended\";\nexport const TIMEUPDATE = \"timeupdate\";\nexport const ANIMATE = \"animate\";\nexport const PLAY = \"play\";\nexport const RUNNING = \"running\";\nexport const ITERATION = \"iteration\";\nexport const START_ANIMATION = \"startAnimation\";\nexport const PAUSE_ANIMATION = \"pauseAnimation\";\nexport const ALTERNATE = \"alternate\";\nexport const REVERSE = \"reverse\";\nexport const ALTERNATE_REVERSE = \"alternate-reverse\";\nexport const NORMAL = \"normal\";\nexport const INFINITE = \"infinite\";\nexport const PLAY_STATE = \"playState\";\nexport const PLAY_CSS = \"playCSS\";\nexport const PREV_TIME = \"prevTime\";\nexport const TICK_TIME = \"tickTime\";\nexport const CURRENT_TIME = \"currentTime\";\nexport const SELECTOR = \"selector\";\nexport const TRANSFORM_NAME = \"transform\";\n","import { PREFIX } from \"./consts\";\nimport Scene, { SceneItem, Frame } from \"scenejs\";\nimport {\n    hasClass as hasClass2,\n    addClass as addClass2,\n    removeClass as removeClass2,\n    IObject,\n    isObject,\n    isArray,\n    isUndefined,\n} from \"@daybrush/utils\";\nimport { ElementStructure, TimelineInfo } from \"./types\";\n\nexport function numberFormat(num: number, count: number, isRight?: boolean) {\n    const length = `${num}`.length;\n    const arr = [];\n\n    if (isRight) {\n        arr.push(num);\n    }\n    for (let i = length; i < count; ++i) {\n        arr.push(0);\n    }\n    if (!isRight) {\n        arr.push(num);\n    }\n    return arr.join(\"\");\n}\nexport function applyStyle(el: HTMLElement, style: IObject<any>) {\n    for (const name in style) {\n        el.style[name] = style[name];\n    }\n}\nexport function findIndex<T>(arr: T[], callback: (value: T, index: number, arr: T[]) => boolean) {\n    const length = arr.length;\n\n    for (let i = 0; i < length; ++i) {\n        if (callback(arr[i], i, arr)) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function find<T>(arr: T[], callback: (value: T, index: number, arr: T[]) => boolean): T | undefined {\n    return arr[findIndex(arr, callback)];\n}\nexport function findIndexByProperty(selectedProperty: string, structures: ElementStructure[]) {\n    return findIndex(\n        structures,\n        ({ dataset: { key } }) => key === selectedProperty,\n    );\n}\nexport function findStructureByProperty(selectedProperty: string, structures: ElementStructure[]) {\n    return find(\n        structures,\n        ({ dataset: { key } }) => key === selectedProperty,\n    );\n}\n\nexport function createElement(structure: ElementStructure) {\n    const { selector, dataset, attr, style, html } = structure;\n\n    const classNames = selector.match(/\\.([^.#\\s])+/g) || [];\n    const tag = (selector.match(/^[^.#\\s]+/g) || [])[0] || \"div\";\n    const id = (selector.match(/#[^.#\\s]+/g) || [])[0] || \"\";\n    const el = document.createElement(tag);\n\n    id && (el.id = id.replace(/^#/g, \"\"));\n    el.className = classNames.map(name => `${PREFIX}${name.replace(/^\\./g, \"\")}`).join(\" \");\n\n    if (dataset) {\n        for (const name in dataset) {\n            el.setAttribute(`data-${name}`, dataset[name]);\n        }\n    }\n    if (attr) {\n        for (const name in attr) {\n            el.setAttribute(name, attr[name]);\n        }\n    }\n    if (style) {\n        applyStyle(el, style);\n    }\n    if (html) {\n        el.innerHTML = html;\n    }\n    return el;\n}\nexport function updateElement(prevStructure: ElementStructure, nextStructure: ElementStructure) {\n    const { dataset, attr, style, html, element } = nextStructure;\n    if (dataset) {\n        for (const name in dataset) {\n            element.setAttribute(`data-${name}`, dataset[name]);\n        }\n    }\n    if (attr) {\n        for (const name in attr) {\n            element.setAttribute(name, attr[name]);\n        }\n    }\n    style && applyStyle(element, style);\n    if (prevStructure.html !== nextStructure.html) {\n        element.innerHTML = html;\n    }\n}\nexport function keys(value: object) {\n    const arr = [];\n    for (const name in value) {\n        arr.push(name);\n    }\n    return arr;\n}\nexport function toValue(value: any) {\n    const type = typeof value;\n    if (type === \"object\") {\n        if (Array.isArray(value)) {\n            return `[${value.join(\", \")}]`;\n        }\n        return `{${keys(value).map(k => `${k}: ${toValue(value[k])}`).join(\", \")}}`;\n    }\n    return value;\n}\nexport function flatObject(obj: IObject<any>, newObj: IObject<any> = {}) {\n\n    for (const name in obj) {\n        const value = obj[name];\n\n        if (isObject(value)) {\n            const nextObj = flatObject(isFrame(value) ? value.get() : value);\n\n            for (const nextName in nextObj) {\n                newObj[`${name}///${nextName}`] = nextObj[nextName];\n            }\n        } else {\n            newObj[name] = value;\n        }\n    }\n    return newObj;\n}\n\nexport function getTarget<T extends HTMLElement>(target: T, conditionCallback: (el: Element) => boolean): T {\n    let parentTarget = target;\n\n    while (parentTarget && parentTarget !== document.body) {\n        if (conditionCallback(parentTarget)) {\n            return parentTarget;\n        }\n        parentTarget = parentTarget.parentNode as T;\n    }\n    return null;\n}\n\nexport function hasClass(target: Element, className: string) {\n    return hasClass2(target, `${PREFIX}${className}`);\n}\nexport function addClass(target: Element, className: string) {\n    return addClass2(target, `${PREFIX}${className}`);\n}\nexport function removeClass(target: Element, className: string) {\n    return removeClass2(target, `${PREFIX}${className}`);\n}\nexport function findStructure(\n    selector: string,\n    structure: ElementStructure | ElementStructure[],\n    multi: true,\n    arr?: ElementStructure[],\n): ElementStructure[];\nexport function findStructure(\n    selector: string,\n    structure: ElementStructure | ElementStructure[],\n    multi?: false,\n    arr?: ElementStructure[],\n): ElementStructure;\nexport function findStructure(\n    selector: string,\n    structure: ElementStructure | ElementStructure[],\n    multi: true | false,\n    arr?: ElementStructure[],\n): ElementStructure | ElementStructure[];\nexport function findStructure(\n    selector: string,\n    structure: ElementStructure | ElementStructure[],\n    multi: boolean = false,\n    arr: ElementStructure[] = [],\n): ElementStructure | ElementStructure[] {\n    if (isArray(structure)) {\n        const length = structure.length;\n\n        for (let i = 0; i < length; ++i) {\n            findStructure(selector, structure[i], multi, arr);\n        }\n    } else {\n        if (structure.selector === selector) {\n            arr.push(structure);\n        }\n        if (!multi && arr.length) {\n            return arr[0];\n        }\n        if (structure.children) {\n            findStructure(selector, structure.children, multi, arr);\n        }\n    }\n    return multi ? arr : arr[0];\n}\nexport function isScene(value: any): value is Scene {\n    return !!(value.constructor as typeof Scene).prototype.getItem;\n}\nexport function isSceneItem(value: any): value is SceneItem {\n    return !!(value.constructor as typeof SceneItem).prototype.getFrame;\n}\nexport function isFrame(value: any): value is Frame {\n    return !!(value.constructor as typeof Frame).prototype.toCSS;\n}\nexport function splitProperty(scene: Scene, property: string) {\n    const names = property.split(\"///\");\n    const length = names.length;\n    let item: Scene | SceneItem = scene;\n    let i;\n\n    for (i = 0; i < length; ++i) {\n        if (isSceneItem(item)) {\n            break;\n        }\n        item = scene.getItem(names[i]);\n    }\n    return {\n        item: item as SceneItem,\n        names: names.slice(0, i),\n        properties: names.slice(i),\n    };\n}\nexport function getSceneItem(scene: Scene, names: string[]): SceneItem {\n    return names.reduce<any>(\n        (nextScene, name) => nextScene.getItem(name),\n        scene,\n    );\n}\n\nexport function findElementIndexByPosition(elements: HTMLElement[], pos: number): number {\n    const length = elements.length;\n\n    for (let index = 0; index < length; ++index) {\n        const el = elements[index];\n        const box = el.getBoundingClientRect();\n        const top = box.top;\n        const bottom = top + box.height;\n\n        if (top <= pos && pos < bottom) {\n            return index;\n        }\n    }\n    return -1;\n}\n","import { now } from \"@daybrush/utils\";\n\nlet prevTime = 0;\nlet prevX = -1;\nlet prevY = -1;\n\nexport function dblCheck(\n    isDrag: boolean,\n    e: any,\n    clientX: number,\n    clientY: number,\n    callback: (e: any, clientX: number, clientY: number) => void,\n) {\n    const currentTime = now();\n\n    if (!isDrag) {\n        if (\n            prevX === clientX &&\n            prevY === clientY &&\n            currentTime - prevTime <= 500\n        ) {\n            callback(e, clientX, clientY);\n        }\n        prevX = clientX;\n        prevY = clientY;\n        prevTime = currentTime;\n    }\n}\n","export function getKeytimesStructure(maxTime: number) {\n    const keytimes = [];\n\n    for (let time = 0; time <= maxTime; ++time) {\n        keytimes.push({\n            key: time,\n            dataset: {\n                time,\n            },\n            selector: \".keytime\",\n            style: {\n                width: `${100 / maxTime}%`,\n            },\n            children: [\n                {\n                    selector: \"span\",\n                    html: `${time}`,\n                },\n                {selector: \".graduation.start\"},\n                {selector: \".graduation.quarter\"},\n                {selector: \".graduation.half\"},\n                {selector: \".graduation.quarter3\"},\n            ],\n        });\n    }\n    return keytimes;\n}\nexport function getLinesStructure(maxTime: number) {\n    const lines = [];\n\n    for (let time = 0; time <= maxTime; ++time) {\n        lines.push({\n            key: time,\n            selector: \".division_line\",\n            style: {\n                left: `${100 / maxTime * time}%`,\n            },\n        });\n    }\n    return lines;\n}\n","import { getKeytimesStructure } from \"./KeytimesStructure\";\nimport { Ids, ElementStructure } from \"./types\";\n\nexport function getHeaderAreaStructure(ids: Ids, zoom: number, maxDuration: number, maxTime: number): ElementStructure {\n    return {\n        selector: \".header_area\",\n        ref: e => {\n            ids.keyframesScrollAreas = [];\n            ids.keyframesAreas = [];\n            ids.propertiesAreas = [];\n        },\n        children: [\n            {\n                ref: (e: ElementStructure) => {\n                    ids.propertiesAreas[0] = e;\n                },\n                selector: \".properties_area\",\n                children: [\n                    {\n                        selector: \".property\",\n                        html: \"Name\",\n                    },\n                ],\n            },\n            {\n                selector: \".values_area\",\n                children: {\n                    selector: \".value\",\n                    children: {\n                        key: \"add\",\n                        selector: \".add\",\n                        html: \"+\",\n                        ref: (e: ElementStructure) => {\n                            ids.addItem = e;\n                        },\n                    },\n                },\n            },\n            getKeytimesAreaStructure(ids, zoom, maxDuration, maxTime),\n        ],\n    };\n}\n\nexport function getKeytimesAreaStructure(\n    ids: Ids,\n    zoom: number,\n    maxDuration: number,\n    maxTime: number,\n): ElementStructure {\n    return {\n        ref: e => {\n            ids.keyframesAreas[0] = e;\n        },\n        selector: \".keyframes_area\",\n        children: {\n            style: {\n                minWidth: `${50 * maxTime}px`,\n                width: `${Math.min(maxDuration ? maxTime / maxDuration : 1, 2) * zoom * 100}%`,\n            },\n            dataset: {\n                width: Math.min(maxDuration ? maxTime / maxDuration : 1, 2),\n            },\n            ref: (e: ElementStructure) => {\n                ids.keyframesScrollAreas[0] = e;\n            },\n            selector: \".keyframes_scroll_area\",\n            children: {\n                ref: e => {\n                    ids.cursors = [];\n                },\n                selector: \".keyframes\",\n                children: [\n                    {\n                        ref: e => {\n                            ids.keytimesContainer = e;\n                        },\n                        selector: \".keyframes_container\",\n                        children: getKeytimesStructure(maxTime),\n                    },\n                    {\n                        selector: \".keyframe_cursor\",\n                        ref: e => {\n                            ids.cursors[0] = e;\n                        },\n                    },\n                ],\n            },\n        },\n    };\n}\n","import { toValue, applyStyle, isScene, findIndex } from \"./utils\";\nimport { ElementStructure, Ids, TimelineInfo, PropertiesInfo } from \"./types\";\nimport { getLinesStructure } from \"./KeytimesStructure\";\nimport { isUndefined } from \"@daybrush/utils\";\n\nexport function updateKeyframesStructure(keyframes: ElementStructure[], maxTime: number) {\n    keyframes.forEach(keyframe => {\n        const { selector, dataset, style, element } = keyframe;\n        if (selector === \".keyframe\") {\n            style.left = `${dataset.time / maxTime * 100}%`;\n        } else {\n            style.left = `${dataset.from / maxTime * 100}%`,\n                style.width = `${(dataset.to - dataset.from) / maxTime * 100}%`;\n        }\n        applyStyle(element, style);\n    });\n}\n\nexport function getKeyframesAreaStructure(\n    ids: Ids,\n    keyframesList: ElementStructure[],\n    zoom: number,\n    maxDuration: number,\n    maxTime: number,\n): ElementStructure {\n    const width = Math.min(maxDuration ? maxTime / maxDuration : 1, 2);\n    return {\n        ref: e => {\n            ids.keyframesAreas[1] = e;\n        },\n        selector: \".keyframes_area\",\n        children: {\n            style: {\n                minWidth: `${50 * maxTime}px`,\n                width: `${width * zoom * 100}%`,\n            },\n            dataset: {\n                width,\n            },\n            ref: e => {\n                ids.keyframesScrollAreas[1] = e;\n            },\n            selector: \".keyframes_scroll_area\",\n            children: getKeyframesScrollAreaChildrenStructure(ids, keyframesList, maxTime),\n        },\n    };\n}\nexport function getKeyframesScrollAreaChildrenStructure(\n    ids: Ids,\n    keyframesList: ElementStructure[],\n    maxTime: number,\n): ElementStructure[] {\n    return [\n        ...keyframesList,\n        {\n            key: \"cursor\",\n            selector: \".keyframe_cursor\",\n            ref: e => {\n                ids.cursors[1] = e;\n            },\n        },\n        {\n            key: \"lineArea\",\n            ref: e => {\n                ids.lineArea = e;\n            },\n            selector: \".line_area\",\n            children: getLinesStructure(maxTime),\n        },\n    ];\n}\nexport function getKeyframesListStructure(\n    ids: Ids,\n    timelineInfo: TimelineInfo,\n    maxTime: number,\n): ElementStructure[] {\n    const keyframesList: ElementStructure[] = [];\n\n    for (const key in timelineInfo) {\n        const propertiesInfo = timelineInfo[key];\n        const keyframes = getKeyframesStructure(propertiesInfo, maxTime);\n\n        keyframesList.push({\n            ref: (e, i) => {\n                ids.keyframesList[i] = e;\n                ids.keyframesContainers[i] = e.children as ElementStructure;\n            },\n            selector: \".keyframes\",\n            key,\n            dataset: {\n                item: propertiesInfo.isItem ? \"1\" : \"0\",\n                key,\n            },\n            datas: propertiesInfo,\n            children: {\n                selector: \".keyframes_container\",\n                children: keyframes,\n            },\n        });\n    }\n    return keyframesList;\n}\nexport function getDelayFrameStructure(\n    time: number,\n    nextTime: number,\n    maxTime: number,\n): ElementStructure {\n    return {\n        selector: \".keyframe_delay\",\n        key: `delay${time},${nextTime}`,\n        datas: {\n            time: -1,\n        },\n        style: {\n            left: `${time / maxTime * 100}%`,\n            width: `${(nextTime - time) / maxTime * 100}%`,\n        },\n    };\n}\nexport function getKeyframesStructure(\n    propertiesInfo: PropertiesInfo,\n    maxTime: number,\n): ElementStructure[] {\n    const { item, frames, properties } = propertiesInfo;\n    const isItScene = isScene(item);\n    const duration = item.getDuration();\n\n    const keyframes: ElementStructure[] = [];\n    const keyframeGroups: ElementStructure[] = [];\n    const delayFrames: ElementStructure[] = [];\n    const keyframeLines: ElementStructure[] = [];\n\n    const length = frames.length;\n    const hasProperties = properties.length;\n\n    let startIndex = 0;\n    if (length >= 2 && !hasProperties) {\n        const index = findIndex(frames, ([, , value]) => !isUndefined(value));\n        startIndex = Math.min(length - 2, Math.max(frames[0][1] === 0 && frames[1][1] === 0 ? 1 : 0, index));\n        const startFrame = frames[startIndex];\n        const endFrame = frames[length - 1];\n        const time = startFrame[0];\n        const nextTime = endFrame[0];\n\n        keyframeGroups.push({\n            selector: \".keyframe_group\",\n            key: `group`,\n            datas: {\n                time: `${time},${nextTime}`,\n                from: time,\n                to: nextTime,\n            },\n            dataset: {\n                time,\n            },\n            style: {\n                left: `${time / maxTime * 100}%`,\n                width: `${(nextTime - time) / maxTime * 100}%`,\n            },\n        });\n    }\n    frames.forEach(([time, iterationTime, value], i): ElementStructure => {\n        const valueText = toValue(value);\n        if (frames[i + 1]) {\n            const [nextTime, nextIterationTime] = frames[i + 1];\n\n            if (\n                (iterationTime === 0 && nextIterationTime === 0)\n                || (iterationTime === duration && nextIterationTime === duration)\n            ) {\n                delayFrames.push(getDelayFrameStructure(time, nextTime, maxTime));\n            }\n        }\n        if (\n            i === 0\n            && time === 0\n            && iterationTime === 0\n            && isUndefined(value)\n            && !hasProperties\n        ) {\n            return;\n        }\n        if (frames[i + 1]) {\n            const [nextTime, , nextValue] = frames[i + 1];\n            const nextValueText = toValue(nextValue);\n\n            if (\n                !isItScene\n                && !isUndefined(value)\n                && !isUndefined(nextValue)\n                && valueText !== nextValueText\n                && hasProperties\n            ) {\n                keyframeLines.push({\n                    selector: \".keyframe_line\",\n                    key: `line${keyframeLines.length}`,\n                    datas: {\n                        time: `${time},${nextTime}`,\n                        from: time,\n                        to: nextTime,\n                    },\n                    style: {\n                        left: `${time / maxTime * 100}%`,\n                        width: `${(nextTime - time) / maxTime * 100}%`,\n                    },\n                });\n            }\n        }\n\n        if (isItScene || i < startIndex) {\n            return;\n        }\n        keyframes.push({\n            key: `keyframe${i}`,\n            selector: \".keyframe\",\n            dataset: {\n                time,\n            },\n            datas: {\n                time,\n                iterationTime,\n                value: valueText,\n            },\n            style: {\n                left: `${time / maxTime * 100}%`,\n            },\n            html: `${time} ${valueText}`,\n        });\n    });\n\n    return [...keyframeGroups, ...keyframes, ...delayFrames, ...keyframeLines];\n}\n","import { ElementStructure, Ids, TimelineInfo } from \"./types\";\n\nexport function getPropertiesStructure(ids: Ids, timelineInfo: TimelineInfo) {\n    const properties: ElementStructure[] = [];\n\n    for (const key in timelineInfo) {\n        const propertiesInfo = timelineInfo[key];\n        const propertyNames = propertiesInfo.keys;\n        const length = propertyNames.length;\n        const id = propertyNames[length - 1];\n\n        properties.push({\n            ref: (e, i) => {\n                ids.properties[i] = e;\n            },\n            key,\n            selector: \".property\",\n            dataset: {\n                key,\n                object: propertiesInfo.isParent ? \"1\" : \"0\",\n                item: propertiesInfo.isItem ? \"1\" : \"0\",\n            },\n            datas: propertiesInfo,\n            style: {\n                paddingLeft: `${10 + (length - 1) * 20}px`,\n            },\n            children: [\n                { selector: \".arrow\" },\n                {\n                    selector: \"span\",\n                    html: id,\n                },\n                { selector: \".remove\" },\n            ],\n        });\n    }\n    return properties;\n}\n","import { isObject } from \"@daybrush/utils\";\nimport { Ids, ElementStructure, TimelineInfo } from \"./types\";\n\nexport function getValuesStructure(ids: Ids, timelineInfo: TimelineInfo): ElementStructure[] {\n    const values: ElementStructure[] = [];\n\n    for (const key in timelineInfo) {\n        const propertiesInfo = timelineInfo[key];\n        const frames = propertiesInfo.frames;\n        values.push({\n            ref: (e, i) => {\n                ids.values[i] = e;\n            },\n            key,\n            selector: \".value\",\n            dataset: {\n                key,\n                item: propertiesInfo.isItem ? \"1\" : \"0\",\n                object: propertiesInfo.isParent ? \"1\" : \"0\",\n            },\n            datas: propertiesInfo,\n            children: propertiesInfo.isParent\n            ? {\n                key: \"add\",\n                selector: \".add\",\n                html: \"+\",\n            }\n            : {\n                key: \"input\",\n                selector: \"input\",\n                attr: {\n                    value: frames[0] ? frames[0][1] : \"\",\n                },\n            },\n        });\n    }\n    return values;\n}\n","import { getKeyframesAreaStructure, getKeyframesListStructure } from \"./KeyframesStructure\";\nimport { ElementStructure, Ids, TimelineInfo } from \"./types\";\nimport { getPropertiesStructure } from \"./PropertiesStructure\";\nimport { getValuesStructure } from \"./ValuesStructure\";\n\nexport function getScrollAreaStructure(\n    ids: Ids,\n    timelineInfo: TimelineInfo,\n    zoom: number,\n    maxDuration: number,\n    maxTime: number,\n): ElementStructure {\n    const keyframesList: ElementStructure[] = getKeyframesListStructure(ids, timelineInfo, maxTime);\n\n    return {\n        ref: e => {\n            ids.scrollArea = e;\n            ids.keyframesList = [];\n            ids.keyframesContainers = [];\n        },\n        selector: \".scroll_area\",\n        children: [\n            {\n                ref: e => {\n                    ids.propertiesAreas[1] = e;\n                    ids.properties = [];\n                },\n                selector: \".properties_area\",\n                children: [\n                    {\n                        selector: \".properties_scroll_area\",\n                        children: getPropertiesStructure(ids, timelineInfo),\n                    },\n                ],\n            },\n            {\n                ref: e => {\n                    ids.valuesArea = e;\n                    ids.values = [];\n                },\n                selector: \".values_area\",\n                children: getValuesStructure(ids, timelineInfo),\n            },\n            getKeyframesAreaStructure(ids, keyframesList, zoom, maxDuration, maxTime),\n        ],\n    };\n}\n","import { Ids, ElementStructure } from \"./types\";\n\nexport function getControlAreaStructure(ids: Ids): ElementStructure {\n    return {\n        selector: \".header_area.control_area\",\n        children: [\n            {\n                selector: \".properties_area\",\n                ref: (e: ElementStructure) => {\n                    ids.unselectedArea = e;\n                },\n                children: {\n                    selector: \".property\",\n                },\n            },\n            {\n                selector: \".values_area\",\n                children: {\n                    selector: \".value\",\n                },\n            },\n            {\n                selector: \".keyframes_area\",\n                children: {\n                    selector: \".keyframes\",\n                    children: [\n                        {\n                            selector: \"input.time_area\",\n                            ref: (e: ElementStructure) => {\n                                ids.timeArea = e;\n                            },\n                            html: \"???\",\n                            // html: \"0\",\n                        },\n                        {\n                            selector: \".play_control_area\",\n                            children: [\n                                {\n                                    ref: (e: ElementStructure) => {\n                                        ids.prevBtn = e;\n                                    },\n                                    selector: \".control.prev\",\n                                },\n                                {\n                                    ref: (e: ElementStructure) => {\n                                        ids.playBtn = e;\n                                    },\n                                    selector: \".control.play\",\n                                },\n                                {\n                                    ref: (e: ElementStructure) => {\n                                        ids.nextBtn = e;\n                                    },\n                                    selector: \".control.next\",\n                                },\n                            ],\n                        },\n                    ],\n                },\n            },\n        ],\n    };\n}\n","import Scene, { AnimatorState, SceneItem } from \"scenejs\";\nimport { ITERATION_COUNT, DELAY, PLAY_SPEED, DIRECTION, REVERSE, ALTERNATE, ALTERNATE_REVERSE } from \"./consts\";\nimport { TimelineInfo } from \"./types\";\nimport { isScene } from \"./utils\";\nimport { isUndefined, isObject } from \"@daybrush/utils\";\n\nexport const MAXIMUM = 1000000;\nexport function toFixed(num: number) {\n    return Math.round(num * MAXIMUM) / MAXIMUM;\n}\nexport function addEntry(entries: number[][], time: number, keytime: number) {\n    const prevEntry = entries[entries.length - 1];\n\n    (!prevEntry || prevEntry[0] !== time || prevEntry[1] !== keytime) &&\n        entries.push([toFixed(time), toFixed(keytime)]);\n}\nexport function dotNumber(a1: number, a2: number, b1: number, b2: number) {\n    return (a1 * b2 + a2 * b1) / (b1 + b2);\n  }\nexport function getEntries(times: number[], states: AnimatorState[]) {\n    if (!times.length) {\n        return [];\n    }\n    let entries = times.map(time => ([time, time]));\n    let nextEntries = [];\n    const firstEntry = entries[0];\n    if (firstEntry[0] !== 0 && states[states.length - 1][DELAY]) {\n        entries.unshift([0, 0]);\n    }\n\n    states.forEach(state => {\n        const iterationCount = state[ITERATION_COUNT] as number;\n        const delay = state[DELAY];\n        const playSpeed = state[PLAY_SPEED];\n        const direction = state[DIRECTION];\n        const intCount = Math.ceil(iterationCount);\n        const currentDuration = entries[entries.length - 1][0];\n        const length = entries.length;\n        const lastTime = currentDuration * iterationCount;\n\n        for (let i = 0; i < intCount; ++i) {\n            const isReverse =\n                direction === REVERSE ||\n                direction === ALTERNATE && i % 2 ||\n                direction === ALTERNATE_REVERSE && !(i % 2);\n\n            for (let j = 0; j < length; ++j) {\n                const entry = entries[isReverse ? length - j - 1 : j];\n                const time = entry[1];\n                const currentTime = currentDuration * i + (isReverse ? currentDuration - entry[0] : entry[0]);\n                const prevEntry = entries[isReverse ? length - j : j - 1];\n\n                if (currentTime > lastTime) {\n                    if (j !== 0) {\n                        const prevTime = currentDuration * i +\n                            (isReverse ? currentDuration - prevEntry[0] : prevEntry[0]);\n                        const divideTime = dotNumber(prevEntry[1], time, lastTime - prevTime, currentTime - lastTime);\n\n                        addEntry(nextEntries, (delay + currentDuration * iterationCount) / playSpeed, divideTime);\n                    }\n                    break;\n                } else if (\n                    currentTime === lastTime\n                    && nextEntries.length\n                    && nextEntries[nextEntries.length - 1][0] === lastTime + delay\n                ) {\n                    break;\n                }\n                addEntry(nextEntries, (delay + currentTime) / playSpeed, time);\n            }\n        }\n        // delay time\n        delay && nextEntries.unshift([0, nextEntries[0][1]]);\n\n        entries = nextEntries;\n        nextEntries = [];\n    });\n\n    return entries;\n}\nexport function getItemInfo(\n    timelineInfo: TimelineInfo,\n    items: Array<Scene | SceneItem>,\n    names: Array<string | number>,\n    item: SceneItem) {\n    item.update();\n    const times = item.times.slice();\n\n    const originalDuration = item.getDuration();\n    (!item.getFrame(0)) && times.unshift(0);\n    (!item.getFrame(originalDuration)) && times.push(originalDuration);\n    const states = items.slice(1).map(animator => animator.state).reverse();\n    const entries = getEntries(times, states);\n    const parentItem = items[items.length - 2] as Scene;\n\n    (function getPropertyInfo(itemNames: any, ...properties: any[]) {\n        const frames = [];\n        const isParent = isObject(itemNames);\n        const isItem = properties.length === 0;\n        entries.forEach(([time, iterationTime]) => {\n            const value = item.get(iterationTime, ...properties);\n            if (isUndefined(value) && properties.length) {\n                return;\n            }\n            frames.push([time, iterationTime, value]);\n        });\n        const keys = [...names, ...properties];\n        const key = keys.join(\"///\");\n\n        if (key) {\n            timelineInfo[key] = {\n                key,\n                keys,\n                parentItem,\n                isParent,\n                isItem,\n                item,\n                names,\n                properties,\n                frames,\n            };\n        }\n        if (isParent) {\n            for (const property in itemNames) {\n                getPropertyInfo(itemNames[property], ...properties, property);\n            }\n        }\n    })(item.names);\n}\nexport function getTimelineInfo(scene: Scene | SceneItem): TimelineInfo {\n    const timelineInfo: TimelineInfo = {};\n    (function sceneForEach(...items: Array<Scene | SceneItem>) {\n        const length = items.length;\n        const lastItem = items[length - 1];\n        const names = items.slice(1).map(item => item.getId());\n        if (isScene(lastItem)) {\n            if (names.length) {\n                const key = names.join(\"///\");\n\n                const times = [0, lastItem.getDuration()];\n                const entries = getEntries(times, items.slice(1).map(animator => animator.state).reverse());\n                const frames = [];\n                entries.forEach(([time, iterationTime]) => {\n                    frames.push([time, iterationTime, iterationTime]);\n                });\n                timelineInfo[key] = {\n                    key,\n                    keys: names,\n                    isItem: true,\n                    isParent: true,\n                    parentItem: items[length - 2] as Scene,\n                    item: lastItem,\n                    names: [],\n                    properties: [],\n                    frames,\n                };\n            }\n            lastItem.forEach((item: Scene | SceneItem) => {\n                sceneForEach(...items, item);\n            });\n        } else {\n            getItemInfo(timelineInfo, items, names, lastItem);\n        }\n    })(scene);\n    return timelineInfo;\n}\n","import Scene, { SceneItem } from \"scenejs\";\nimport {\n    getTarget,\n    hasClass, removeClass, addClass,\n    flatObject, splitProperty, findElementIndexByPosition,\n    createElement, updateElement, findIndexByProperty, findStructure, numberFormat, isScene, findStructureByProperty,\n} from \"./utils\";\nimport { drag } from \"@daybrush/drag\";\nimport { CSS, SUPPORT_TOUCH, SUPPORT_POINTER_EVENTS } from \"./consts\";\nimport { IObject, addEvent, isUndefined } from \"@daybrush/utils\";\nimport Axes, { PinchInput } from \"@egjs/axes\";\nimport { ElementStructure, Ids, PropertiesInfo, TimelineInfo } from \"./types\";\nimport { dblCheck } from \"./dblcheck\";\nimport KeyController from \"keycon\";\nimport DataDOM from \"data-dom\";\nimport { getHeaderAreaStructure, getKeytimesAreaStructure } from \"./HeaderAreaStructure\";\nimport { getScrollAreaStructure } from \"./ScrollAreaStructure\";\nimport { getControlAreaStructure } from \"./ControlAreaStructure\";\nimport Component from \"@egjs/component\";\nimport { getTimelineInfo } from \"./TimelineInfo\";\nimport { Info } from \"./Info\";\n\nlet isExportCSS = false;\n\nexport default class Timeline extends Component {\n    public scene: Scene | SceneItem;\n    public options: {\n        keyboard?: boolean,\n    };\n    private maxTime: number = 0;\n    private axes: Axes;\n    private selectedProperty: string = \"\";\n    private selectedTime: number = -1;\n    private keycon: KeyController;\n    private datadom: DataDOM<ElementStructure>;\n    private structure: ElementStructure;\n    private ids: Ids = {};\n    private timelineInfo: TimelineInfo;\n    constructor(scene: Scene | SceneItem, parentEl: HTMLElement, options: {\n        keyboard?: boolean,\n    } = {}) {\n        super();\n        this.options = {\n            keyboard: true,\n            ...options,\n        };\n        scene.finish();\n        this.scene = scene;\n        this.initStructure(scene, parentEl);\n        this.initEditor();\n        this.initScroll();\n        this.initWheelZoom();\n        this.initDragKeyframes();\n        this.initClickProperty();\n        this.initController();\n        this.initDragValues();\n        this.initKeyController();\n\n        this.setTime(0);\n\n        // new Info(this, parentEl);\n    }\n    public getElement() {\n        return this.structure.element;\n    }\n    // scene control\n    public prev() {\n        this.setTime(this.scene.getTime() - 0.05);\n    }\n    public next() {\n        this.setTime(this.scene.getTime() + 0.05);\n    }\n    public finish() {\n        this.scene.finish();\n    }\n    public togglePlay() {\n        const scene = this.scene;\n        if (scene.getPlayState() === \"running\") {\n            scene.pause();\n        } else {\n            scene.play();\n        }\n    }\n    public setTime(time: number) {\n        const scene = this.scene;\n        const direction = scene.getDirection();\n\n        scene.pause();\n\n        if (direction === \"normal\" || direction === \"alternate\") {\n            scene.setTime(time);\n        } else {\n            scene.setTime(scene.getDuration() - time);\n        }\n    }\n    public update() {\n        const scene = this.scene;\n        this.timelineInfo = getTimelineInfo(scene);\n        const maxDuration = Math.ceil(scene.getDuration());\n        const maxTime = Math.max(this.maxTime, maxDuration);\n        let zoom = this.axes.get([\"zoom\"]).zoom;\n        const currentMaxTime = this.maxTime;\n        this.maxTime = maxTime;\n        const ids = this.ids;\n        const prevKeytimesArea = ids.keyframesAreas[0];\n        const nextZoom = currentMaxTime > 1 ? maxTime / currentMaxTime : 1;\n\n        zoom = Math.max(1, zoom * nextZoom);\n        this.axes.axm.set({ zoom });\n        // update keytimes\n        this.datadom.update(\n            prevKeytimesArea,\n            getKeytimesAreaStructure(ids, zoom, maxTime, maxTime),\n        );\n\n        const nextScrollAreaStructure = getScrollAreaStructure(\n            ids,\n            this.timelineInfo,\n            this.axes.get([\"zoom\"]).zoom,\n            maxTime, maxTime,\n        );\n\n        this.datadom.update(\n            ids.scrollArea,\n            nextScrollAreaStructure,\n        );\n        this.setTime(scene.getTime());\n    }\n    private newItem(scene: Scene) {\n        const name = prompt(\"Add Item\");\n\n        if (!name) {\n            return;\n        }\n        (this.scene as Scene).newItem(name);\n        this.update();\n    }\n    private newProperty(item: SceneItem, properties: string[]) {\n        const property = prompt(\"new property\");\n\n        if (!property) {\n            return;\n        }\n        item.set(item.getIterationTime(), ...properties, property, 0);\n        this.update();\n    }\n    // init\n    private initController() {\n        const ids = this.ids;\n        const playBtn = this.ids.playBtn.element;\n        const scene = this.scene;\n\n        this.ids.addItem.element.addEventListener(\"click\", e => {\n            if (isScene(this.scene)) {\n                this.newItem(this.scene);\n            } else {\n                this.newProperty(this.scene, []);\n            }\n        });\n        playBtn.addEventListener(\"click\", e => {\n            this.togglePlay();\n            e.preventDefault();\n        });\n        ids.unselectedArea.element.addEventListener(\"click\", e => {\n            this.select(\"\", -1);\n        });\n        ids.prevBtn.element.addEventListener(\"click\", e => {\n            this.prev();\n            e.preventDefault();\n        });\n        ids.nextBtn.element.addEventListener(\"click\", e => {\n            this.next();\n            e.preventDefault();\n        });\n        scene.on(\"play\", () => {\n            addClass(playBtn, \"pause\");\n            removeClass(playBtn, \"play\");\n            // playBtn.innerHTML = \"pause\";\n        });\n        scene.on(\"paused\", () => {\n            addClass(playBtn, \"play\");\n            removeClass(playBtn, \"pause\");\n            // playBtn.innerHTML = \"play\";\n        });\n        if (this.options.keyboard) {\n            new KeyController(ids.timeArea.element)\n            .keydown(e => {\n                !e.isToggle && e.inputEvent.stopPropagation();\n            })\n            .keyup(e => {\n                !e.isToggle && e.inputEvent.stopPropagation();\n            })\n            .keyup(\"enter\", e => {\n                // go to time\n                const element = ids.timeArea.element;\n                const value = (element as HTMLInputElement).value;\n                const result = /(\\d+):(\\d+):(\\d+)/g.exec(value);\n\n                if (!result) {\n                    return;\n                }\n                const minute = parseFloat(result[1]);\n                const second = parseFloat(result[2]);\n                const milisecond = parseFloat(`0.${result[3]}`);\n                const time = minute * 60 + second + milisecond;\n\n                this.setTime(time);\n            });\n        }\n    }\n    private initKeyController() {\n        const ids = this.ids;\n\n        window.addEventListener(\"blur\", () => {\n            removeClass(ids.timeline.element, \"alt\");\n        });\n\n        this.keycon = new KeyController()\n        .keydown(\"alt\", () => {\n            addClass(ids.timeline.element, \"alt\");\n        })\n        .keyup(\"alt\", () => {\n            removeClass(ids.timeline.element, \"alt\");\n        });\n\n        if (this.options.keyboard) {\n            this.keycon.keydown(\"space\", ({inputEvent}) => {\n                inputEvent.preventDefault();\n            })\n            .keydown(\"left\", e => {\n                this.prev();\n            })\n            .keydown(\"right\", e => {\n                this.next();\n            })\n            .keyup(\"backspace\", () => {\n                this.removeKeyframe(this.selectedProperty);\n            })\n            .keyup(\"esc\", () => {\n                this.finish();\n            })\n            .keyup(\"space\", () => {\n                this.togglePlay();\n            });\n        }\n    }\n    private initStructure(scene: Scene | SceneItem, parentEl: HTMLElement) {\n        this.timelineInfo = getTimelineInfo(scene);\n        const duration = Math.ceil(scene.getDuration());\n        const maxDuration = Math.ceil(duration);\n        const maxTime = maxDuration;\n        const ids = this.ids;\n        let timelineCSS: ElementStructure;\n\n        this.maxTime = maxTime;\n        if (!isExportCSS) {\n            timelineCSS = {\n                selector: \"style.style\",\n                html: CSS,\n            };\n            isExportCSS = true;\n        }\n\n        const structure: ElementStructure = {\n            selector: \".timeline\",\n            ref: e => {\n                ids.timeline = e;\n            },\n            children: [\n                timelineCSS,\n                getControlAreaStructure(ids),\n                getHeaderAreaStructure(ids, 1, maxDuration, maxTime),\n                getScrollAreaStructure(ids, this.timelineInfo, 1, maxDuration, maxTime),\n            ],\n        };\n        this.datadom = new DataDOM(\n            createElement,\n            updateElement,\n        );\n        this.structure = this.datadom.render(structure, parentEl);\n\n        // fold all\n        this.ids.properties.forEach((property, i) => {\n            const propertiesInfo = property.datas as PropertiesInfo;\n            const {keys, isParent} = propertiesInfo;\n            if (keys.length === 1 && isParent) {\n                this.fold(i);\n            }\n        });\n    }\n    private initScroll() {\n        const {\n            keyframesAreas,\n        } = this.ids;\n        let isScrollKeyframe = false;\n\n        const headerKeyframesArea = keyframesAreas[0].element;\n        const scrollKeyframesArea = keyframesAreas[1].element;\n        headerKeyframesArea.addEventListener(\"scroll\", () => {\n            if (isScrollKeyframe) {\n                isScrollKeyframe = false;\n            } else {\n                isScrollKeyframe = true;\n                scrollKeyframesArea.scrollLeft = headerKeyframesArea.scrollLeft;\n            }\n        });\n        scrollKeyframesArea.addEventListener(\"scroll\", () => {\n            if (isScrollKeyframe) {\n                isScrollKeyframe = false;\n            } else {\n                isScrollKeyframe = true;\n                headerKeyframesArea.scrollLeft = scrollKeyframesArea.scrollLeft;\n            }\n        });\n    }\n    private initWheelZoom() {\n        const ids = this.ids;\n        const keyframesScrollAreas = ids.keyframesScrollAreas;\n        const headerArea = keyframesScrollAreas[0].element;\n        const scrollArea = keyframesScrollAreas[1].element;\n\n        const axes = new Axes(\n            {\n                zoom: {\n                    range: [1, Infinity],\n                },\n            },\n            {},\n            { zoom: 1 },\n        );\n\n        if (SUPPORT_TOUCH || SUPPORT_POINTER_EVENTS) {\n            axes.connect(\"zoom\", new PinchInput(scrollArea, {\n                scale: 0.1,\n                hammerManagerOptions: {\n                    touchAction: \"auto\",\n                },\n            }));\n        }\n        axes.on(\"hold\", e => {\n            if (e.inputEvent) {\n                e.inputEvent.preventDefault();\n            }\n        });\n        axes.on(\"change\", e => {\n            const scale = ids.keyframesScrollAreas[0].dataset.width;\n            const width = e.pos.zoom * scale * 100;\n\n            ids.keyframesScrollAreas.forEach(({ element }) => {\n                element.style.width = `${width}%`;\n            });\n\n            if (e.inputEvent) {\n                e.inputEvent.preventDefault();\n            }\n        });\n\n        this.axes = axes;\n        headerArea.addEventListener(\"wheel\", e => {\n            const delta = e.deltaY;\n\n            axes.setBy({ zoom: delta / 5000 });\n            !e.deltaX && e.preventDefault();\n        });\n\n        addEvent(scrollArea, \"wheel\", e => {\n            if (!this.keycon.altKey) {\n                return;\n            }\n            e.preventDefault();\n            const delta = e.deltaY;\n\n            axes.setBy({ zoom: delta / 5000 });\n        });\n    }\n    private select(selectedProperty: string, keyframeTime?: number) {\n        const prevSelectedProperty = this.selectedProperty;\n        const prevSelectedTime = this.selectedTime;\n        const ids = this.ids;\n        const values = ids.values;\n        const properties = ids.properties;\n        const keyframesList = ids.keyframesList;\n\n        this.selectedProperty = selectedProperty;\n        this.scene.pause();\n        if (prevSelectedProperty) {\n            const prevSelectedIndex = findIndexByProperty(prevSelectedProperty, properties);\n\n            removeClass(properties[prevSelectedIndex].element, \"select\");\n            removeClass(values[prevSelectedIndex].element, \"select\");\n            removeClass(keyframesList[prevSelectedIndex].element, \"select\");\n\n            if (prevSelectedTime >= 0) {\n                const keyframes = ids.keyframesContainers[prevSelectedIndex].children as ElementStructure[];\n\n                keyframes.forEach(keyframe => {\n                    if (keyframe.datas.time === prevSelectedTime) {\n                        removeClass(keyframe.element, \"select\");\n                    }\n                });\n                this.selectedTime = -1;\n            }\n        }\n        let selectedItem: Scene | SceneItem = this.scene;\n        if (selectedProperty) {\n            if (document.activeElement) {\n                (document.activeElement as HTMLElement).blur();\n            }\n\n            const selectedIndex = findIndexByProperty(selectedProperty, properties);\n            addClass(properties[selectedIndex].element, \"select\");\n            addClass(values[selectedIndex].element, \"select\");\n            addClass(keyframesList[selectedIndex].element, \"select\");\n\n            selectedItem = (ids.keyframesList[selectedIndex].datas as PropertiesInfo).item;\n            if (keyframeTime >= 0) {\n                const selectedPropertyStructure = ids.keyframesContainers[selectedIndex];\n                const keyframes = selectedPropertyStructure.children as ElementStructure[];\n\n                keyframes.forEach(keyframe => {\n                    if (keyframe.datas.time === keyframeTime) {\n                        addClass(keyframe.element, \"select\");\n                    }\n                });\n                this.selectedTime = keyframeTime;\n            }\n        }\n        this.trigger(\"select\", {\n            selectedItem,\n            selectedProperty: this.selectedProperty,\n            selectedTime: this.selectedTime,\n            prevSelectedProperty,\n            prevSelectedTime,\n        });\n    }\n    private initClickProperty() {\n        const ids = this.ids;\n        const {\n            propertiesAreas,\n        } = ids;\n\n        propertiesAreas[1].element.addEventListener(\"click\", e => {\n            const properties = ids.properties.map(property => property.element);\n            const length = properties.length;\n            const arrow = getTarget(e.target as HTMLElement, el => hasClass(el, \"arrow\"));\n            const remove = getTarget(e.target as HTMLElement, el => hasClass(el, \"remove\"));\n            const target = getTarget(e.target as HTMLElement, el => hasClass(el, \"property\"));\n\n            if (!target) {\n                return;\n            }\n            const index = properties.indexOf(target);\n\n            if (index === -1) {\n                return;\n            }\n            const selectedProperty = ids.properties[index];\n            if (remove) {\n                this.remove(selectedProperty.datas as PropertiesInfo);\n            } else {\n                this.select(selectedProperty.dataset.key);\n\n                if (arrow) {\n                    this.fold(index);\n                }\n            }\n        });\n    }\n    private setInputs(obj: IObject<any>) {\n        const valuesArea = this.ids.valuesArea.element;\n        for (const name in obj) {\n            valuesArea.querySelector<HTMLInputElement>(`[data-key=\"${name}\"] input`).value = obj[name];\n        }\n    }\n    private moveCursor(time: number) {\n        const {cursors} = this.ids;\n        const maxTime = this.maxTime;\n        const px = 15 - 30 * time / maxTime;\n        const percent = 100 * time / maxTime;\n        const left = `calc(${percent}% + ${px}px)`;\n\n        cursors.forEach(cursor => {\n            cursor.element.style.left = left;\n        });\n    }\n    private initDragKeyframes() {\n        const ids = this.ids;\n        const {\n            scrollArea,\n            timeArea,\n            cursors,\n            keyframesAreas,\n            keyframesScrollAreas,\n        } = ids;\n        const scene = this.scene;\n\n        scene.on(\"animate\", e => {\n            const time = e.time;\n            this.moveCursor(time);\n            this.setInputs(flatObject(e.frames || e.frame.get()));\n            const minute = numberFormat(Math.floor(time / 60), 2);\n            const second = numberFormat(Math.floor(time % 60), 2);\n            const milisecond = numberFormat(Math.floor((time % 1) * 100), 3, true);\n            (timeArea.element as HTMLInputElement).value = `${minute}:${second}:${milisecond}`;\n        });\n        const getDistTime = (\n            distX: number,\n            rect: ClientRect = keyframesScrollAreas[1].element.getBoundingClientRect(),\n        ) => {\n            const scrollAreaWidth = rect.width - 30;\n            const percentage = Math.min(scrollAreaWidth, distX) / scrollAreaWidth;\n            const time = this.maxTime * percentage;\n\n            return Math.round(time * 20) / 20;\n        };\n        const getTime = (clientX: number) => {\n            const rect = keyframesScrollAreas[1].element.getBoundingClientRect();\n            const scrollAreaX = rect.left + 15;\n            const x = Math.max(clientX - scrollAreaX, 0);\n\n            return getDistTime(x, rect);\n        };\n        const move = (clientX: number) => {\n            this.setTime(getTime(clientX));\n        };\n        const click = (e, clientX, clientY) => {\n            const target = getTarget(e.target as HTMLElement, el => hasClass(el, \"keyframe\"));\n            const time = target ? parseFloat(target.getAttribute(\"data-time\")) : getTime(clientX);\n\n            this.setTime(time);\n            const list = ids.keyframesList;\n            const index = findElementIndexByPosition(\n                list.map(({element}) => element),\n                clientY,\n            );\n\n            if (index > -1) {\n                this.select(list[index].dataset.key, time);\n            }\n            e.preventDefault();\n        };\n        const dblclick = (e, clientX, clientY) => {\n            const list = ids.keyframesList;\n            const index = findElementIndexByPosition(\n                list.map(({element}) => element),\n                clientY,\n            );\n\n            if (index === -1) {\n                return;\n            }\n            this.addKeyframe(index, getTime(clientX));\n        };\n        drag(cursors[0].element, {\n            dragstart: ({inputEvent}) => {\n                inputEvent.stopPropagation();\n            },\n            drag: ({ clientX }) => {\n                move(clientX);\n            },\n            container: window,\n        });\n\n        let dragItem: Scene | SceneItem = null;\n        let dragDelay: number = 0;\n        let dragTarget: HTMLElement = null;\n\n        keyframesScrollAreas.forEach(({ element }) => {\n            drag(element, {\n                container: window,\n                dragstart: ({ inputEvent }) => {\n                    dragTarget = getTarget(inputEvent.target, el => hasClass(el, \"keyframe_group\"));\n                    if (dragTarget) {\n                        const properties = this.ids.properties;\n                        const keyframesTarget = getTarget(dragTarget, el => hasClass(el, \"keyframes\"));\n                        const key = keyframesTarget.getAttribute(\"data-key\");\n                        const property = findStructureByProperty(key, properties);\n                        const propertiesInfo = property.datas as PropertiesInfo;\n\n                        dragItem = propertiesInfo.item;\n                        dragDelay = dragItem.getDelay();\n                    }\n                },\n                drag: ({ distX, deltaX, deltaY, inputEvent }) => {\n                    if (dragTarget) {\n                        dragItem.setDelay(Math.max(dragDelay + getDistTime(distX), 0));\n                        this.update();\n                    } else {\n                        keyframesAreas[1].element.scrollLeft -= deltaX;\n                        scrollArea.element.scrollTop -= deltaY;\n                        inputEvent.preventDefault();\n                    }\n                },\n                dragend: ({ isDrag, clientX, clientY, inputEvent }) => {\n                    dragTarget = null;\n                    dragItem = null;\n                    dragDelay = null;\n                    !isDrag && click(inputEvent, clientX, clientY);\n                    dblCheck(isDrag, inputEvent, clientX, clientY, dblclick);\n                },\n            });\n        });\n    }\n    private initDragValues() {\n        const ids = this.ids;\n        const element = ids.valuesArea.element;\n        let dragTarget: HTMLInputElement = null;\n        let dragTargetValue: any;\n\n        addEvent(element, \"click\", e => {\n            const addedElement = getTarget(dragTarget, el => hasClass(el, \"add\"));\n            if (!addedElement) {\n                return;\n            }\n            const valueElement = addedElement.parentElement as HTMLElement;\n            const index = findIndexByProperty(valueElement.getAttribute(\"data-key\"), ids.values);\n\n            if (index < 0) {\n                return;\n            }\n\n            const propertiesInfo = ids.properties[index].datas as PropertiesInfo;\n            const properties = propertiesInfo.properties.slice();\n            const item = propertiesInfo.item;\n\n            if (isScene(item)) {\n                this.newItem(item);\n            } else {\n                this.newProperty(item, properties);\n            }\n\n        });\n        drag(element, {\n            container: window,\n            dragstart: e => {\n                dragTarget = e.inputEvent.target;\n                dragTargetValue = dragTarget.value;\n\n                if (!this.keycon.altKey || !getTarget(dragTarget, el => el.nodeName === \"INPUT\")) {\n                    return false;\n                }\n            },\n            drag: e => {\n                const nextValue = dragTargetValue.replace(/-?\\d+/g, num => {\n                    return `${parseFloat(num) + Math.round(e.distX / 2)}`;\n                });\n\n                dragTarget.value = nextValue;\n            },\n            dragend: e => {\n                this.edit(dragTarget, dragTarget.value);\n            },\n        });\n    }\n    private addKeyframe(index: number, time: number) {\n        const list = this.ids.keyframesList;\n        const property = list[index].dataset.key;\n        const {item, properties} = list[index].datas as PropertiesInfo;\n\n        this.select(property, time);\n\n        const value = ((this.ids.values[index].children as ElementStructure).element as HTMLInputElement).value;\n\n        this.editKeyframe(index, value);\n    }\n    private fold(index: number, forceFold?: boolean) {\n        const ids = this.ids;\n        const {properties, values, keyframesList} = ids;\n        const selectedProperty = properties[index];\n        const length = properties.length;\n        let max;\n        for (max = index + 1; max < length; ++max) {\n            if (properties[max].datas.key.indexOf(selectedProperty.datas.key + \"///\") !== 0) {\n                break;\n            }\n        }\n        const foldProperties = properties.slice(index + 1, max);\n        const foldValues = values.slice(index + 1, max);\n        const foldKeyframesList = keyframesList.slice(index + 1, max);\n        const selectedElement = selectedProperty.element;\n        // true : unfold, false: fold\n        const isFold = isUndefined(forceFold) ? selectedElement.getAttribute(\"data-fold\") === \"1\" : forceFold;\n\n        selectedElement.setAttribute(\"data-fold\", isFold ? \"0\" : \"1\");\n        const foldFunction = (isFold ? removeClass : addClass);\n        const depth = selectedProperty.datas.keys.length;\n\n        foldProperties.forEach((property, i) => {\n            const datas = property.datas as PropertiesInfo;\n            if (depth + 1 < datas.keys.length) {\n                return;\n            }\n            foldFunction(property.element, \"fold\");\n            foldFunction(foldValues[i].element, \"fold\");\n            foldFunction(foldKeyframesList[i].element, \"fold\");\n            if (datas.isParent) {\n                if (!isFold) {\n                    this.fold(index + 1 + i, false);\n                } else {\n                    // always fold\n                    property.element.setAttribute(\"data-fold\", \"1\");\n                }\n            } else {\n                property.element.setAttribute(\"data-fold\", isFold ? \"0\" : \"1\");\n            }\n        });\n    }\n    private remove(propertiesInfo: PropertiesInfo) {\n        const {key, isItem, parentItem, item: targetItem, properties} = propertiesInfo;\n        if (isItem) {\n            let targetName: string = null;\n            parentItem.forEach((item, name) => {\n                if (item === targetItem) {\n                    targetName = name;\n                    return;\n                }\n            });\n            if (targetName != null) {\n                parentItem.removeItem(targetName);\n            }\n        } else {\n            const times = (targetItem as SceneItem).times;\n\n            times.forEach(time => {\n                (targetItem as SceneItem).remove(time, ...properties);\n            });\n        }\n        if (this.selectedProperty === key) {\n            this.selectedProperty = \"\";\n            this.selectedTime = -1;\n        }\n        this.update();\n    }\n    private removeKeyframe(property: string) {\n        const propertiesInfo = this.timelineInfo[property];\n        if (!property || !propertiesInfo || isScene(propertiesInfo.item)) {\n            return;\n        }\n\n        const properties = propertiesInfo.properties;\n        const item = propertiesInfo.item;\n\n        item.remove(item.getIterationTime(), ...properties);\n        this.update();\n    }\n    private editKeyframe(index: number, value: any) {\n        const ids = this.ids;\n        const isObjectData = ids.properties[index].dataset.object === \"1\";\n\n        if (isObjectData) {\n            return;\n        }\n        const propertiesInfo = ids.keyframesList[index].datas as PropertiesInfo;\n        const item = propertiesInfo.item;\n        const properties = propertiesInfo.properties;\n\n        item.set(item.getIterationTime(), ...properties, value);\n        this.update();\n    }\n    private restoreKeyframes() {\n        this.setTime(this.scene.getTime());\n    }\n    private edit(target: HTMLInputElement, value: any) {\n        const parentEl = getTarget(target, el => hasClass(el, \"value\"));\n\n        if (!parentEl) {\n            return;\n        }\n        const values = this.ids.values.map(({element}) => element);\n        const index = values.indexOf(parentEl);\n\n        if (index === -1) {\n            return;\n        }\n        this.editKeyframe(index, value);\n    }\n    private initEditor() {\n        const valuesArea = this.ids.valuesArea.element;\n\n        new KeyController(valuesArea)\n        .keydown(e => {\n            !e.isToggle && e.inputEvent.stopPropagation();\n        })\n        .keyup(e => {\n            !e.isToggle && e.inputEvent.stopPropagation();\n        })\n        .keyup(\"enter\", e => {\n            const target = e.inputEvent.target as HTMLInputElement;\n\n            this.edit(target, target.value);\n        })\n        .keyup(\"esc\", e => {\n            const target = e.inputEvent.target as HTMLInputElement;\n\n            target.blur();\n        });\n        valuesArea.addEventListener(\"focusout\", e => {\n            this.restoreKeyframes();\n        });\n    }\n}\n"],"names":["PREFIX","SUPPORT_POINTER_EVENTS","window","SUPPORT_TOUCH","CSS2","replace","CSS","DIRECTION","ITERATION_COUNT","DELAY","PLAY_SPEED","ALTERNATE","REVERSE","ALTERNATE_REVERSE","numberFormat","num","count","isRight","length","arr","push","i","join","applyStyle","el","style","name","findIndex","callback","find","findIndexByProperty","selectedProperty","structures","_a","key","findStructureByProperty","createElement","structure","selector","dataset","attr","html","classNames","match","tag","id","document","className","map","setAttribute","innerHTML","updateElement","prevStructure","nextStructure","element","keys","value","toValue","type","Array","isArray","k","flatObject","obj","newObj","isObject","nextObj","isFrame","get","nextName","getTarget","target","conditionCallback","parentTarget","body","parentNode","hasClass","hasClass2","addClass","addClass2","removeClass","removeClass2","isScene","constructor","prototype","getItem","toCSS","findElementIndexByPosition","elements","pos","index","box","getBoundingClientRect","top","bottom","height","prevTime","prevX","prevY","dblCheck","isDrag","e","clientX","clientY","currentTime","now","getKeytimesStructure","maxTime","keytimes","time","width","children","getLinesStructure","lines","left","getHeaderAreaStructure","ids","zoom","maxDuration","ref","keyframesScrollAreas","keyframesAreas","propertiesAreas","addItem","getKeytimesAreaStructure","minWidth","Math","min","cursors","keytimesContainer","getKeyframesAreaStructure","keyframesList","getKeyframesScrollAreaChildrenStructure","lineArea","getKeyframesListStructure","timelineInfo","propertiesInfo","keyframes","getKeyframesStructure","keyframesContainers","item","isItem","datas","getDelayFrameStructure","nextTime","frames","properties","isItScene","duration","getDuration","keyframeGroups","delayFrames","keyframeLines","hasProperties","startIndex","isUndefined","max","startFrame","endFrame","from","to","forEach","iterationTime","valueText","_b","nextIterationTime","_c","nextValue","nextValueText","getPropertiesStructure","propertyNames","object","isParent","paddingLeft","getValuesStructure","values","getScrollAreaStructure","scrollArea","valuesArea","getControlAreaStructure","unselectedArea","timeArea","prevBtn","playBtn","nextBtn","MAXIMUM","toFixed","round","addEntry","entries","keytime","prevEntry","dotNumber","a1","a2","b1","b2","getEntries","times","states","nextEntries","firstEntry","unshift","state","iterationCount","delay","playSpeed","direction","intCount","ceil","currentDuration","lastTime","isReverse","j","entry","divideTime","getItemInfo","items","names","update","slice","originalDuration","getFrame","animator","reverse","parentItem","getPropertyInfo","itemNames","_i","property","getTimelineInfo","scene","sceneForEach","lastItem","getId","frames_1","isExportCSS","tslib_1","parentEl","options","_super","_this","keyboard","finish","initStructure","initEditor","initScroll","initWheelZoom","initDragKeyframes","initClickProperty","initController","initDragValues","initKeyController","setTime","getTime","getPlayState","pause","play","getDirection","axes","currentMaxTime","prevKeytimesArea","nextZoom","axm","set","datadom","nextScrollAreaStructure","prompt","newItem","getIterationTime","addEventListener","newProperty","togglePlay","preventDefault","select","prev","next","on","KeyController","keydown","isToggle","inputEvent","stopPropagation","keyup","result","exec","minute","parseFloat","second","milisecond","timeline","keycon","removeKeyframe","timelineCSS","DataDOM","render","fold","isScrollKeyframe","headerKeyframesArea","scrollKeyframesArea","scrollLeft","headerArea","Axes","range","Infinity","connect","PinchInput","scale","hammerManagerOptions","touchAction","delta","deltaY","setBy","deltaX","addEvent","altKey","keyframeTime","prevSelectedProperty","prevSelectedTime","selectedTime","prevSelectedIndex","keyframe","selectedItem","activeElement","blur","selectedIndex","selectedPropertyStructure","trigger","arrow","remove","indexOf","querySelector","px","percent","cursor","moveCursor","setInputs","frame","floor","getDistTime","distX","rect","scrollAreaWidth","percentage","scrollAreaX","x","move","click","getAttribute","list","dblclick","addKeyframe","drag","dragstart","container","dragItem","dragDelay","dragTarget","keyframesTarget","getDelay","setDelay","scrollTop","dragend","dragTargetValue","addedElement","valueElement","parentElement","nodeName","edit","editKeyframe","forceFold","foldProperties","foldValues","foldKeyframesList","selectedElement","isFold","foldFunction","depth","targetItem","targetName_1","removeItem","isObjectData","restoreKeyframes","Component"],"mappings":"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"}